/**
 * generated by Xtext 2.9.0
 */
package org.eclipse.fx.ide.css.cssext.ui;

import com.google.inject.Binder;
import com.google.inject.binder.AnnotatedBindingBuilder;
import com.google.inject.matcher.Matcher;
import com.google.inject.matcher.Matchers;
import org.eclipse.fx.core.guice.FXLoggerListener;
import org.eclipse.fx.core.guice.OSGiLoggerFactoryProvider;
import org.eclipse.fx.core.log.LoggerFactory;
import org.eclipse.fx.ide.css.cssext.extapi.CssDocApi;
import org.eclipse.fx.ide.css.cssext.parser.CssExtParser;
import org.eclipse.fx.ide.css.cssext.ui.AbstractCssExtDslUiModule;
import org.eclipse.fx.ide.css.cssext.ui.doc.CssExtDocParser;
import org.eclipse.fx.ide.css.cssext.ui.highlighting.CssExtHighlightingConfiguration;
import org.eclipse.fx.ide.css.cssext.ui.highlighting.CssExtSemanticHighlightingCalculator;
import org.eclipse.fx.ide.css.cssext.ui.internal.CssExtImpl;
import org.eclipse.fx.ide.css.extapi.CssExt;
import org.eclipse.fx.ide.css.ui.hover.CssHoverProvider;
import org.eclipse.fx.ide.css.ui.hover.ExtApiDelegatingDocumentationProvider;
import org.eclipse.ui.plugin.AbstractUIPlugin;
import org.eclipse.xtend.lib.annotations.FinalFieldsConstructor;
import org.eclipse.xtext.documentation.IEObjectDocumentationProvider;
import org.eclipse.xtext.ui.editor.hover.IEObjectHoverProvider;
import org.eclipse.xtext.ui.editor.syntaxcoloring.IHighlightingConfiguration;
import org.eclipse.xtext.ui.editor.syntaxcoloring.ISemanticHighlightingCalculator;

/**
 * Use this class to register components to be used within the Eclipse IDE.
 */
@FinalFieldsConstructor
@SuppressWarnings("all")
public class CssExtDslUiModule extends AbstractCssExtDslUiModule {
  @Override
  public void configure(final Binder binder) {
    AnnotatedBindingBuilder<CssExt> _bind = binder.<CssExt>bind(CssExt.class);
    _bind.to(CssExtImpl.class);
    AnnotatedBindingBuilder<ISemanticHighlightingCalculator> _bind_1 = binder.<ISemanticHighlightingCalculator>bind(ISemanticHighlightingCalculator.class);
    _bind_1.to(CssExtSemanticHighlightingCalculator.class);
    AnnotatedBindingBuilder<IHighlightingConfiguration> _bind_2 = binder.<IHighlightingConfiguration>bind(IHighlightingConfiguration.class);
    _bind_2.to(CssExtHighlightingConfiguration.class);
    AnnotatedBindingBuilder<CssExtParser> _bind_3 = binder.<CssExtParser>bind(CssExtParser.class);
    CssExtParser _cssExtParser = new CssExtParser();
    _bind_3.toInstance(_cssExtParser);
    AnnotatedBindingBuilder<CssExtDocParser> _bind_4 = binder.<CssExtDocParser>bind(CssExtDocParser.class);
    CssExtDocParser _cssExtDocParser = new CssExtDocParser();
    _bind_4.toInstance(_cssExtDocParser);
    AnnotatedBindingBuilder<LoggerFactory> _bind_5 = binder.<LoggerFactory>bind(LoggerFactory.class);
    _bind_5.toProvider(OSGiLoggerFactoryProvider.class);
    Matcher<Object> _any = Matchers.any();
    FXLoggerListener _fXLoggerListener = new FXLoggerListener();
    binder.bindListener(_any, _fXLoggerListener);
    AnnotatedBindingBuilder<IEObjectHoverProvider> _bind_6 = binder.<IEObjectHoverProvider>bind(IEObjectHoverProvider.class);
    _bind_6.to(CssHoverProvider.class);
    AnnotatedBindingBuilder<IEObjectDocumentationProvider> _bind_7 = binder.<IEObjectDocumentationProvider>bind(IEObjectDocumentationProvider.class);
    _bind_7.to(ExtApiDelegatingDocumentationProvider.class);
    AnnotatedBindingBuilder<CssDocApi> _bind_8 = binder.<CssDocApi>bind(CssDocApi.class);
    _bind_8.to(CssExtDocParser.class);
    super.configure(binder);
  }
  
  public CssExtDslUiModule(final AbstractUIPlugin plugin) {
    super(plugin);
  }
}
