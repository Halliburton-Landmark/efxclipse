/**
 * generated by Xtext 2.9.0
 */
package org.eclipse.fx.ide.css;

import com.google.inject.Binder;
import com.google.inject.binder.AnnotatedBindingBuilder;
import org.eclipse.fx.ide.css.AbstractCssDslRuntimeModule;
import org.eclipse.fx.ide.css.CssResourceFactory;
import org.eclipse.fx.ide.css.CssStateResource;
import org.eclipse.fx.ide.css.conversion.CssTerminalConverters;
import org.eclipse.fx.ide.css.extapi.CssExtProvider;
import org.eclipse.xtext.conversion.IValueConverterService;
import org.eclipse.xtext.formatting.IFormatter;
import org.eclipse.xtext.formatting.impl.NullFormatter;
import org.eclipse.xtext.resource.IResourceFactory;
import org.eclipse.xtext.resource.XtextResource;

/**
 * Use this class to register components to be used at runtime / without the Equinox extension registry.
 */
@SuppressWarnings("all")
public class CssDslRuntimeModule extends AbstractCssDslRuntimeModule {
  @Override
  public Class<? extends IValueConverterService> bindIValueConverterService() {
    return CssTerminalConverters.class;
  }
  
  @Override
  public Class<? extends IFormatter> bindIFormatter() {
    return NullFormatter.class;
  }
  
  @Override
  public Class<? extends XtextResource> bindXtextResource() {
    return CssStateResource.class;
  }
  
  @Override
  public Class<? extends IResourceFactory> bindIResourceFactory() {
    return CssResourceFactory.class;
  }
  
  @Override
  public void configure(final Binder binder) {
    AnnotatedBindingBuilder<CssExtProvider> _bind = binder.<CssExtProvider>bind(CssExtProvider.class);
    _bind.toProvider(CssExtProvider.OSGiProvider.class);
    super.configure(binder);
  }
}
