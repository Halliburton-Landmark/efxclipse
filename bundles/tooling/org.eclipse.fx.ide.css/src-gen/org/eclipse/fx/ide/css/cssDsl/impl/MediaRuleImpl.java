/**
 * generated by Xtext 2.9.0
 */
package org.eclipse.fx.ide.css.cssDsl.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.eclipse.fx.ide.css.cssDsl.CssDslPackage;
import org.eclipse.fx.ide.css.cssDsl.MediaList;
import org.eclipse.fx.ide.css.cssDsl.MediaRule;
import org.eclipse.fx.ide.css.cssDsl.Ruleset;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Media Rule</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.eclipse.fx.ide.css.cssDsl.impl.MediaRuleImpl#getMedialist <em>Medialist</em>}</li>
 *   <li>{@link org.eclipse.fx.ide.css.cssDsl.impl.MediaRuleImpl#getRulesets <em>Rulesets</em>}</li>
 * </ul>
 *
 * @generated
 */
public class MediaRuleImpl extends MinimalEObjectImpl.Container implements MediaRule
{
  /**
   * The cached value of the '{@link #getMedialist() <em>Medialist</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMedialist()
   * @generated
   * @ordered
   */
  protected MediaList medialist;

  /**
   * The cached value of the '{@link #getRulesets() <em>Rulesets</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRulesets()
   * @generated
   * @ordered
   */
  protected EList<Ruleset> rulesets;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected MediaRuleImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return CssDslPackage.Literals.MEDIA_RULE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public MediaList getMedialist()
  {
    return medialist;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetMedialist(MediaList newMedialist, NotificationChain msgs)
  {
    MediaList oldMedialist = medialist;
    medialist = newMedialist;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, CssDslPackage.MEDIA_RULE__MEDIALIST, oldMedialist, newMedialist);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setMedialist(MediaList newMedialist)
  {
    if (newMedialist != medialist)
    {
      NotificationChain msgs = null;
      if (medialist != null)
        msgs = ((InternalEObject)medialist).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - CssDslPackage.MEDIA_RULE__MEDIALIST, null, msgs);
      if (newMedialist != null)
        msgs = ((InternalEObject)newMedialist).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - CssDslPackage.MEDIA_RULE__MEDIALIST, null, msgs);
      msgs = basicSetMedialist(newMedialist, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CssDslPackage.MEDIA_RULE__MEDIALIST, newMedialist, newMedialist));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Ruleset> getRulesets()
  {
    if (rulesets == null)
    {
      rulesets = new EObjectContainmentEList<Ruleset>(Ruleset.class, this, CssDslPackage.MEDIA_RULE__RULESETS);
    }
    return rulesets;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case CssDslPackage.MEDIA_RULE__MEDIALIST:
        return basicSetMedialist(null, msgs);
      case CssDslPackage.MEDIA_RULE__RULESETS:
        return ((InternalEList<?>)getRulesets()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case CssDslPackage.MEDIA_RULE__MEDIALIST:
        return getMedialist();
      case CssDslPackage.MEDIA_RULE__RULESETS:
        return getRulesets();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case CssDslPackage.MEDIA_RULE__MEDIALIST:
        setMedialist((MediaList)newValue);
        return;
      case CssDslPackage.MEDIA_RULE__RULESETS:
        getRulesets().clear();
        getRulesets().addAll((Collection<? extends Ruleset>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case CssDslPackage.MEDIA_RULE__MEDIALIST:
        setMedialist((MediaList)null);
        return;
      case CssDslPackage.MEDIA_RULE__RULESETS:
        getRulesets().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case CssDslPackage.MEDIA_RULE__MEDIALIST:
        return medialist != null;
      case CssDslPackage.MEDIA_RULE__RULESETS:
        return rulesets != null && !rulesets.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //MediaRuleImpl
