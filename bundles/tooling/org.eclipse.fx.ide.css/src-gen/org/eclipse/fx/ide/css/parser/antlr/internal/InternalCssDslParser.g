/*
 * generated by Xtext 2.9.0
 */
parser grammar InternalCssDslParser;

options {
	tokenVocab=InternalCssDslLexer;
	superClass=AbstractInternalAntlrParser;
}

@header {
package org.eclipse.fx.ide.css.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.eclipse.fx.ide.css.services.CssDslGrammarAccess;

}

@members {

 	private CssDslGrammarAccess grammarAccess;

    public InternalCssDslParser(TokenStream input, CssDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Stylesheet";
   	}

   	@Override
   	protected CssDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleStylesheet
entryRuleStylesheet returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStylesheetRule()); }
	iv_ruleStylesheet=ruleStylesheet
	{ $current=$iv_ruleStylesheet.current; }
	EOF;

// Rule Stylesheet
ruleStylesheet returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getStylesheetAccess().getCharsetCharsetRuleParserRuleCall_0_0());
				}
				lv_charset_0_0=ruleCharsetRule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStylesheetRule());
					}
					set(
						$current,
						"charset",
						lv_charset_0_0,
						"org.eclipse.fx.ide.css.CssDsl.CharsetRule");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getStylesheetAccess().getImportsImportRuleParserRuleCall_1_0());
				}
				lv_imports_1_0=ruleImportRule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStylesheetRule());
					}
					add(
						$current,
						"imports",
						lv_imports_1_0,
						"org.eclipse.fx.ide.css.CssDsl.ImportRule");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getStylesheetAccess().getRulesetRulesetParserRuleCall_2_0_0());
					}
					lv_ruleset_2_0=ruleRuleset
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStylesheetRule());
						}
						add(
							$current,
							"ruleset",
							lv_ruleset_2_0,
							"org.eclipse.fx.ide.css.CssDsl.Ruleset");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getStylesheetAccess().getMediaMediaRuleParserRuleCall_2_1_0());
					}
					lv_media_3_0=ruleMediaRule
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStylesheetRule());
						}
						add(
							$current,
							"media",
							lv_media_3_0,
							"org.eclipse.fx.ide.css.CssDsl.MediaRule");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getStylesheetAccess().getPagePageRuleParserRuleCall_2_2_0());
					}
					lv_page_4_0=rulePageRule
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStylesheetRule());
						}
						add(
							$current,
							"page",
							lv_page_4_0,
							"org.eclipse.fx.ide.css.CssDsl.PageRule");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getStylesheetAccess().getFont_faceFontFaceRuleParserRuleCall_2_3_0());
					}
					lv_font_face_5_0=ruleFontFaceRule
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStylesheetRule());
						}
						add(
							$current,
							"font_face",
							lv_font_face_5_0,
							"org.eclipse.fx.ide.css.CssDsl.FontFaceRule");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getStylesheetAccess().getKeyframesKeyframesRuleParserRuleCall_2_4_0());
					}
					lv_keyframes_6_0=ruleKeyframesRule
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStylesheetRule());
						}
						add(
							$current,
							"keyframes",
							lv_keyframes_6_0,
							"org.eclipse.fx.ide.css.CssDsl.KeyframesRule");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleCharsetRule
entryRuleCharsetRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCharsetRuleRule()); }
	iv_ruleCharsetRule=ruleCharsetRule
	{ $current=$iv_ruleCharsetRule.current; }
	EOF;

// Rule CharsetRule
ruleCharsetRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Charset
		{
			newLeafNode(otherlv_0, grammarAccess.getCharsetRuleAccess().getCharsetKeyword_0());
		}
		(
			(
				lv_charset_1_0=RULE_CSSSTRING
				{
					newLeafNode(lv_charset_1_0, grammarAccess.getCharsetRuleAccess().getCharsetCSSSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCharsetRuleRule());
					}
					setWithLastConsumed(
						$current,
						"charset",
						lv_charset_1_0,
						"org.eclipse.fx.ide.css.CssDsl.CSSSTRING");
				}
			)
		)
		otherlv_2=Semicolon
		{
			newLeafNode(otherlv_2, grammarAccess.getCharsetRuleAccess().getSemicolonKeyword_2());
		}
	)
;

// Entry rule entryRuleImportRule
entryRuleImportRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImportRuleRule()); }
	iv_ruleImportRule=ruleImportRule
	{ $current=$iv_ruleImportRule.current; }
	EOF;

// Rule ImportRule
ruleImportRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Import
		{
			newLeafNode(otherlv_0, grammarAccess.getImportRuleAccess().getImportKeyword_0());
		}
		(
			(
				(
					lv_value_1_0=RULE_CSSSTRING
					{
						newLeafNode(lv_value_1_0, grammarAccess.getImportRuleAccess().getValueCSSSTRINGTerminalRuleCall_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getImportRuleRule());
						}
						setWithLastConsumed(
							$current,
							"value",
							lv_value_1_0,
							"org.eclipse.fx.ide.css.CssDsl.CSSSTRING");
					}
				)
			)
			    |
			(
				{
					newCompositeNode(grammarAccess.getImportRuleAccess().getURLTypeParserRuleCall_1_1_0());
				}
				this_URLType_2=ruleURLType
				{
					$current = $this_URLType_2.current;
					afterParserOrEnumRuleCall();
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getImportRuleAccess().getMediaListMediaListParserRuleCall_1_1_1_0());
						}
						lv_mediaList_3_0=ruleMediaList
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getImportRuleRule());
							}
							set(
								$current,
								"mediaList",
								lv_mediaList_3_0,
								"org.eclipse.fx.ide.css.CssDsl.MediaList");
							afterParserOrEnumRuleCall();
						}
					)
				)?
			)
		)
		otherlv_4=Semicolon
		{
			newLeafNode(otherlv_4, grammarAccess.getImportRuleAccess().getSemicolonKeyword_2());
		}
	)
;

// Entry rule entryRulePageRule
entryRulePageRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPageRuleRule()); }
	iv_rulePageRule=rulePageRule
	{ $current=$iv_rulePageRule.current; }
	EOF;

// Rule PageRule
rulePageRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getPageRuleAccess().getPageRuleAction_0(),
					$current);
			}
		)
		otherlv_1=Page
		{
			newLeafNode(otherlv_1, grammarAccess.getPageRuleAccess().getPageKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPageRuleAccess().getPseudoPagePseudoPageParserRuleCall_2_0());
				}
				lv_pseudoPage_2_0=rulePseudoPage
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPageRuleRule());
					}
					set(
						$current,
						"pseudoPage",
						lv_pseudoPage_2_0,
						"org.eclipse.fx.ide.css.CssDsl.PseudoPage");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_3=LeftCurlyBracket
		{
			newLeafNode(otherlv_3, grammarAccess.getPageRuleAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPageRuleAccess().getDeclarationsCssDeclarationParserRuleCall_4_0());
				}
				lv_declarations_4_0=ruleCssDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPageRuleRule());
					}
					add(
						$current,
						"declarations",
						lv_declarations_4_0,
						"org.eclipse.fx.ide.css.CssDsl.CssDeclaration");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			otherlv_5=Semicolon
			{
				newLeafNode(otherlv_5, grammarAccess.getPageRuleAccess().getSemicolonKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPageRuleAccess().getDeclarationsCssDeclarationParserRuleCall_5_1_0());
					}
					lv_declarations_6_0=ruleCssDeclaration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPageRuleRule());
						}
						add(
							$current,
							"declarations",
							lv_declarations_6_0,
							"org.eclipse.fx.ide.css.CssDsl.CssDeclaration");
						afterParserOrEnumRuleCall();
					}
				)
			)?
		)*
		otherlv_7=RightCurlyBracket
		{
			newLeafNode(otherlv_7, grammarAccess.getPageRuleAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRulePseudoPage
entryRulePseudoPage returns [String current=null]:
	{ newCompositeNode(grammarAccess.getPseudoPageRule()); }
	iv_rulePseudoPage=rulePseudoPage
	{ $current=$iv_rulePseudoPage.current.getText(); }
	EOF;

// Rule PseudoPage
rulePseudoPage returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_COLON_0=RULE_COLON
		{
			$current.merge(this_COLON_0);
		}
		{
			newLeafNode(this_COLON_0, grammarAccess.getPseudoPageAccess().getCOLONTerminalRuleCall_0());
		}
		{
			newCompositeNode(grammarAccess.getPseudoPageAccess().getIdentifierParserRuleCall_1());
		}
		this_Identifier_1=ruleIdentifier
		{
			$current.merge(this_Identifier_1);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleMediaRule
entryRuleMediaRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMediaRuleRule()); }
	iv_ruleMediaRule=ruleMediaRule
	{ $current=$iv_ruleMediaRule.current; }
	EOF;

// Rule MediaRule
ruleMediaRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Media
		{
			newLeafNode(otherlv_0, grammarAccess.getMediaRuleAccess().getMediaKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMediaRuleAccess().getMedialistMediaListParserRuleCall_1_0());
				}
				lv_medialist_1_0=ruleMediaList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMediaRuleRule());
					}
					set(
						$current,
						"medialist",
						lv_medialist_1_0,
						"org.eclipse.fx.ide.css.CssDsl.MediaList");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=LeftCurlyBracket
		{
			newLeafNode(otherlv_2, grammarAccess.getMediaRuleAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMediaRuleAccess().getRulesetsRulesetParserRuleCall_3_0());
				}
				lv_rulesets_3_0=ruleRuleset
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMediaRuleRule());
					}
					add(
						$current,
						"rulesets",
						lv_rulesets_3_0,
						"org.eclipse.fx.ide.css.CssDsl.Ruleset");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_4=RightCurlyBracket
		{
			newLeafNode(otherlv_4, grammarAccess.getMediaRuleAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleMediaList
entryRuleMediaList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMediaListRule()); }
	iv_ruleMediaList=ruleMediaList
	{ $current=$iv_ruleMediaList.current; }
	EOF;

// Rule MediaList
ruleMediaList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getMediaListAccess().getEntryMediaParserRuleCall_0_0());
				}
				lv_entry_0_0=ruleMedia
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMediaListRule());
					}
					add(
						$current,
						"entry",
						lv_entry_0_0,
						"org.eclipse.fx.ide.css.CssDsl.Media");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			this_COMMA_1=RULE_COMMA
			{
				newLeafNode(this_COMMA_1, grammarAccess.getMediaListAccess().getCOMMATerminalRuleCall_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMediaListAccess().getEntryMediaParserRuleCall_1_1_0());
					}
					lv_entry_2_0=ruleMedia
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMediaListRule());
						}
						add(
							$current,
							"entry",
							lv_entry_2_0,
							"org.eclipse.fx.ide.css.CssDsl.Media");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleMedia
entryRuleMedia returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMediaRule()); }
	iv_ruleMedia=ruleMedia
	{ $current=$iv_ruleMedia.current; }
	EOF;

// Rule Media
ruleMedia returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getMediaAccess().getNameIdentifierParserRuleCall_0());
			}
			lv_name_0_0=ruleIdentifier
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getMediaRule());
				}
				set(
					$current,
					"name",
					lv_name_0_0,
					"org.eclipse.fx.ide.css.CssDsl.Identifier");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleFontFaceRule
entryRuleFontFaceRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFontFaceRuleRule()); }
	iv_ruleFontFaceRule=ruleFontFaceRule
	{ $current=$iv_ruleFontFaceRule.current; }
	EOF;

// Rule FontFaceRule
ruleFontFaceRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getFontFaceRuleAccess().getFontFaceRuleAction_0(),
					$current);
			}
		)
		otherlv_1=FontFace
		{
			newLeafNode(otherlv_1, grammarAccess.getFontFaceRuleAccess().getFontFaceKeyword_1());
		}
		otherlv_2=LeftCurlyBracket
		{
			newLeafNode(otherlv_2, grammarAccess.getFontFaceRuleAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFontFaceRuleAccess().getDeclarationsCssDeclarationParserRuleCall_3_0());
				}
				lv_declarations_3_0=ruleCssDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFontFaceRuleRule());
					}
					add(
						$current,
						"declarations",
						lv_declarations_3_0,
						"org.eclipse.fx.ide.css.CssDsl.CssDeclaration");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			otherlv_4=Semicolon
			{
				newLeafNode(otherlv_4, grammarAccess.getFontFaceRuleAccess().getSemicolonKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getFontFaceRuleAccess().getDeclarationsCssDeclarationParserRuleCall_4_1_0());
					}
					lv_declarations_5_0=ruleCssDeclaration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFontFaceRuleRule());
						}
						add(
							$current,
							"declarations",
							lv_declarations_5_0,
							"org.eclipse.fx.ide.css.CssDsl.CssDeclaration");
						afterParserOrEnumRuleCall();
					}
				)
			)?
		)*
		otherlv_6=RightCurlyBracket
		{
			newLeafNode(otherlv_6, grammarAccess.getFontFaceRuleAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleKeyframesRule
entryRuleKeyframesRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getKeyframesRuleRule()); }
	iv_ruleKeyframesRule=ruleKeyframesRule
	{ $current=$iv_ruleKeyframesRule.current; }
	EOF;

// Rule KeyframesRule
ruleKeyframesRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getKeyframesRuleAccess().getKeyframesRuleAction_0(),
					$current);
			}
		)
		otherlv_1=Keyframes
		{
			newLeafNode(otherlv_1, grammarAccess.getKeyframesRuleAccess().getKeyframesKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getKeyframesRuleAccess().getNameIdentifierParserRuleCall_2_0());
				}
				lv_name_2_0=ruleIdentifier
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getKeyframesRuleRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.fx.ide.css.CssDsl.Identifier");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=LeftCurlyBracket
		{
			newLeafNode(otherlv_3, grammarAccess.getKeyframesRuleAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getKeyframesRuleAccess().getKeyframeselectorsKeyframeSelectorParserRuleCall_4_0());
				}
				lv_keyframeselectors_4_0=ruleKeyframeSelector
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getKeyframesRuleRule());
					}
					add(
						$current,
						"keyframeselectors",
						lv_keyframeselectors_4_0,
						"org.eclipse.fx.ide.css.CssDsl.KeyframeSelector");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			otherlv_5=Semicolon
			{
				newLeafNode(otherlv_5, grammarAccess.getKeyframesRuleAccess().getSemicolonKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getKeyframesRuleAccess().getKeyframeselectorsKeyframeSelectorParserRuleCall_5_1_0());
					}
					lv_keyframeselectors_6_0=ruleKeyframeSelector
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getKeyframesRuleRule());
						}
						add(
							$current,
							"keyframeselectors",
							lv_keyframeselectors_6_0,
							"org.eclipse.fx.ide.css.CssDsl.KeyframeSelector");
						afterParserOrEnumRuleCall();
					}
				)
			)?
		)*
		otherlv_7=RightCurlyBracket
		{
			newLeafNode(otherlv_7, grammarAccess.getKeyframesRuleAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleKeyframeSelector
entryRuleKeyframeSelector returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getKeyframeSelectorRule()); }
	iv_ruleKeyframeSelector=ruleKeyframeSelector
	{ $current=$iv_ruleKeyframeSelector.current; }
	EOF;

// Rule KeyframeSelector
ruleKeyframeSelector returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getKeyframeSelectorAccess().getTypeIdentifierParserRuleCall_0_0_0());
					}
					lv_type_0_0=ruleIdentifier
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getKeyframeSelectorRule());
						}
						set(
							$current,
							"type",
							lv_type_0_0,
							"org.eclipse.fx.ide.css.CssDsl.Identifier");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getKeyframeSelectorAccess().getPercentageNumParserRuleCall_0_1_0_0());
						}
						lv_percentage_1_0=ruleNum
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getKeyframeSelectorRule());
							}
							set(
								$current,
								"percentage",
								lv_percentage_1_0,
								"org.eclipse.fx.ide.css.CssDsl.Num");
							afterParserOrEnumRuleCall();
						}
					)
				)
				this_PERCENT_2=RULE_PERCENT
				{
					newLeafNode(this_PERCENT_2, grammarAccess.getKeyframeSelectorAccess().getPERCENTTerminalRuleCall_0_1_1());
				}
			)
		)
		otherlv_3=LeftCurlyBracket
		{
			newLeafNode(otherlv_3, grammarAccess.getKeyframeSelectorAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getKeyframeSelectorAccess().getDeclarationsCssDeclarationParserRuleCall_2_0());
				}
				lv_declarations_4_0=ruleCssDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getKeyframeSelectorRule());
					}
					add(
						$current,
						"declarations",
						lv_declarations_4_0,
						"org.eclipse.fx.ide.css.CssDsl.CssDeclaration");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			otherlv_5=Semicolon
			{
				newLeafNode(otherlv_5, grammarAccess.getKeyframeSelectorAccess().getSemicolonKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getKeyframeSelectorAccess().getDeclarationsCssDeclarationParserRuleCall_3_1_0());
					}
					lv_declarations_6_0=ruleCssDeclaration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getKeyframeSelectorRule());
						}
						add(
							$current,
							"declarations",
							lv_declarations_6_0,
							"org.eclipse.fx.ide.css.CssDsl.CssDeclaration");
						afterParserOrEnumRuleCall();
					}
				)
			)?
		)*
		otherlv_7=RightCurlyBracket
		{
			newLeafNode(otherlv_7, grammarAccess.getKeyframeSelectorAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleRuleset
entryRuleRuleset returns [EObject current=null]@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_ML_COMMENT");
}:
	{ newCompositeNode(grammarAccess.getRulesetRule()); }
	iv_ruleRuleset=ruleRuleset
	{ $current=$iv_ruleRuleset.current; }
	EOF;
finally {
	myHiddenTokenState.restore();
}

// Rule Ruleset
ruleRuleset returns [EObject current=null]
@init {
	enterRule();
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_ML_COMMENT");
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getRulesetAccess().getSelectorsSelectorParserRuleCall_0_0());
				}
				lv_selectors_0_0=ruleSelector
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRulesetRule());
					}
					add(
						$current,
						"selectors",
						lv_selectors_0_0,
						"org.eclipse.fx.ide.css.CssDsl.Selector");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				this_WS_1=RULE_WS
				{
					newLeafNode(this_WS_1, grammarAccess.getRulesetAccess().getWSTerminalRuleCall_1_0());
				}
			)*
			this_COMMA_2=RULE_COMMA
			{
				newLeafNode(this_COMMA_2, grammarAccess.getRulesetAccess().getCOMMATerminalRuleCall_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRulesetAccess().getSelectorsSelectorParserRuleCall_1_2_0());
					}
					lv_selectors_3_0=ruleSelector
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRulesetRule());
						}
						add(
							$current,
							"selectors",
							lv_selectors_3_0,
							"org.eclipse.fx.ide.css.CssDsl.Selector");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		(
			this_WS_4=RULE_WS
			{
				newLeafNode(this_WS_4, grammarAccess.getRulesetAccess().getWSTerminalRuleCall_2());
			}
		)*
		otherlv_5=LeftCurlyBracket
		{
			newLeafNode(otherlv_5, grammarAccess.getRulesetAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getRulesetAccess().getDeclarationsCssDeclarationParserRuleCall_4_0_0());
					}
					lv_declarations_6_0=ruleCssDeclaration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRulesetRule());
						}
						add(
							$current,
							"declarations",
							lv_declarations_6_0,
							"org.eclipse.fx.ide.css.CssDsl.CssDeclaration");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_7=Semicolon
				{
					newLeafNode(otherlv_7, grammarAccess.getRulesetAccess().getSemicolonKeyword_4_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getRulesetAccess().getDeclarationsCssDeclarationParserRuleCall_4_1_1_0());
						}
						lv_declarations_8_0=ruleCssDeclaration
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getRulesetRule());
							}
							add(
								$current,
								"declarations",
								lv_declarations_8_0,
								"org.eclipse.fx.ide.css.CssDsl.CssDeclaration");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			(
				otherlv_9=Semicolon
				{
					newLeafNode(otherlv_9, grammarAccess.getRulesetAccess().getSemicolonKeyword_4_2());
				}
			)?
		)?
		otherlv_10=RightCurlyBracket
		{
			newLeafNode(otherlv_10, grammarAccess.getRulesetAccess().getRightCurlyBracketKeyword_5());
		}
	)
;
finally {
	myHiddenTokenState.restore();
}

// Entry rule entryRuleCssDeclaration
entryRuleCssDeclaration returns [EObject current=null]@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT");
}:
	{ newCompositeNode(grammarAccess.getCssDeclarationRule()); }
	iv_ruleCssDeclaration=ruleCssDeclaration
	{ $current=$iv_ruleCssDeclaration.current; }
	EOF;
finally {
	myHiddenTokenState.restore();
}

// Rule CssDeclaration
ruleCssDeclaration returns [EObject current=null]
@init {
	enterRule();
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT");
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getCssDeclarationAccess().getPropertyCssPropertyParserRuleCall_0_0());
				}
				lv_property_0_0=ruleCssProperty
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCssDeclarationRule());
					}
					set(
						$current,
						"property",
						lv_property_0_0,
						"org.eclipse.fx.ide.css.CssDsl.CssProperty");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			this_WS_1=RULE_WS
			{
				newLeafNode(this_WS_1, grammarAccess.getCssDeclarationAccess().getWSTerminalRuleCall_1());
			}
		)*
		this_COLON_2=RULE_COLON
		{
			newLeafNode(this_COLON_2, grammarAccess.getCssDeclarationAccess().getCOLONTerminalRuleCall_2());
		}
		(
			((
				ruleCssTok
			)
			)=>
			(
				{
					newCompositeNode(grammarAccess.getCssDeclarationAccess().getValueTokensCssTokParserRuleCall_3_0());
				}
				lv_valueTokens_3_0=ruleCssTok
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCssDeclarationRule());
					}
					add(
						$current,
						"valueTokens",
						lv_valueTokens_3_0,
						"org.eclipse.fx.ide.css.CssDsl.CssTok");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		(
			(
				lv_important_4_0=RULE_IMPORTANT_SYM
				{
					newLeafNode(lv_important_4_0, grammarAccess.getCssDeclarationAccess().getImportantIMPORTANT_SYMTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCssDeclarationRule());
					}
					setWithLastConsumed(
						$current,
						"important",
						true,
						"org.eclipse.fx.ide.css.CssDsl.IMPORTANT_SYM");
				}
			)
		)?
	)
;
finally {
	myHiddenTokenState.restore();
}

// Entry rule entryRuleSelector
entryRuleSelector returns [EObject current=null]@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT");
}:
	{ newCompositeNode(grammarAccess.getSelectorRule()); }
	iv_ruleSelector=ruleSelector
	{ $current=$iv_ruleSelector.current; }
	EOF;
finally {
	myHiddenTokenState.restore();
}

// Rule Selector
ruleSelector returns [EObject current=null]
@init {
	enterRule();
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT");
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getSelectorAccess().getSimpleselectorsSimpleSelectorParserRuleCall_0_0());
				}
				lv_simpleselectors_0_0=ruleSimpleSelector
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSelectorRule());
					}
					add(
						$current,
						"simpleselectors",
						lv_simpleselectors_0_0,
						"org.eclipse.fx.ide.css.CssDsl.SimpleSelector");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getSelectorAccess().getCombinatorCombinatorParserRuleCall_1_0_0_0());
						}
						lv_combinator_1_0=ruleCombinator
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSelectorRule());
							}
							set(
								$current,
								"combinator",
								lv_combinator_1_0,
								"org.eclipse.fx.ide.css.CssDsl.Combinator");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					this_WS_2=RULE_WS
					{
						newLeafNode(this_WS_2, grammarAccess.getSelectorAccess().getWSTerminalRuleCall_1_0_1());
					}
				)*
				(
					(
						{
							newCompositeNode(grammarAccess.getSelectorAccess().getSelectorSelectorParserRuleCall_1_0_2_0());
						}
						lv_selector_3_0=ruleSelector
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSelectorRule());
							}
							set(
								$current,
								"selector",
								lv_selector_3_0,
								"org.eclipse.fx.ide.css.CssDsl.Selector");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				(
					this_WS_4=RULE_WS
					{
						newLeafNode(this_WS_4, grammarAccess.getSelectorAccess().getWSTerminalRuleCall_1_1_0());
					}
				)+
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getSelectorAccess().getCombinatorCombinatorParserRuleCall_1_1_1_0_0());
							}
							lv_combinator_5_0=ruleCombinator
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getSelectorRule());
								}
								set(
									$current,
									"combinator",
									lv_combinator_5_0,
									"org.eclipse.fx.ide.css.CssDsl.Combinator");
								afterParserOrEnumRuleCall();
							}
						)
					)
					(
						this_WS_6=RULE_WS
						{
							newLeafNode(this_WS_6, grammarAccess.getSelectorAccess().getWSTerminalRuleCall_1_1_1_1());
						}
					)*
				)?
				(
					(
						{
							newCompositeNode(grammarAccess.getSelectorAccess().getSelectorSelectorParserRuleCall_1_1_2_0());
						}
						lv_selector_7_0=ruleSelector
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSelectorRule());
							}
							set(
								$current,
								"selector",
								lv_selector_7_0,
								"org.eclipse.fx.ide.css.CssDsl.Selector");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)?
	)
;
finally {
	myHiddenTokenState.restore();
}

// Entry rule entryRuleSimpleSelectorForNegation
entryRuleSimpleSelectorForNegation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSimpleSelectorForNegationRule()); }
	iv_ruleSimpleSelectorForNegation=ruleSimpleSelectorForNegation
	{ $current=$iv_ruleSimpleSelectorForNegation.current; }
	EOF;

// Rule SimpleSelectorForNegation
ruleSimpleSelectorForNegation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getSimpleSelectorForNegationAccess().getElementElementSelectorParserRuleCall_0_0_0_0());
						}
						lv_element_0_0=ruleElementSelector
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSimpleSelectorForNegationRule());
							}
							set(
								$current,
								"element",
								lv_element_0_0,
								"org.eclipse.fx.ide.css.CssDsl.ElementSelector");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getSimpleSelectorForNegationAccess().getUniversalUniversalSelectorParserRuleCall_0_0_1_0());
						}
						lv_universal_1_0=ruleUniversalSelector
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSimpleSelectorForNegationRule());
							}
							set(
								$current,
								"universal",
								lv_universal_1_0,
								"org.eclipse.fx.ide.css.CssDsl.UniversalSelector");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getSimpleSelectorForNegationAccess().getSubSelectorsSubSelectorForNegationParserRuleCall_0_1_0());
					}
					lv_subSelectors_2_0=ruleSubSelectorForNegation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSimpleSelectorForNegationRule());
						}
						add(
							$current,
							"subSelectors",
							lv_subSelectors_2_0,
							"org.eclipse.fx.ide.css.CssDsl.SubSelectorForNegation");
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)
		    |
		(
			((
				ruleSubSelectorForNegation
			)
			)=>
			(
				{
					newCompositeNode(grammarAccess.getSimpleSelectorForNegationAccess().getSubSelectorsSubSelectorForNegationParserRuleCall_1_0());
				}
				lv_subSelectors_3_0=ruleSubSelectorForNegation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSimpleSelectorForNegationRule());
					}
					add(
						$current,
						"subSelectors",
						lv_subSelectors_3_0,
						"org.eclipse.fx.ide.css.CssDsl.SubSelectorForNegation");
					afterParserOrEnumRuleCall();
				}
			)
		)+
	)
;

// Entry rule entryRuleSubSelectorForNegation
entryRuleSubSelectorForNegation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSubSelectorForNegationRule()); }
	iv_ruleSubSelectorForNegation=ruleSubSelectorForNegation
	{ $current=$iv_ruleSubSelectorForNegation.current; }
	EOF;

// Rule SubSelectorForNegation
ruleSubSelectorForNegation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getSubSelectorForNegationAccess().getIdSelectorParserRuleCall_0());
		}
		this_IdSelector_0=ruleIdSelector
		{
			$current = $this_IdSelector_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSubSelectorForNegationAccess().getClassSelectorParserRuleCall_1());
		}
		this_ClassSelector_1=ruleClassSelector
		{
			$current = $this_ClassSelector_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSubSelectorForNegationAccess().getAttributeSelectorParserRuleCall_2());
		}
		this_AttributeSelector_2=ruleAttributeSelector
		{
			$current = $this_AttributeSelector_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSubSelectorForNegationAccess().getPseudoClassParserRuleCall_3());
		}
		this_PseudoClass_3=rulePseudoClass
		{
			$current = $this_PseudoClass_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleSimpleSelector
entryRuleSimpleSelector returns [EObject current=null]@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}:
	{ newCompositeNode(grammarAccess.getSimpleSelectorRule()); }
	iv_ruleSimpleSelector=ruleSimpleSelector
	{ $current=$iv_ruleSimpleSelector.current; }
	EOF;
finally {
	myHiddenTokenState.restore();
}

// Rule SimpleSelector
ruleSimpleSelector returns [EObject current=null]
@init {
	enterRule();
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getSimpleSelectorAccess().getElementElementSelectorParserRuleCall_0_0_0_0());
						}
						lv_element_0_0=ruleElementSelector
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSimpleSelectorRule());
							}
							set(
								$current,
								"element",
								lv_element_0_0,
								"org.eclipse.fx.ide.css.CssDsl.ElementSelector");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getSimpleSelectorAccess().getUniversalUniversalSelectorParserRuleCall_0_0_1_0());
						}
						lv_universal_1_0=ruleUniversalSelector
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSimpleSelectorRule());
							}
							set(
								$current,
								"universal",
								lv_universal_1_0,
								"org.eclipse.fx.ide.css.CssDsl.UniversalSelector");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getSimpleSelectorAccess().getSubSelectorsSubSelectorParserRuleCall_0_1_0());
					}
					lv_subSelectors_2_0=ruleSubSelector
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSimpleSelectorRule());
						}
						add(
							$current,
							"subSelectors",
							lv_subSelectors_2_0,
							"org.eclipse.fx.ide.css.CssDsl.SubSelector");
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getSimpleSelectorAccess().getSubSelectorsSubSelectorParserRuleCall_1_0());
				}
				lv_subSelectors_3_0=ruleSubSelector
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSimpleSelectorRule());
					}
					add(
						$current,
						"subSelectors",
						lv_subSelectors_3_0,
						"org.eclipse.fx.ide.css.CssDsl.SubSelector");
					afterParserOrEnumRuleCall();
				}
			)
		)+
	)
;
finally {
	myHiddenTokenState.restore();
}

// Entry rule entryRuleSubSelector
entryRuleSubSelector returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSubSelectorRule()); }
	iv_ruleSubSelector=ruleSubSelector
	{ $current=$iv_ruleSubSelector.current; }
	EOF;

// Rule SubSelector
ruleSubSelector returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getSubSelectorAccess().getIdSelectorParserRuleCall_0());
		}
		this_IdSelector_0=ruleIdSelector
		{
			$current = $this_IdSelector_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSubSelectorAccess().getClassSelectorParserRuleCall_1());
		}
		this_ClassSelector_1=ruleClassSelector
		{
			$current = $this_ClassSelector_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSubSelectorAccess().getAttributeSelectorParserRuleCall_2());
		}
		this_AttributeSelector_2=ruleAttributeSelector
		{
			$current = $this_AttributeSelector_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSubSelectorAccess().getPseudoClassOrFuncParserRuleCall_3());
		}
		this_PseudoClassOrFunc_3=rulePseudoClassOrFunc
		{
			$current = $this_PseudoClassOrFunc_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleAttributeSelector
entryRuleAttributeSelector returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAttributeSelectorRule()); }
	iv_ruleAttributeSelector=ruleAttributeSelector
	{ $current=$iv_ruleAttributeSelector.current; }
	EOF;

// Rule AttributeSelector
ruleAttributeSelector returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getAttributeSelectorAccess().getAttributeSelectorAction_0(),
					$current);
			}
		)
		otherlv_1=LeftSquareBracket
		{
			newLeafNode(otherlv_1, grammarAccess.getAttributeSelectorAccess().getLeftSquareBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAttributeSelectorAccess().getNameIdentifierParserRuleCall_2_0());
				}
				lv_name_2_0=ruleIdentifier
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAttributeSelectorRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.fx.ide.css.CssDsl.Identifier");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					(
						lv_op_3_1=CircumflexAccentEqualsSign
						{
							newLeafNode(lv_op_3_1, grammarAccess.getAttributeSelectorAccess().getOpCircumflexAccentEqualsSignKeyword_3_0_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getAttributeSelectorRule());
							}
							setWithLastConsumed($current, "op", lv_op_3_1, null);
						}
						    |
						lv_op_3_2=DollarSignEqualsSign
						{
							newLeafNode(lv_op_3_2, grammarAccess.getAttributeSelectorAccess().getOpDollarSignEqualsSignKeyword_3_0_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getAttributeSelectorRule());
							}
							setWithLastConsumed($current, "op", lv_op_3_2, null);
						}
						    |
						lv_op_3_3=AsteriskEqualsSign
						{
							newLeafNode(lv_op_3_3, grammarAccess.getAttributeSelectorAccess().getOpAsteriskEqualsSignKeyword_3_0_0_2());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getAttributeSelectorRule());
							}
							setWithLastConsumed($current, "op", lv_op_3_3, null);
						}
						    |
						lv_op_3_4=EqualsSign
						{
							newLeafNode(lv_op_3_4, grammarAccess.getAttributeSelectorAccess().getOpEqualsSignKeyword_3_0_0_3());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getAttributeSelectorRule());
							}
							setWithLastConsumed($current, "op", lv_op_3_4, null);
						}
						    |
						lv_op_3_5=RULE_INCLUDES
						{
							newLeafNode(lv_op_3_5, grammarAccess.getAttributeSelectorAccess().getOpINCLUDESTerminalRuleCall_3_0_0_4());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getAttributeSelectorRule());
							}
							setWithLastConsumed(
								$current,
								"op",
								lv_op_3_5,
								"org.eclipse.fx.ide.css.CssDsl.INCLUDES");
						}
						    |
						lv_op_3_6=RULE_DASHMATCH
						{
							newLeafNode(lv_op_3_6, grammarAccess.getAttributeSelectorAccess().getOpDASHMATCHTerminalRuleCall_3_0_0_5());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getAttributeSelectorRule());
							}
							setWithLastConsumed(
								$current,
								"op",
								lv_op_3_6,
								"org.eclipse.fx.ide.css.CssDsl.DASHMATCH");
						}
					)
				)
			)
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getAttributeSelectorAccess().getValueIdentifierParserRuleCall_3_1_0_0());
						}
						lv_value_4_1=ruleIdentifier
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getAttributeSelectorRule());
							}
							set(
								$current,
								"value",
								lv_value_4_1,
								"org.eclipse.fx.ide.css.CssDsl.Identifier");
							afterParserOrEnumRuleCall();
						}
						    |
						lv_value_4_2=RULE_CSSSTRING
						{
							newLeafNode(lv_value_4_2, grammarAccess.getAttributeSelectorAccess().getValueCSSSTRINGTerminalRuleCall_3_1_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getAttributeSelectorRule());
							}
							setWithLastConsumed(
								$current,
								"value",
								lv_value_4_2,
								"org.eclipse.fx.ide.css.CssDsl.CSSSTRING");
						}
					)
				)
			)
		)?
		otherlv_5=RightSquareBracket
		{
			newLeafNode(otherlv_5, grammarAccess.getAttributeSelectorAccess().getRightSquareBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleClassSelector
entryRuleClassSelector returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getClassSelectorRule()); }
	iv_ruleClassSelector=ruleClassSelector
	{ $current=$iv_ruleClassSelector.current; }
	EOF;

// Rule ClassSelector
ruleClassSelector returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getClassSelectorAccess().getClassSelectorAction_0(),
					$current);
			}
		)
		otherlv_1=FullStop
		{
			newLeafNode(otherlv_1, grammarAccess.getClassSelectorAccess().getFullStopKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getClassSelectorAccess().getNameIdentifierParserRuleCall_2_0());
				}
				lv_name_2_0=ruleIdentifier
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getClassSelectorRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.fx.ide.css.CssDsl.Identifier");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleElementSelector
entryRuleElementSelector returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getElementSelectorRule()); }
	iv_ruleElementSelector=ruleElementSelector
	{ $current=$iv_ruleElementSelector.current; }
	EOF;

// Rule ElementSelector
ruleElementSelector returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getElementSelectorAccess().getElementSelectorAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getElementSelectorAccess().getNameIdentifierParserRuleCall_1_0());
				}
				lv_name_1_0=ruleIdentifier
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getElementSelectorRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.fx.ide.css.CssDsl.Identifier");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleUniversalSelector
entryRuleUniversalSelector returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUniversalSelectorRule()); }
	iv_ruleUniversalSelector=ruleUniversalSelector
	{ $current=$iv_ruleUniversalSelector.current; }
	EOF;

// Rule UniversalSelector
ruleUniversalSelector returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getUniversalSelectorAccess().getUniversalSelectorAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getUniversalSelectorAccess().getNamespaceCssNamespacePrefixParserRuleCall_1_0());
				}
				lv_namespace_1_0=ruleCssNamespacePrefix
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUniversalSelectorRule());
					}
					set(
						$current,
						"namespace",
						lv_namespace_1_0,
						"org.eclipse.fx.ide.css.CssDsl.CssNamespacePrefix");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_2=Asterisk
		{
			newLeafNode(otherlv_2, grammarAccess.getUniversalSelectorAccess().getAsteriskKeyword_2());
		}
	)
;

// Entry rule entryRuleIdSelector
entryRuleIdSelector returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIdSelectorRule()); }
	iv_ruleIdSelector=ruleIdSelector
	{ $current=$iv_ruleIdSelector.current; }
	EOF;

// Rule IdSelector
ruleIdSelector returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getIdSelectorAccess().getIdSelectorAction_0(),
					$current);
			}
		)
		this_HASHMARK_1=RULE_HASHMARK
		{
			newLeafNode(this_HASHMARK_1, grammarAccess.getIdSelectorAccess().getHASHMARKTerminalRuleCall_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIdSelectorAccess().getNameIdentifierParserRuleCall_2_0());
				}
				lv_name_2_0=ruleIdentifier
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIdSelectorRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.fx.ide.css.CssDsl.Identifier");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleCssNamespacePrefix
entryRuleCssNamespacePrefix returns [String current=null]:
	{ newCompositeNode(grammarAccess.getCssNamespacePrefixRule()); }
	iv_ruleCssNamespacePrefix=ruleCssNamespacePrefix
	{ $current=$iv_ruleCssNamespacePrefix.current.getText(); }
	EOF;

// Rule CssNamespacePrefix
ruleCssNamespacePrefix returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getCssNamespacePrefixAccess().getIdentifierParserRuleCall_0_0());
			}
			this_Identifier_0=ruleIdentifier
			{
				$current.merge(this_Identifier_0);
			}
			{
				afterParserOrEnumRuleCall();
			}
			    |
			kw=Asterisk
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getCssNamespacePrefixAccess().getAsteriskKeyword_0_1());
			}
		)?
		kw=VerticalLine
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getCssNamespacePrefixAccess().getVerticalLineKeyword_1());
		}
	)
;

// Entry rule entryRuleCssProperty
entryRuleCssProperty returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCssPropertyRule()); }
	iv_ruleCssProperty=ruleCssProperty
	{ $current=$iv_ruleCssProperty.current; }
	EOF;

// Rule CssProperty
ruleCssProperty returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getCssPropertyAccess().getCssPropertyAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getCssPropertyAccess().getNameValidPropertyIdentParserRuleCall_1_0());
				}
				lv_name_1_0=ruleValidPropertyIdent
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCssPropertyRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.fx.ide.css.CssDsl.ValidPropertyIdent");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleValidPropertyIdent
entryRuleValidPropertyIdent returns [String current=null]:
	{ newCompositeNode(grammarAccess.getValidPropertyIdentRule()); }
	iv_ruleValidPropertyIdent=ruleValidPropertyIdent
	{ $current=$iv_ruleValidPropertyIdent.current.getText(); }
	EOF;

// Rule ValidPropertyIdent
ruleValidPropertyIdent returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getValidPropertyIdentAccess().getIdentifierParserRuleCall());
	}
	this_Identifier_0=ruleIdentifier
	{
		$current.merge(this_Identifier_0);
	}
	{
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRulePseudoClassOrFunc
entryRulePseudoClassOrFunc returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPseudoClassOrFuncRule()); }
	iv_rulePseudoClassOrFunc=rulePseudoClassOrFunc
	{ $current=$iv_rulePseudoClassOrFunc.current; }
	EOF;

// Rule PseudoClassOrFunc
rulePseudoClassOrFunc returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getPseudoClassOrFuncAccess().getPseudoClassParserRuleCall_0());
		}
		this_PseudoClass_0=rulePseudoClass
		{
			$current = $this_PseudoClass_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPseudoClassOrFuncAccess().getPseudoClassFunctionParserRuleCall_1());
		}
		this_PseudoClassFunction_1=rulePseudoClassFunction
		{
			$current = $this_PseudoClassFunction_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRulePseudoClass
entryRulePseudoClass returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPseudoClassRule()); }
	iv_rulePseudoClass=rulePseudoClass
	{ $current=$iv_rulePseudoClass.current; }
	EOF;

// Rule PseudoClass
rulePseudoClass returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_COLON_0=RULE_COLON
		{
			newLeafNode(this_COLON_0, grammarAccess.getPseudoClassAccess().getCOLONTerminalRuleCall_0());
		}
		(
			this_COLON_1=RULE_COLON
			{
				newLeafNode(this_COLON_1, grammarAccess.getPseudoClassAccess().getCOLONTerminalRuleCall_1());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getPseudoClassAccess().getNamePseudoClassNameParserRuleCall_2_0());
				}
				lv_name_2_0=rulePseudoClassName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPseudoClassRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.fx.ide.css.CssDsl.PseudoClassName");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRulePseudoClassName
entryRulePseudoClassName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getPseudoClassNameRule()); }
	iv_rulePseudoClassName=rulePseudoClassName
	{ $current=$iv_rulePseudoClassName.current.getText(); }
	EOF;

// Rule PseudoClassName
rulePseudoClassName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getPseudoClassNameAccess().getIdentifierParserRuleCall());
	}
	this_Identifier_0=ruleIdentifier
	{
		$current.merge(this_Identifier_0);
	}
	{
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRulePseudoClassFunction
entryRulePseudoClassFunction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPseudoClassFunctionRule()); }
	iv_rulePseudoClassFunction=rulePseudoClassFunction
	{ $current=$iv_rulePseudoClassFunction.current; }
	EOF;

// Rule PseudoClassFunction
rulePseudoClassFunction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getPseudoClassFunctionAccess().getNotNotFunctionCallParserRuleCall_0_0_0());
					}
					lv_not_0_0=ruleNotFunctionCall
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPseudoClassFunctionRule());
						}
						set(
							$current,
							"not",
							true,
							"org.eclipse.fx.ide.css.CssDsl.NotFunctionCall");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getPseudoClassFunctionAccess().getParamSelectorSimpleSelectorForNegationParserRuleCall_0_1_0());
					}
					lv_paramSelector_1_0=ruleSimpleSelectorForNegation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPseudoClassFunctionRule());
						}
						set(
							$current,
							"paramSelector",
							lv_paramSelector_1_0,
							"org.eclipse.fx.ide.css.CssDsl.SimpleSelectorForNegation");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_2=RightParenthesis
			{
				newLeafNode(otherlv_2, grammarAccess.getPseudoClassFunctionAccess().getRightParenthesisKeyword_0_2());
			}
		)
		    |
		(
			this_COLON_3=RULE_COLON
			{
				newLeafNode(this_COLON_3, grammarAccess.getPseudoClassFunctionAccess().getCOLONTerminalRuleCall_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPseudoClassFunctionAccess().getNameIdentifierParserRuleCall_1_1_0());
					}
					lv_name_4_0=ruleIdentifier
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPseudoClassFunctionRule());
						}
						set(
							$current,
							"name",
							lv_name_4_0,
							"org.eclipse.fx.ide.css.CssDsl.Identifier");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_5=LeftParenthesis
			{
				newLeafNode(otherlv_5, grammarAccess.getPseudoClassFunctionAccess().getLeftParenthesisKeyword_1_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPseudoClassFunctionAccess().getParamsCssTokParserRuleCall_1_3_0());
					}
					lv_params_6_0=ruleCssTok
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPseudoClassFunctionRule());
						}
						add(
							$current,
							"params",
							lv_params_6_0,
							"org.eclipse.fx.ide.css.CssDsl.CssTok");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_7=RightParenthesis
			{
				newLeafNode(otherlv_7, grammarAccess.getPseudoClassFunctionAccess().getRightParenthesisKeyword_1_4());
			}
		)
	)
;

// Entry rule entryRuleNotFunctionCall
entryRuleNotFunctionCall returns [String current=null]@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}:
	{ newCompositeNode(grammarAccess.getNotFunctionCallRule()); }
	iv_ruleNotFunctionCall=ruleNotFunctionCall
	{ $current=$iv_ruleNotFunctionCall.current.getText(); }
	EOF;
finally {
	myHiddenTokenState.restore();
}

// Rule NotFunctionCall
ruleNotFunctionCall returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
@after {
	leaveRule();
}:
	(
		this_COLON_0=RULE_COLON
		{
			$current.merge(this_COLON_0);
		}
		{
			newLeafNode(this_COLON_0, grammarAccess.getNotFunctionCallAccess().getCOLONTerminalRuleCall_0());
		}
		kw=Not_1
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getNotFunctionCallAccess().getNotKeyword_1());
		}
	)
;
finally {
	myHiddenTokenState.restore();
}

// Entry rule entryRuleCombinator
entryRuleCombinator returns [String current=null]:
	{ newCompositeNode(grammarAccess.getCombinatorRule()); }
	iv_ruleCombinator=ruleCombinator
	{ $current=$iv_ruleCombinator.current.getText(); }
	EOF;

// Rule Combinator
ruleCombinator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_PLUS_0=RULE_PLUS
		{
			$current.merge(this_PLUS_0);
		}
		{
			newLeafNode(this_PLUS_0, grammarAccess.getCombinatorAccess().getPLUSTerminalRuleCall_0());
		}
		    |
		kw=GreaterThanSign
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getCombinatorAccess().getGreaterThanSignKeyword_1());
		}
		    |
		kw=Tilde
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getCombinatorAccess().getTildeKeyword_2());
		}
	)
;

// Entry rule entryRuleSymbolTok
entryRuleSymbolTok returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSymbolTokRule()); }
	iv_ruleSymbolTok=ruleSymbolTok
	{ $current=$iv_ruleSymbolTok.current; }
	EOF;

// Rule SymbolTok
ruleSymbolTok returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getSymbolTokAccess().getSymbolTokAction_0(),
					$current);
			}
		)
		(
			(
				(
					lv_symbol_1_1=RULE_COMMA
					{
						newLeafNode(lv_symbol_1_1, grammarAccess.getSymbolTokAccess().getSymbolCOMMATerminalRuleCall_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSymbolTokRule());
						}
						setWithLastConsumed(
							$current,
							"symbol",
							lv_symbol_1_1,
							"org.eclipse.fx.ide.css.CssDsl.COMMA");
					}
					    |
					lv_symbol_1_2=RULE_PERCENT
					{
						newLeafNode(lv_symbol_1_2, grammarAccess.getSymbolTokAccess().getSymbolPERCENTTerminalRuleCall_1_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSymbolTokRule());
						}
						setWithLastConsumed(
							$current,
							"symbol",
							lv_symbol_1_2,
							"org.eclipse.fx.ide.css.CssDsl.PERCENT");
					}
				)
			)
		)
	)
;

// Entry rule entryRuleWSTok
entryRuleWSTok returns [EObject current=null]@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}:
	{ newCompositeNode(grammarAccess.getWSTokRule()); }
	iv_ruleWSTok=ruleWSTok
	{ $current=$iv_ruleWSTok.current; }
	EOF;
finally {
	myHiddenTokenState.restore();
}

// Rule WSTok
ruleWSTok returns [EObject current=null]
@init {
	enterRule();
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getWSTokAccess().getWSTokAction_0(),
					$current);
			}
		)
		this_WS_1=RULE_WS
		{
			newLeafNode(this_WS_1, grammarAccess.getWSTokAccess().getWSTerminalRuleCall_1());
		}
	)
;
finally {
	myHiddenTokenState.restore();
}

// Entry rule entryRuleStringTok
entryRuleStringTok returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStringTokRule()); }
	iv_ruleStringTok=ruleStringTok
	{ $current=$iv_ruleStringTok.current; }
	EOF;

// Rule StringTok
ruleStringTok returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getStringTokAccess().getStringTokAction_0(),
					$current);
			}
		)
		(
			(
				lv_value_1_0=RULE_CSSSTRING
				{
					newLeafNode(lv_value_1_0, grammarAccess.getStringTokAccess().getValueCSSSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStringTokRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_1_0,
						"org.eclipse.fx.ide.css.CssDsl.CSSSTRING");
				}
			)
		)
	)
;

// Entry rule entryRuleNumberTok
entryRuleNumberTok returns [EObject current=null]@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}:
	{ newCompositeNode(grammarAccess.getNumberTokRule()); }
	iv_ruleNumberTok=ruleNumberTok
	{ $current=$iv_ruleNumberTok.current; }
	EOF;
finally {
	myHiddenTokenState.restore();
}

// Rule NumberTok
ruleNumberTok returns [EObject current=null]
@init {
	enterRule();
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getNumberTokAccess().getNumberTokAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getNumberTokAccess().getValNumParserRuleCall_1_0());
				}
				lv_val_1_0=ruleNum
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNumberTokRule());
					}
					set(
						$current,
						"val",
						lv_val_1_0,
						"org.eclipse.fx.ide.css.CssDsl.Num");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;
finally {
	myHiddenTokenState.restore();
}

// Entry rule entryRuleUrlTok
entryRuleUrlTok returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUrlTokRule()); }
	iv_ruleUrlTok=ruleUrlTok
	{ $current=$iv_ruleUrlTok.current; }
	EOF;

// Rule UrlTok
ruleUrlTok returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getUrlTokAccess().getUrlTokAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getUrlTokAccess().getUrlURLTypeParserRuleCall_1_0());
				}
				lv_url_1_0=ruleURLType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUrlTokRule());
					}
					set(
						$current,
						"url",
						lv_url_1_0,
						"org.eclipse.fx.ide.css.CssDsl.URLType");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleColorTok
entryRuleColorTok returns [EObject current=null]@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}:
	{ newCompositeNode(grammarAccess.getColorTokRule()); }
	iv_ruleColorTok=ruleColorTok
	{ $current=$iv_ruleColorTok.current; }
	EOF;
finally {
	myHiddenTokenState.restore();
}

// Rule ColorTok
ruleColorTok returns [EObject current=null]
@init {
	enterRule();
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getColorTokAccess().getColorTokAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getColorTokAccess().getValueHexParserRuleCall_1_0());
				}
				lv_value_1_0=ruleHex
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getColorTokRule());
					}
					set(
						$current,
						"value",
						lv_value_1_0,
						"org.eclipse.fx.ide.css.CssDsl.Hex");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;
finally {
	myHiddenTokenState.restore();
}

// Entry rule entryRuleIdentifierOrFuncTok
entryRuleIdentifierOrFuncTok returns [EObject current=null]@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}:
	{ newCompositeNode(grammarAccess.getIdentifierOrFuncTokRule()); }
	iv_ruleIdentifierOrFuncTok=ruleIdentifierOrFuncTok
	{ $current=$iv_ruleIdentifierOrFuncTok.current; }
	EOF;
finally {
	myHiddenTokenState.restore();
}

// Rule IdentifierOrFuncTok
ruleIdentifierOrFuncTok returns [EObject current=null]
@init {
	enterRule();
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getIdentifierOrFuncTokAccess().getIdentifierTokAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getIdentifierOrFuncTokAccess().getNameIdentifierParserRuleCall_1_0());
				}
				lv_name_1_0=ruleIdentifier
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIdentifierOrFuncTokRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.fx.ide.css.CssDsl.Identifier");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getIdentifierOrFuncTokAccess().getFuncTokNameAction_2_0(),
						$current);
				}
			)
			otherlv_3=LeftParenthesis
			{
				newLeafNode(otherlv_3, grammarAccess.getIdentifierOrFuncTokAccess().getLeftParenthesisKeyword_2_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getIdentifierOrFuncTokAccess().getParamsCssTokParserRuleCall_2_2_0());
					}
					lv_params_4_0=ruleCssTok
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIdentifierOrFuncTokRule());
						}
						add(
							$current,
							"params",
							lv_params_4_0,
							"org.eclipse.fx.ide.css.CssDsl.CssTok");
						afterParserOrEnumRuleCall();
					}
				)
			)+
			otherlv_5=RightParenthesis
			{
				newLeafNode(otherlv_5, grammarAccess.getIdentifierOrFuncTokAccess().getRightParenthesisKeyword_2_3());
			}
		)?
	)
;
finally {
	myHiddenTokenState.restore();
}

// Entry rule entryRuleCssTok
entryRuleCssTok returns [EObject current=null]@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}:
	{ newCompositeNode(grammarAccess.getCssTokRule()); }
	iv_ruleCssTok=ruleCssTok
	{ $current=$iv_ruleCssTok.current; }
	EOF;
finally {
	myHiddenTokenState.restore();
}

// Rule CssTok
ruleCssTok returns [EObject current=null]
@init {
	enterRule();
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getCssTokAccess().getIdentifierOrFuncTokParserRuleCall_0());
		}
		this_IdentifierOrFuncTok_0=ruleIdentifierOrFuncTok
		{
			$current = $this_IdentifierOrFuncTok_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getCssTokAccess().getSymbolTokParserRuleCall_1());
		}
		this_SymbolTok_1=ruleSymbolTok
		{
			$current = $this_SymbolTok_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getCssTokAccess().getWSTokParserRuleCall_2());
		}
		this_WSTok_2=ruleWSTok
		{
			$current = $this_WSTok_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getCssTokAccess().getStringTokParserRuleCall_3());
		}
		this_StringTok_3=ruleStringTok
		{
			$current = $this_StringTok_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getCssTokAccess().getNumberTokParserRuleCall_4());
		}
		this_NumberTok_4=ruleNumberTok
		{
			$current = $this_NumberTok_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getCssTokAccess().getUrlTokParserRuleCall_5());
		}
		this_UrlTok_5=ruleUrlTok
		{
			$current = $this_UrlTok_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getCssTokAccess().getColorTokParserRuleCall_6());
		}
		this_ColorTok_6=ruleColorTok
		{
			$current = $this_ColorTok_6.current;
			afterParserOrEnumRuleCall();
		}
	)
;
finally {
	myHiddenTokenState.restore();
}

// Entry rule entryRuleURLType
entryRuleURLType returns [EObject current=null]@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}:
	{ newCompositeNode(grammarAccess.getURLTypeRule()); }
	iv_ruleURLType=ruleURLType
	{ $current=$iv_ruleURLType.current; }
	EOF;
finally {
	myHiddenTokenState.restore();
}

// Rule URLType
ruleURLType returns [EObject current=null]
@init {
	enterRule();
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Url_1
		{
			newLeafNode(otherlv_0, grammarAccess.getURLTypeAccess().getUrlKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getURLTypeAccess().getUrlValidURLParserRuleCall_1_0());
				}
				lv_url_1_0=ruleValidURL
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getURLTypeRule());
					}
					set(
						$current,
						"url",
						lv_url_1_0,
						"org.eclipse.fx.ide.css.CssDsl.ValidURL");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=RightParenthesis
		{
			newLeafNode(otherlv_2, grammarAccess.getURLTypeAccess().getRightParenthesisKeyword_2());
		}
	)
;
finally {
	myHiddenTokenState.restore();
}

// Entry rule entryRuleValidURLSymbol
entryRuleValidURLSymbol returns [String current=null]:
	{ newCompositeNode(grammarAccess.getValidURLSymbolRule()); }
	iv_ruleValidURLSymbol=ruleValidURLSymbol
	{ $current=$iv_ruleValidURLSymbol.current.getText(); }
	EOF;

// Rule ValidURLSymbol
ruleValidURLSymbol returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_DASH_0=RULE_DASH
		{
			$current.merge(this_DASH_0);
		}
		{
			newLeafNode(this_DASH_0, grammarAccess.getValidURLSymbolAccess().getDASHTerminalRuleCall_0());
		}
		    |
		kw=FullStop
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getValidURLSymbolAccess().getFullStopKeyword_1());
		}
		    |
		this_UNDERSCORE_2=RULE_UNDERSCORE
		{
			$current.merge(this_UNDERSCORE_2);
		}
		{
			newLeafNode(this_UNDERSCORE_2, grammarAccess.getValidURLSymbolAccess().getUNDERSCORETerminalRuleCall_2());
		}
		    |
		kw=Tilde
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getValidURLSymbolAccess().getTildeKeyword_3());
		}
		    |
		this_COLON_4=RULE_COLON
		{
			$current.merge(this_COLON_4);
		}
		{
			newLeafNode(this_COLON_4, grammarAccess.getValidURLSymbolAccess().getCOLONTerminalRuleCall_4());
		}
		    |
		kw=Solidus
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getValidURLSymbolAccess().getSolidusKeyword_5());
		}
		    |
		kw=QuestionMark
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getValidURLSymbolAccess().getQuestionMarkKeyword_6());
		}
		    |
		this_HASHMARK_7=RULE_HASHMARK
		{
			$current.merge(this_HASHMARK_7);
		}
		{
			newLeafNode(this_HASHMARK_7, grammarAccess.getValidURLSymbolAccess().getHASHMARKTerminalRuleCall_7());
		}
		    |
		kw=LeftSquareBracket
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getValidURLSymbolAccess().getLeftSquareBracketKeyword_8());
		}
		    |
		kw=RightSquareBracket
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getValidURLSymbolAccess().getRightSquareBracketKeyword_9());
		}
		    |
		kw=CommercialAt
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getValidURLSymbolAccess().getCommercialAtKeyword_10());
		}
		    |
		kw=ExclamationMark
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getValidURLSymbolAccess().getExclamationMarkKeyword_11());
		}
		    |
		kw=DollarSign
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getValidURLSymbolAccess().getDollarSignKeyword_12());
		}
		    |
		kw=Ampersand
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getValidURLSymbolAccess().getAmpersandKeyword_13());
		}
		    |
		kw=Asterisk
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getValidURLSymbolAccess().getAsteriskKeyword_14());
		}
		    |
		this_PLUS_15=RULE_PLUS
		{
			$current.merge(this_PLUS_15);
		}
		{
			newLeafNode(this_PLUS_15, grammarAccess.getValidURLSymbolAccess().getPLUSTerminalRuleCall_15());
		}
		    |
		this_COMMA_16=RULE_COMMA
		{
			$current.merge(this_COMMA_16);
		}
		{
			newLeafNode(this_COMMA_16, grammarAccess.getValidURLSymbolAccess().getCOMMATerminalRuleCall_16());
		}
		    |
		kw=Semicolon
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getValidURLSymbolAccess().getSemicolonKeyword_17());
		}
		    |
		(
			kw=EqualsSign
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getValidURLSymbolAccess().getEqualsSignKeyword_18_0());
			}
			{
				newCompositeNode(grammarAccess.getValidURLSymbolAccess().getKeywordHackParserRuleCall_18_1());
			}
			this_KeywordHack_19=ruleKeywordHack
			{
				$current.merge(this_KeywordHack_19);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleKeywordHack
entryRuleKeywordHack returns [String current=null]:
	{ newCompositeNode(grammarAccess.getKeywordHackRule()); }
	iv_ruleKeywordHack=ruleKeywordHack
	{ $current=$iv_ruleKeywordHack.current.getText(); }
	EOF;

// Rule KeywordHack
ruleKeywordHack returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw=Not
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKeywordHackAccess().getNotKeyword_0());
		}
		    |
		kw=No
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKeywordHackAccess().getNoKeyword_1());
		}
		    |
		kw=Url
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKeywordHackAccess().getUrlKeyword_2());
		}
		    |
		kw=Ur
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKeywordHackAccess().getUrKeyword_3());
		}
	)
;

// Entry rule entryRuleValidURL
entryRuleValidURL returns [String current=null]@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}:
	{ newCompositeNode(grammarAccess.getValidURLRule()); }
	iv_ruleValidURL=ruleValidURL
	{ $current=$iv_ruleValidURL.current.getText(); }
	EOF;
finally {
	myHiddenTokenState.restore();
}

// Rule ValidURL
ruleValidURL returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
@after {
	leaveRule();
}:
	(
		this_CSSSTRING_0=RULE_CSSSTRING
		{
			$current.merge(this_CSSSTRING_0);
		}
		{
			newLeafNode(this_CSSSTRING_0, grammarAccess.getValidURLAccess().getCSSSTRINGTerminalRuleCall_0());
		}
		    |
		(
			{
				newCompositeNode(grammarAccess.getValidURLAccess().getValidURLSymbolParserRuleCall_1_0());
			}
			this_ValidURLSymbol_1=ruleValidURLSymbol
			{
				$current.merge(this_ValidURLSymbol_1);
			}
			{
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getValidURLAccess().getKeywordHackParserRuleCall_1_1());
			}
			this_KeywordHack_2=ruleKeywordHack
			{
				$current.merge(this_KeywordHack_2);
			}
			{
				afterParserOrEnumRuleCall();
			}
			    |
			this_ONE_HEX_LETTER_3=RULE_ONE_HEX_LETTER
			{
				$current.merge(this_ONE_HEX_LETTER_3);
			}
			{
				newLeafNode(this_ONE_HEX_LETTER_3, grammarAccess.getValidURLAccess().getONE_HEX_LETTERTerminalRuleCall_1_2());
			}
			    |
			this_ONE_NON_HEX_LETTER_4=RULE_ONE_NON_HEX_LETTER
			{
				$current.merge(this_ONE_NON_HEX_LETTER_4);
			}
			{
				newLeafNode(this_ONE_NON_HEX_LETTER_4, grammarAccess.getValidURLAccess().getONE_NON_HEX_LETTERTerminalRuleCall_1_3());
			}
			    |
			this_ONE_INT_5=RULE_ONE_INT
			{
				$current.merge(this_ONE_INT_5);
			}
			{
				newLeafNode(this_ONE_INT_5, grammarAccess.getValidURLAccess().getONE_INTTerminalRuleCall_1_4());
			}
			    |
			kw=ReverseSolidusSpace
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getValidURLAccess().getReverseSolidusSpaceKeyword_1_5());
			}
			    |
			kw=ReverseSolidusLeftParenthesis
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getValidURLAccess().getReverseSolidusLeftParenthesisKeyword_1_6());
			}
			    |
			kw=ReverseSolidusRightParenthesis
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getValidURLAccess().getReverseSolidusRightParenthesisKeyword_1_7());
			}
			    |
			kw=ReverseSolidusApostrophe
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getValidURLAccess().getReverseSolidusApostropheKeyword_1_8());
			}
			    |
			kw=ReverseSolidusQuotationMark
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getValidURLAccess().getReverseSolidusQuotationMarkKeyword_1_9());
			}
			    |
			(
				this_PERCENT_11=RULE_PERCENT
				{
					$current.merge(this_PERCENT_11);
				}
				{
					newLeafNode(this_PERCENT_11, grammarAccess.getValidURLAccess().getPERCENTTerminalRuleCall_1_10_0());
				}
				(
					this_ONE_INT_12=RULE_ONE_INT
					{
						$current.merge(this_ONE_INT_12);
					}
					{
						newLeafNode(this_ONE_INT_12, grammarAccess.getValidURLAccess().getONE_INTTerminalRuleCall_1_10_1_0());
					}
					    |
					this_ONE_HEX_LETTER_13=RULE_ONE_HEX_LETTER
					{
						$current.merge(this_ONE_HEX_LETTER_13);
					}
					{
						newLeafNode(this_ONE_HEX_LETTER_13, grammarAccess.getValidURLAccess().getONE_HEX_LETTERTerminalRuleCall_1_10_1_1());
					}
				)
				(
					this_ONE_INT_14=RULE_ONE_INT
					{
						$current.merge(this_ONE_INT_14);
					}
					{
						newLeafNode(this_ONE_INT_14, grammarAccess.getValidURLAccess().getONE_INTTerminalRuleCall_1_10_2_0());
					}
					    |
					this_ONE_HEX_LETTER_15=RULE_ONE_HEX_LETTER
					{
						$current.merge(this_ONE_HEX_LETTER_15);
					}
					{
						newLeafNode(this_ONE_HEX_LETTER_15, grammarAccess.getValidURLAccess().getONE_HEX_LETTERTerminalRuleCall_1_10_2_1());
					}
				)
			)
		)+
	)
;
finally {
	myHiddenTokenState.restore();
}

// Entry rule entryRuleIdentifier
entryRuleIdentifier returns [String current=null]@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}:
	{ newCompositeNode(grammarAccess.getIdentifierRule()); }
	iv_ruleIdentifier=ruleIdentifier
	{ $current=$iv_ruleIdentifier.current.getText(); }
	EOF;
finally {
	myHiddenTokenState.restore();
}

// Rule Identifier
ruleIdentifier returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
@after {
	leaveRule();
}:
	(
		(
			this_DASH_0=RULE_DASH
			{
				$current.merge(this_DASH_0);
			}
			{
				newLeafNode(this_DASH_0, grammarAccess.getIdentifierAccess().getDASHTerminalRuleCall_0());
			}
		)?
		(
			this_UNDERSCORE_1=RULE_UNDERSCORE
			{
				$current.merge(this_UNDERSCORE_1);
			}
			{
				newLeafNode(this_UNDERSCORE_1, grammarAccess.getIdentifierAccess().getUNDERSCORETerminalRuleCall_1_0());
			}
			    |
			this_ONE_HEX_LETTER_2=RULE_ONE_HEX_LETTER
			{
				$current.merge(this_ONE_HEX_LETTER_2);
			}
			{
				newLeafNode(this_ONE_HEX_LETTER_2, grammarAccess.getIdentifierAccess().getONE_HEX_LETTERTerminalRuleCall_1_1());
			}
			    |
			this_ONE_NON_HEX_LETTER_3=RULE_ONE_NON_HEX_LETTER
			{
				$current.merge(this_ONE_NON_HEX_LETTER_3);
			}
			{
				newLeafNode(this_ONE_NON_HEX_LETTER_3, grammarAccess.getIdentifierAccess().getONE_NON_HEX_LETTERTerminalRuleCall_1_2());
			}
			    |
			{
				newCompositeNode(grammarAccess.getIdentifierAccess().getKeywordHackParserRuleCall_1_3());
			}
			this_KeywordHack_4=ruleKeywordHack
			{
				$current.merge(this_KeywordHack_4);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)
		(
			((
				RULE_UNDERSCORE
				    |
				RULE_DASH
				    |
				RULE_ONE_HEX_LETTER
				    |
				RULE_ONE_NON_HEX_LETTER
				    |
				RULE_ONE_INT
				    |
				ruleKeywordHack
			)
			)=>
			(
				this_UNDERSCORE_5=RULE_UNDERSCORE
				{
					$current.merge(this_UNDERSCORE_5);
				}
				{
					newLeafNode(this_UNDERSCORE_5, grammarAccess.getIdentifierAccess().getUNDERSCORETerminalRuleCall_2_0_0());
				}
				    |
				this_DASH_6=RULE_DASH
				{
					$current.merge(this_DASH_6);
				}
				{
					newLeafNode(this_DASH_6, grammarAccess.getIdentifierAccess().getDASHTerminalRuleCall_2_0_1());
				}
				    |
				this_ONE_HEX_LETTER_7=RULE_ONE_HEX_LETTER
				{
					$current.merge(this_ONE_HEX_LETTER_7);
				}
				{
					newLeafNode(this_ONE_HEX_LETTER_7, grammarAccess.getIdentifierAccess().getONE_HEX_LETTERTerminalRuleCall_2_0_2());
				}
				    |
				this_ONE_NON_HEX_LETTER_8=RULE_ONE_NON_HEX_LETTER
				{
					$current.merge(this_ONE_NON_HEX_LETTER_8);
				}
				{
					newLeafNode(this_ONE_NON_HEX_LETTER_8, grammarAccess.getIdentifierAccess().getONE_NON_HEX_LETTERTerminalRuleCall_2_0_3());
				}
				    |
				this_ONE_INT_9=RULE_ONE_INT
				{
					$current.merge(this_ONE_INT_9);
				}
				{
					newLeafNode(this_ONE_INT_9, grammarAccess.getIdentifierAccess().getONE_INTTerminalRuleCall_2_0_4());
				}
				    |
				{
					newCompositeNode(grammarAccess.getIdentifierAccess().getKeywordHackParserRuleCall_2_0_5());
				}
				this_KeywordHack_10=ruleKeywordHack
				{
					$current.merge(this_KeywordHack_10);
				}
				{
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;
finally {
	myHiddenTokenState.restore();
}

// Entry rule entryRuleNum
entryRuleNum returns [String current=null]@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}:
	{ newCompositeNode(grammarAccess.getNumRule()); }
	iv_ruleNum=ruleNum
	{ $current=$iv_ruleNum.current.getText(); }
	EOF;
finally {
	myHiddenTokenState.restore();
}

// Rule Num
ruleNum returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
@after {
	leaveRule();
}:
	(
		(
			this_PLUS_0=RULE_PLUS
			{
				$current.merge(this_PLUS_0);
			}
			{
				newLeafNode(this_PLUS_0, grammarAccess.getNumAccess().getPLUSTerminalRuleCall_0_0());
			}
			    |
			this_DASH_1=RULE_DASH
			{
				$current.merge(this_DASH_1);
			}
			{
				newLeafNode(this_DASH_1, grammarAccess.getNumAccess().getDASHTerminalRuleCall_0_1());
			}
		)?
		(
			(
				kw=FullStop
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getNumAccess().getFullStopKeyword_1_0_0());
				}
				(
					(RULE_ONE_INT)=>
					this_ONE_INT_3=RULE_ONE_INT
					{
						$current.merge(this_ONE_INT_3);
					}
					{
						newLeafNode(this_ONE_INT_3, grammarAccess.getNumAccess().getONE_INTTerminalRuleCall_1_0_1());
					}
				)+
			)
			    |
			(
				(
					(RULE_ONE_INT)=>
					this_ONE_INT_4=RULE_ONE_INT
					{
						$current.merge(this_ONE_INT_4);
					}
					{
						newLeafNode(this_ONE_INT_4, grammarAccess.getNumAccess().getONE_INTTerminalRuleCall_1_1_0());
					}
				)+
				(
					(
						(FullStop)=>
						kw=FullStop
						{
							$current.merge(kw);
							newLeafNode(kw, grammarAccess.getNumAccess().getFullStopKeyword_1_1_1_0());
						}
					)
					(
						(RULE_ONE_INT)=>
						this_ONE_INT_6=RULE_ONE_INT
						{
							$current.merge(this_ONE_INT_6);
						}
						{
							newLeafNode(this_ONE_INT_6, grammarAccess.getNumAccess().getONE_INTTerminalRuleCall_1_1_1_1());
						}
					)+
				)?
			)
		)
	)
;
finally {
	myHiddenTokenState.restore();
}

// Entry rule entryRuleHex
entryRuleHex returns [String current=null]:
	{ newCompositeNode(grammarAccess.getHexRule()); }
	iv_ruleHex=ruleHex
	{ $current=$iv_ruleHex.current.getText(); }
	EOF;

// Rule Hex
ruleHex returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_HASHMARK_0=RULE_HASHMARK
		{
			$current.merge(this_HASHMARK_0);
		}
		{
			newLeafNode(this_HASHMARK_0, grammarAccess.getHexAccess().getHASHMARKTerminalRuleCall_0());
		}
		(
			((
				RULE_ONE_INT
				    |
				RULE_ONE_HEX_LETTER
			)
			)=>
			(
				this_ONE_INT_1=RULE_ONE_INT
				{
					$current.merge(this_ONE_INT_1);
				}
				{
					newLeafNode(this_ONE_INT_1, grammarAccess.getHexAccess().getONE_INTTerminalRuleCall_1_0_0());
				}
				    |
				this_ONE_HEX_LETTER_2=RULE_ONE_HEX_LETTER
				{
					$current.merge(this_ONE_HEX_LETTER_2);
				}
				{
					newLeafNode(this_ONE_HEX_LETTER_2, grammarAccess.getHexAccess().getONE_HEX_LETTERTerminalRuleCall_1_0_1());
				}
			)
		)+
	)
;
