/*
 * generated by Xtext 2.9.0
 */
package org.eclipse.fx.ide.css.ui

import com.google.inject.Binder
import com.google.inject.matcher.Matchers
import com.google.inject.name.Names
import org.eclipse.fx.core.guice.FXLoggerListener
import org.eclipse.fx.core.guice.OSGiLoggerFactoryProvider
import org.eclipse.fx.core.log.LoggerFactory
import org.eclipse.fx.ide.css.ui.contentassist.TemplateProposalProvider
import org.eclipse.fx.ide.css.ui.doubleclicking.CssGrammarAwareStrategy
import org.eclipse.fx.ide.css.ui.highlighting.CssDslHighlightingCalculator2
import org.eclipse.fx.ide.css.ui.highlighting.CssDslHighlightingConfiguration
import org.eclipse.fx.ide.css.ui.highlighting.TokenMapper
import org.eclipse.fx.ide.css.ui.hover.CssHoverProvider
import org.eclipse.fx.ide.css.ui.hover.ExtApiDelegatingDocumentationProvider
import org.eclipse.fx.ide.css.ui.occurences.CssDslOccurenceComputer
import org.eclipse.xtend.lib.annotations.FinalFieldsConstructor
import org.eclipse.xtext.documentation.IEObjectDocumentationProvider
import org.eclipse.xtext.ide.editor.syntaxcoloring.ISemanticHighlightingCalculator
import org.eclipse.xtext.ui.editor.contentassist.ITemplateProposalProvider
import org.eclipse.xtext.ui.editor.contentassist.XtextContentAssistProcessor
import org.eclipse.xtext.ui.editor.doubleClicking.LexerTokenAndCharacterPairAwareStrategy
import org.eclipse.xtext.ui.editor.hover.IEObjectHoverProvider
import org.eclipse.xtext.ui.editor.occurrences.IOccurrenceComputer
import org.eclipse.xtext.ui.editor.syntaxcoloring.AbstractAntlrTokenToAttributeIdMapper
import org.eclipse.xtext.ui.editor.syntaxcoloring.IHighlightingConfiguration

/**
 * Use this class to register components to be used within the Eclipse IDE.
 */
@FinalFieldsConstructor
class CssDslUiModule extends AbstractCssDslUiModule {
	
	override configure(Binder binder) {
		
		binder.bind(typeof(ISemanticHighlightingCalculator)).to(typeof(CssDslHighlightingCalculator2));
		binder.bind(typeof(IHighlightingConfiguration)).to(typeof(CssDslHighlightingConfiguration));
		
		// hovering
		binder.bind(typeof(IEObjectHoverProvider)).to(typeof(CssHoverProvider));
		binder.bind(typeof(IEObjectDocumentationProvider)).to(typeof(ExtApiDelegatingDocumentationProvider));
		
		
//		binder.bind(IFormatter.class).to(DefaultFormatter.class);
		
//		binder.bind(IHiddenTokenHelper.class).to(HiddenTokenHelper.class);
		
		binder.bind(typeof(String)).annotatedWith(Names.named(XtextContentAssistProcessor.COMPLETION_AUTO_ACTIVATION_CHARS)).toInstance(": ");
		
		binder.bind(typeof(LexerTokenAndCharacterPairAwareStrategy)).to(typeof(CssGrammarAwareStrategy));
		
		binder.bind(typeof(AbstractAntlrTokenToAttributeIdMapper)).to(typeof(TokenMapper));
		
		binder.bind(typeof(IOccurrenceComputer)).to(typeof(CssDslOccurenceComputer));
		
		// setup efxclipse logger
		binder.bind(typeof(LoggerFactory)).toProvider(typeof(OSGiLoggerFactoryProvider));
		binder.bindListener(Matchers.any(), new FXLoggerListener()); 
		
		//binder.bind(CssDialectExtensionRegistry.class).toProvider(OsgiCssDialectExtensionRegistryProvider.class);
//		binder.bind(typeof(CssExt)).toProvider(typeof(CssExt.OsgiCssExtServiceProvider));
		
		
		super.configure(binder)
	}

	override def Class<? extends ITemplateProposalProvider> bindITemplateProposalProvider() {
		return typeof(TemplateProposalProvider)
	}
	
}
