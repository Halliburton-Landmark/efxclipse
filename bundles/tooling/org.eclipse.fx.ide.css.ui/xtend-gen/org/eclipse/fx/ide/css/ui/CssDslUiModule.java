/**
 * generated by Xtext 2.9.0
 */
package org.eclipse.fx.ide.css.ui;

import com.google.inject.Binder;
import com.google.inject.binder.AnnotatedBindingBuilder;
import com.google.inject.binder.LinkedBindingBuilder;
import com.google.inject.matcher.Matcher;
import com.google.inject.matcher.Matchers;
import com.google.inject.name.Named;
import com.google.inject.name.Names;
import org.eclipse.fx.core.guice.FXLoggerListener;
import org.eclipse.fx.core.guice.OSGiLoggerFactoryProvider;
import org.eclipse.fx.core.log.LoggerFactory;
import org.eclipse.fx.ide.css.ui.AbstractCssDslUiModule;
import org.eclipse.fx.ide.css.ui.contentassist.TemplateProposalProvider;
import org.eclipse.fx.ide.css.ui.doubleclicking.CssGrammarAwareStrategy;
import org.eclipse.fx.ide.css.ui.highlighting.CssDslHighlightingCalculator2;
import org.eclipse.fx.ide.css.ui.highlighting.CssDslHighlightingConfiguration;
import org.eclipse.fx.ide.css.ui.highlighting.TokenMapper;
import org.eclipse.fx.ide.css.ui.hover.CssHoverProvider;
import org.eclipse.fx.ide.css.ui.hover.ExtApiDelegatingDocumentationProvider;
import org.eclipse.fx.ide.css.ui.occurences.CssDslOccurenceComputer;
import org.eclipse.ui.plugin.AbstractUIPlugin;
import org.eclipse.xtend.lib.annotations.FinalFieldsConstructor;
import org.eclipse.xtext.documentation.IEObjectDocumentationProvider;
import org.eclipse.xtext.ide.editor.syntaxcoloring.ISemanticHighlightingCalculator;
import org.eclipse.xtext.ui.editor.contentassist.ITemplateProposalProvider;
import org.eclipse.xtext.ui.editor.contentassist.XtextContentAssistProcessor;
import org.eclipse.xtext.ui.editor.doubleClicking.LexerTokenAndCharacterPairAwareStrategy;
import org.eclipse.xtext.ui.editor.hover.IEObjectHoverProvider;
import org.eclipse.xtext.ui.editor.occurrences.IOccurrenceComputer;
import org.eclipse.xtext.ui.editor.syntaxcoloring.AbstractAntlrTokenToAttributeIdMapper;
import org.eclipse.xtext.ui.editor.syntaxcoloring.IHighlightingConfiguration;

/**
 * Use this class to register components to be used within the Eclipse IDE.
 */
@FinalFieldsConstructor
@SuppressWarnings("all")
public class CssDslUiModule extends AbstractCssDslUiModule {
  @Override
  public void configure(final Binder binder) {
    AnnotatedBindingBuilder<ISemanticHighlightingCalculator> _bind = binder.<ISemanticHighlightingCalculator>bind(ISemanticHighlightingCalculator.class);
    _bind.to(CssDslHighlightingCalculator2.class);
    AnnotatedBindingBuilder<IHighlightingConfiguration> _bind_1 = binder.<IHighlightingConfiguration>bind(IHighlightingConfiguration.class);
    _bind_1.to(CssDslHighlightingConfiguration.class);
    AnnotatedBindingBuilder<IEObjectHoverProvider> _bind_2 = binder.<IEObjectHoverProvider>bind(IEObjectHoverProvider.class);
    _bind_2.to(CssHoverProvider.class);
    AnnotatedBindingBuilder<IEObjectDocumentationProvider> _bind_3 = binder.<IEObjectDocumentationProvider>bind(IEObjectDocumentationProvider.class);
    _bind_3.to(ExtApiDelegatingDocumentationProvider.class);
    AnnotatedBindingBuilder<String> _bind_4 = binder.<String>bind(String.class);
    Named _named = Names.named(XtextContentAssistProcessor.COMPLETION_AUTO_ACTIVATION_CHARS);
    LinkedBindingBuilder<String> _annotatedWith = _bind_4.annotatedWith(_named);
    _annotatedWith.toInstance(": ");
    AnnotatedBindingBuilder<LexerTokenAndCharacterPairAwareStrategy> _bind_5 = binder.<LexerTokenAndCharacterPairAwareStrategy>bind(LexerTokenAndCharacterPairAwareStrategy.class);
    _bind_5.to(CssGrammarAwareStrategy.class);
    AnnotatedBindingBuilder<AbstractAntlrTokenToAttributeIdMapper> _bind_6 = binder.<AbstractAntlrTokenToAttributeIdMapper>bind(AbstractAntlrTokenToAttributeIdMapper.class);
    _bind_6.to(TokenMapper.class);
    AnnotatedBindingBuilder<IOccurrenceComputer> _bind_7 = binder.<IOccurrenceComputer>bind(IOccurrenceComputer.class);
    _bind_7.to(CssDslOccurenceComputer.class);
    AnnotatedBindingBuilder<LoggerFactory> _bind_8 = binder.<LoggerFactory>bind(LoggerFactory.class);
    _bind_8.toProvider(OSGiLoggerFactoryProvider.class);
    Matcher<Object> _any = Matchers.any();
    FXLoggerListener _fXLoggerListener = new FXLoggerListener();
    binder.bindListener(_any, _fXLoggerListener);
    super.configure(binder);
  }
  
  @Override
  public Class<? extends ITemplateProposalProvider> bindITemplateProposalProvider() {
    return TemplateProposalProvider.class;
  }
  
  public CssDslUiModule(final AbstractUIPlugin plugin) {
    super(plugin);
  }
}
