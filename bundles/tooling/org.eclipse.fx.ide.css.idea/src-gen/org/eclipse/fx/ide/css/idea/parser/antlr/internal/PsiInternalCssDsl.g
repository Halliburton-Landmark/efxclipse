/*
 * generated by Xtext 2.9.0
 */
grammar PsiInternalCssDsl;

options {
	superClass=AbstractPsiAntlrParser;
}

@lexer::header {
package org.eclipse.fx.ide.css.idea.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.eclipse.fx.ide.css.idea.parser.antlr.internal;

import org.eclipse.xtext.idea.parser.AbstractPsiAntlrParser;
import org.eclipse.fx.ide.css.idea.lang.CssDslElementTypeProvider;
import org.eclipse.xtext.idea.parser.TokenTypeProvider;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.fx.ide.css.services.CssDslGrammarAccess;

import com.intellij.lang.PsiBuilder;
}

@parser::members {

	protected CssDslGrammarAccess grammarAccess;

	protected CssDslElementTypeProvider elementTypeProvider;

	public PsiInternalCssDslParser(PsiBuilder builder, TokenStream input, CssDslElementTypeProvider elementTypeProvider, CssDslGrammarAccess grammarAccess) {
		this(input);
		setPsiBuilder(builder);
    	this.grammarAccess = grammarAccess;
		this.elementTypeProvider = elementTypeProvider;
	}

	@Override
	protected String getFirstRuleName() {
		return "Stylesheet";
	}

}

//Entry rule entryRuleStylesheet
entryRuleStylesheet returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getStylesheetElementType()); }
	iv_ruleStylesheet=ruleStylesheet
	{ $current=$iv_ruleStylesheet.current; }
	EOF;

// Rule Stylesheet
ruleStylesheet returns [Boolean current=false]
:
	(
		(
			(
				{
					markComposite(elementTypeProvider.getStylesheet_CharsetCharsetRuleParserRuleCall_0_0ElementType());
				}
				lv_charset_0_0=ruleCharsetRule
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)?
		(
			(
				{
					markComposite(elementTypeProvider.getStylesheet_ImportsImportRuleParserRuleCall_1_0ElementType());
				}
				lv_imports_1_0=ruleImportRule
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)*
		(
			(
				(
					{
						markComposite(elementTypeProvider.getStylesheet_RulesetRulesetParserRuleCall_2_0_0ElementType());
					}
					lv_ruleset_2_0=ruleRuleset
					{
						doneComposite();
						if(!$current) {
							associateWithSemanticElement();
							$current = true;
						}
					}
				)
			)
			    |
			(
				(
					{
						markComposite(elementTypeProvider.getStylesheet_MediaMediaRuleParserRuleCall_2_1_0ElementType());
					}
					lv_media_3_0=ruleMediaRule
					{
						doneComposite();
						if(!$current) {
							associateWithSemanticElement();
							$current = true;
						}
					}
				)
			)
			    |
			(
				(
					{
						markComposite(elementTypeProvider.getStylesheet_PagePageRuleParserRuleCall_2_2_0ElementType());
					}
					lv_page_4_0=rulePageRule
					{
						doneComposite();
						if(!$current) {
							associateWithSemanticElement();
							$current = true;
						}
					}
				)
			)
			    |
			(
				(
					{
						markComposite(elementTypeProvider.getStylesheet_Font_faceFontFaceRuleParserRuleCall_2_3_0ElementType());
					}
					lv_font_face_5_0=ruleFontFaceRule
					{
						doneComposite();
						if(!$current) {
							associateWithSemanticElement();
							$current = true;
						}
					}
				)
			)
			    |
			(
				(
					{
						markComposite(elementTypeProvider.getStylesheet_KeyframesKeyframesRuleParserRuleCall_2_4_0ElementType());
					}
					lv_keyframes_6_0=ruleKeyframesRule
					{
						doneComposite();
						if(!$current) {
							associateWithSemanticElement();
							$current = true;
						}
					}
				)
			)
		)*
	)
;

//Entry rule entryRuleCharsetRule
entryRuleCharsetRule returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getCharsetRuleElementType()); }
	iv_ruleCharsetRule=ruleCharsetRule
	{ $current=$iv_ruleCharsetRule.current; }
	EOF;

// Rule CharsetRule
ruleCharsetRule returns [Boolean current=false]
:
	(
		{
			markLeaf(elementTypeProvider.getCharsetRule_CharsetKeyword_0ElementType());
		}
		otherlv_0='@charset'
		{
			doneLeaf(otherlv_0);
		}
		(
			(
				{
					markLeaf(elementTypeProvider.getCharsetRule_CharsetCSSSTRINGTerminalRuleCall_1_0ElementType());
				}
				lv_charset_1_0=RULE_CSSSTRING
				{
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
				{
					doneLeaf(lv_charset_1_0);
				}
			)
		)
		{
			markLeaf(elementTypeProvider.getCharsetRule_SemicolonKeyword_2ElementType());
		}
		otherlv_2=';'
		{
			doneLeaf(otherlv_2);
		}
	)
;

//Entry rule entryRuleImportRule
entryRuleImportRule returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getImportRuleElementType()); }
	iv_ruleImportRule=ruleImportRule
	{ $current=$iv_ruleImportRule.current; }
	EOF;

// Rule ImportRule
ruleImportRule returns [Boolean current=false]
:
	(
		{
			markLeaf(elementTypeProvider.getImportRule_ImportKeyword_0ElementType());
		}
		otherlv_0='@import'
		{
			doneLeaf(otherlv_0);
		}
		(
			(
				(
					{
						markLeaf(elementTypeProvider.getImportRule_ValueCSSSTRINGTerminalRuleCall_1_0_0ElementType());
					}
					lv_value_1_0=RULE_CSSSTRING
					{
						if(!$current) {
							associateWithSemanticElement();
							$current = true;
						}
					}
					{
						doneLeaf(lv_value_1_0);
					}
				)
			)
			    |
			(
				{
					markComposite(elementTypeProvider.getImportRule_URLTypeParserRuleCall_1_1_0ElementType());
				}
				this_URLType_2=ruleURLType
				{
					$current = $this_URLType_2.current;
					doneComposite();
				}
				(
					(
						{
							markComposite(elementTypeProvider.getImportRule_MediaListMediaListParserRuleCall_1_1_1_0ElementType());
						}
						lv_mediaList_3_0=ruleMediaList
						{
							doneComposite();
							if(!$current) {
								associateWithSemanticElement();
								$current = true;
							}
						}
					)
				)?
			)
		)
		{
			markLeaf(elementTypeProvider.getImportRule_SemicolonKeyword_2ElementType());
		}
		otherlv_4=';'
		{
			doneLeaf(otherlv_4);
		}
	)
;

//Entry rule entryRulePageRule
entryRulePageRule returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getPageRuleElementType()); }
	iv_rulePageRule=rulePageRule
	{ $current=$iv_rulePageRule.current; }
	EOF;

// Rule PageRule
rulePageRule returns [Boolean current=false]
:
	(
		(
			{
				precedeComposite(elementTypeProvider.getPageRule_PageRuleAction_0ElementType());
				doneComposite();
				associateWithSemanticElement();
			}
		)
		{
			markLeaf(elementTypeProvider.getPageRule_PageKeyword_1ElementType());
		}
		otherlv_1='@page'
		{
			doneLeaf(otherlv_1);
		}
		(
			(
				{
					markComposite(elementTypeProvider.getPageRule_PseudoPagePseudoPageParserRuleCall_2_0ElementType());
				}
				lv_pseudoPage_2_0=rulePseudoPage
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)?
		{
			markLeaf(elementTypeProvider.getPageRule_LeftCurlyBracketKeyword_3ElementType());
		}
		otherlv_3='{'
		{
			doneLeaf(otherlv_3);
		}
		(
			(
				{
					markComposite(elementTypeProvider.getPageRule_DeclarationsCssDeclarationParserRuleCall_4_0ElementType());
				}
				lv_declarations_4_0=ruleCssDeclaration
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)?
		(
			{
				markLeaf(elementTypeProvider.getPageRule_SemicolonKeyword_5_0ElementType());
			}
			otherlv_5=';'
			{
				doneLeaf(otherlv_5);
			}
			(
				(
					{
						markComposite(elementTypeProvider.getPageRule_DeclarationsCssDeclarationParserRuleCall_5_1_0ElementType());
					}
					lv_declarations_6_0=ruleCssDeclaration
					{
						doneComposite();
						if(!$current) {
							associateWithSemanticElement();
							$current = true;
						}
					}
				)
			)?
		)*
		{
			markLeaf(elementTypeProvider.getPageRule_RightCurlyBracketKeyword_6ElementType());
		}
		otherlv_7='}'
		{
			doneLeaf(otherlv_7);
		}
	)
;

//Entry rule entryRulePseudoPage
entryRulePseudoPage returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getPseudoPageElementType()); }
	iv_rulePseudoPage=rulePseudoPage
	{ $current=$iv_rulePseudoPage.current; }
	EOF;

// Rule PseudoPage
rulePseudoPage returns [Boolean current=false]
:
	(
		{
			markLeaf(elementTypeProvider.getPseudoPage_COLONTerminalRuleCall_0ElementType());
		}
		this_COLON_0=RULE_COLON
		{
			doneLeaf(this_COLON_0);
		}
		{
			markComposite(elementTypeProvider.getPseudoPage_IdentifierParserRuleCall_1ElementType());
		}
		ruleIdentifier
		{
			doneComposite();
		}
	)
;

//Entry rule entryRuleMediaRule
entryRuleMediaRule returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getMediaRuleElementType()); }
	iv_ruleMediaRule=ruleMediaRule
	{ $current=$iv_ruleMediaRule.current; }
	EOF;

// Rule MediaRule
ruleMediaRule returns [Boolean current=false]
:
	(
		{
			markLeaf(elementTypeProvider.getMediaRule_MediaKeyword_0ElementType());
		}
		otherlv_0='@media'
		{
			doneLeaf(otherlv_0);
		}
		(
			(
				{
					markComposite(elementTypeProvider.getMediaRule_MedialistMediaListParserRuleCall_1_0ElementType());
				}
				lv_medialist_1_0=ruleMediaList
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)
		{
			markLeaf(elementTypeProvider.getMediaRule_LeftCurlyBracketKeyword_2ElementType());
		}
		otherlv_2='{'
		{
			doneLeaf(otherlv_2);
		}
		(
			(
				{
					markComposite(elementTypeProvider.getMediaRule_RulesetsRulesetParserRuleCall_3_0ElementType());
				}
				lv_rulesets_3_0=ruleRuleset
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)*
		{
			markLeaf(elementTypeProvider.getMediaRule_RightCurlyBracketKeyword_4ElementType());
		}
		otherlv_4='}'
		{
			doneLeaf(otherlv_4);
		}
	)
;

//Entry rule entryRuleMediaList
entryRuleMediaList returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getMediaListElementType()); }
	iv_ruleMediaList=ruleMediaList
	{ $current=$iv_ruleMediaList.current; }
	EOF;

// Rule MediaList
ruleMediaList returns [Boolean current=false]
:
	(
		(
			(
				{
					markComposite(elementTypeProvider.getMediaList_EntryMediaParserRuleCall_0_0ElementType());
				}
				lv_entry_0_0=ruleMedia
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)
		(
			{
				markLeaf(elementTypeProvider.getMediaList_COMMATerminalRuleCall_1_0ElementType());
			}
			this_COMMA_1=RULE_COMMA
			{
				doneLeaf(this_COMMA_1);
			}
			(
				(
					{
						markComposite(elementTypeProvider.getMediaList_EntryMediaParserRuleCall_1_1_0ElementType());
					}
					lv_entry_2_0=ruleMedia
					{
						doneComposite();
						if(!$current) {
							associateWithSemanticElement();
							$current = true;
						}
					}
				)
			)
		)*
	)
;

//Entry rule entryRuleMedia
entryRuleMedia returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getMediaElementType()); }
	iv_ruleMedia=ruleMedia
	{ $current=$iv_ruleMedia.current; }
	EOF;

// Rule Media
ruleMedia returns [Boolean current=false]
:
	(
		(
			{
				markComposite(elementTypeProvider.getMedia_NameIdentifierParserRuleCall_0ElementType());
			}
			lv_name_0_0=ruleIdentifier
			{
				doneComposite();
				if(!$current) {
					associateWithSemanticElement();
					$current = true;
				}
			}
		)
	)
;

//Entry rule entryRuleFontFaceRule
entryRuleFontFaceRule returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getFontFaceRuleElementType()); }
	iv_ruleFontFaceRule=ruleFontFaceRule
	{ $current=$iv_ruleFontFaceRule.current; }
	EOF;

// Rule FontFaceRule
ruleFontFaceRule returns [Boolean current=false]
:
	(
		(
			{
				precedeComposite(elementTypeProvider.getFontFaceRule_FontFaceRuleAction_0ElementType());
				doneComposite();
				associateWithSemanticElement();
			}
		)
		{
			markLeaf(elementTypeProvider.getFontFaceRule_FontFaceKeyword_1ElementType());
		}
		otherlv_1='@font-face'
		{
			doneLeaf(otherlv_1);
		}
		{
			markLeaf(elementTypeProvider.getFontFaceRule_LeftCurlyBracketKeyword_2ElementType());
		}
		otherlv_2='{'
		{
			doneLeaf(otherlv_2);
		}
		(
			(
				{
					markComposite(elementTypeProvider.getFontFaceRule_DeclarationsCssDeclarationParserRuleCall_3_0ElementType());
				}
				lv_declarations_3_0=ruleCssDeclaration
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)?
		(
			{
				markLeaf(elementTypeProvider.getFontFaceRule_SemicolonKeyword_4_0ElementType());
			}
			otherlv_4=';'
			{
				doneLeaf(otherlv_4);
			}
			(
				(
					{
						markComposite(elementTypeProvider.getFontFaceRule_DeclarationsCssDeclarationParserRuleCall_4_1_0ElementType());
					}
					lv_declarations_5_0=ruleCssDeclaration
					{
						doneComposite();
						if(!$current) {
							associateWithSemanticElement();
							$current = true;
						}
					}
				)
			)?
		)*
		{
			markLeaf(elementTypeProvider.getFontFaceRule_RightCurlyBracketKeyword_5ElementType());
		}
		otherlv_6='}'
		{
			doneLeaf(otherlv_6);
		}
	)
;

//Entry rule entryRuleKeyframesRule
entryRuleKeyframesRule returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getKeyframesRuleElementType()); }
	iv_ruleKeyframesRule=ruleKeyframesRule
	{ $current=$iv_ruleKeyframesRule.current; }
	EOF;

// Rule KeyframesRule
ruleKeyframesRule returns [Boolean current=false]
:
	(
		(
			{
				precedeComposite(elementTypeProvider.getKeyframesRule_KeyframesRuleAction_0ElementType());
				doneComposite();
				associateWithSemanticElement();
			}
		)
		{
			markLeaf(elementTypeProvider.getKeyframesRule_KeyframesKeyword_1ElementType());
		}
		otherlv_1='@keyframes'
		{
			doneLeaf(otherlv_1);
		}
		(
			(
				{
					markComposite(elementTypeProvider.getKeyframesRule_NameIdentifierParserRuleCall_2_0ElementType());
				}
				lv_name_2_0=ruleIdentifier
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)
		{
			markLeaf(elementTypeProvider.getKeyframesRule_LeftCurlyBracketKeyword_3ElementType());
		}
		otherlv_3='{'
		{
			doneLeaf(otherlv_3);
		}
		(
			(
				{
					markComposite(elementTypeProvider.getKeyframesRule_KeyframeselectorsKeyframeSelectorParserRuleCall_4_0ElementType());
				}
				lv_keyframeselectors_4_0=ruleKeyframeSelector
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)?
		(
			{
				markLeaf(elementTypeProvider.getKeyframesRule_SemicolonKeyword_5_0ElementType());
			}
			otherlv_5=';'
			{
				doneLeaf(otherlv_5);
			}
			(
				(
					{
						markComposite(elementTypeProvider.getKeyframesRule_KeyframeselectorsKeyframeSelectorParserRuleCall_5_1_0ElementType());
					}
					lv_keyframeselectors_6_0=ruleKeyframeSelector
					{
						doneComposite();
						if(!$current) {
							associateWithSemanticElement();
							$current = true;
						}
					}
				)
			)?
		)*
		{
			markLeaf(elementTypeProvider.getKeyframesRule_RightCurlyBracketKeyword_6ElementType());
		}
		otherlv_7='}'
		{
			doneLeaf(otherlv_7);
		}
	)
;

//Entry rule entryRuleKeyframeSelector
entryRuleKeyframeSelector returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getKeyframeSelectorElementType()); }
	iv_ruleKeyframeSelector=ruleKeyframeSelector
	{ $current=$iv_ruleKeyframeSelector.current; }
	EOF;

// Rule KeyframeSelector
ruleKeyframeSelector returns [Boolean current=false]
:
	(
		(
			(
				(
					{
						markComposite(elementTypeProvider.getKeyframeSelector_TypeIdentifierParserRuleCall_0_0_0ElementType());
					}
					lv_type_0_0=ruleIdentifier
					{
						doneComposite();
						if(!$current) {
							associateWithSemanticElement();
							$current = true;
						}
					}
				)
			)
			    |
			(
				(
					(
						{
							markComposite(elementTypeProvider.getKeyframeSelector_PercentageNumParserRuleCall_0_1_0_0ElementType());
						}
						lv_percentage_1_0=ruleNum
						{
							doneComposite();
							if(!$current) {
								associateWithSemanticElement();
								$current = true;
							}
						}
					)
				)
				{
					markLeaf(elementTypeProvider.getKeyframeSelector_PERCENTTerminalRuleCall_0_1_1ElementType());
				}
				this_PERCENT_2=RULE_PERCENT
				{
					doneLeaf(this_PERCENT_2);
				}
			)
		)
		{
			markLeaf(elementTypeProvider.getKeyframeSelector_LeftCurlyBracketKeyword_1ElementType());
		}
		otherlv_3='{'
		{
			doneLeaf(otherlv_3);
		}
		(
			(
				{
					markComposite(elementTypeProvider.getKeyframeSelector_DeclarationsCssDeclarationParserRuleCall_2_0ElementType());
				}
				lv_declarations_4_0=ruleCssDeclaration
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)?
		(
			{
				markLeaf(elementTypeProvider.getKeyframeSelector_SemicolonKeyword_3_0ElementType());
			}
			otherlv_5=';'
			{
				doneLeaf(otherlv_5);
			}
			(
				(
					{
						markComposite(elementTypeProvider.getKeyframeSelector_DeclarationsCssDeclarationParserRuleCall_3_1_0ElementType());
					}
					lv_declarations_6_0=ruleCssDeclaration
					{
						doneComposite();
						if(!$current) {
							associateWithSemanticElement();
							$current = true;
						}
					}
				)
			)?
		)*
		{
			markLeaf(elementTypeProvider.getKeyframeSelector_RightCurlyBracketKeyword_4ElementType());
		}
		otherlv_7='}'
		{
			doneLeaf(otherlv_7);
		}
	)
;

//Entry rule entryRuleRuleset
entryRuleRuleset returns [Boolean current=false]@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_ML_COMMENT");
}:
	{ markComposite(elementTypeProvider.getRulesetElementType()); }
	iv_ruleRuleset=ruleRuleset
	{ $current=$iv_ruleRuleset.current; }
	EOF;
finally {
	myHiddenTokenState.restore();
}

// Rule Ruleset
ruleRuleset returns [Boolean current=false]
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_ML_COMMENT");
}:
	(
		(
			(
				{
					markComposite(elementTypeProvider.getRuleset_SelectorsSelectorParserRuleCall_0_0ElementType());
				}
				lv_selectors_0_0=ruleSelector
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)
		(
			(
				{
					markLeaf(elementTypeProvider.getRuleset_WSTerminalRuleCall_1_0ElementType());
				}
				this_WS_1=RULE_WS
				{
					doneLeaf(this_WS_1);
				}
			)*
			{
				markLeaf(elementTypeProvider.getRuleset_COMMATerminalRuleCall_1_1ElementType());
			}
			this_COMMA_2=RULE_COMMA
			{
				doneLeaf(this_COMMA_2);
			}
			(
				(
					{
						markComposite(elementTypeProvider.getRuleset_SelectorsSelectorParserRuleCall_1_2_0ElementType());
					}
					lv_selectors_3_0=ruleSelector
					{
						doneComposite();
						if(!$current) {
							associateWithSemanticElement();
							$current = true;
						}
					}
				)
			)
		)*
		(
			{
				markLeaf(elementTypeProvider.getRuleset_WSTerminalRuleCall_2ElementType());
			}
			this_WS_4=RULE_WS
			{
				doneLeaf(this_WS_4);
			}
		)*
		{
			markLeaf(elementTypeProvider.getRuleset_LeftCurlyBracketKeyword_3ElementType());
		}
		otherlv_5='{'
		{
			doneLeaf(otherlv_5);
		}
		(
			(
				(
					{
						markComposite(elementTypeProvider.getRuleset_DeclarationsCssDeclarationParserRuleCall_4_0_0ElementType());
					}
					lv_declarations_6_0=ruleCssDeclaration
					{
						doneComposite();
						if(!$current) {
							associateWithSemanticElement();
							$current = true;
						}
					}
				)
			)
			(
				{
					markLeaf(elementTypeProvider.getRuleset_SemicolonKeyword_4_1_0ElementType());
				}
				otherlv_7=';'
				{
					doneLeaf(otherlv_7);
				}
				(
					(
						{
							markComposite(elementTypeProvider.getRuleset_DeclarationsCssDeclarationParserRuleCall_4_1_1_0ElementType());
						}
						lv_declarations_8_0=ruleCssDeclaration
						{
							doneComposite();
							if(!$current) {
								associateWithSemanticElement();
								$current = true;
							}
						}
					)
				)
			)*
			(
				{
					markLeaf(elementTypeProvider.getRuleset_SemicolonKeyword_4_2ElementType());
				}
				otherlv_9=';'
				{
					doneLeaf(otherlv_9);
				}
			)?
		)?
		{
			markLeaf(elementTypeProvider.getRuleset_RightCurlyBracketKeyword_5ElementType());
		}
		otherlv_10='}'
		{
			doneLeaf(otherlv_10);
		}
	)
;
finally {
	myHiddenTokenState.restore();
}

//Entry rule entryRuleCssDeclaration
entryRuleCssDeclaration returns [Boolean current=false]@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT");
}:
	{ markComposite(elementTypeProvider.getCssDeclarationElementType()); }
	iv_ruleCssDeclaration=ruleCssDeclaration
	{ $current=$iv_ruleCssDeclaration.current; }
	EOF;
finally {
	myHiddenTokenState.restore();
}

// Rule CssDeclaration
ruleCssDeclaration returns [Boolean current=false]
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT");
}:
	(
		(
			(
				{
					markComposite(elementTypeProvider.getCssDeclaration_PropertyCssPropertyParserRuleCall_0_0ElementType());
				}
				lv_property_0_0=ruleCssProperty
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)
		(
			{
				markLeaf(elementTypeProvider.getCssDeclaration_WSTerminalRuleCall_1ElementType());
			}
			this_WS_1=RULE_WS
			{
				doneLeaf(this_WS_1);
			}
		)*
		{
			markLeaf(elementTypeProvider.getCssDeclaration_COLONTerminalRuleCall_2ElementType());
		}
		this_COLON_2=RULE_COLON
		{
			doneLeaf(this_COLON_2);
		}
		(
			((
				ruleCssTok
			)
			)=>
			(
				{
					markComposite(elementTypeProvider.getCssDeclaration_ValueTokensCssTokParserRuleCall_3_0ElementType());
				}
				lv_valueTokens_3_0=ruleCssTok
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)+
		(
			(
				{
					markLeaf(elementTypeProvider.getCssDeclaration_ImportantIMPORTANT_SYMTerminalRuleCall_4_0ElementType());
				}
				lv_important_4_0=RULE_IMPORTANT_SYM
				{
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
				{
					doneLeaf(lv_important_4_0);
				}
			)
		)?
	)
;
finally {
	myHiddenTokenState.restore();
}

//Entry rule entryRuleSelector
entryRuleSelector returns [Boolean current=false]@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT");
}:
	{ markComposite(elementTypeProvider.getSelectorElementType()); }
	iv_ruleSelector=ruleSelector
	{ $current=$iv_ruleSelector.current; }
	EOF;
finally {
	myHiddenTokenState.restore();
}

// Rule Selector
ruleSelector returns [Boolean current=false]
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT");
}:
	(
		(
			(
				{
					markComposite(elementTypeProvider.getSelector_SimpleselectorsSimpleSelectorParserRuleCall_0_0ElementType());
				}
				lv_simpleselectors_0_0=ruleSimpleSelector
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)
		(
			(
				(
					(
						{
							markComposite(elementTypeProvider.getSelector_CombinatorCombinatorParserRuleCall_1_0_0_0ElementType());
						}
						lv_combinator_1_0=ruleCombinator
						{
							doneComposite();
							if(!$current) {
								associateWithSemanticElement();
								$current = true;
							}
						}
					)
				)
				(
					{
						markLeaf(elementTypeProvider.getSelector_WSTerminalRuleCall_1_0_1ElementType());
					}
					this_WS_2=RULE_WS
					{
						doneLeaf(this_WS_2);
					}
				)*
				(
					(
						{
							markComposite(elementTypeProvider.getSelector_SelectorSelectorParserRuleCall_1_0_2_0ElementType());
						}
						lv_selector_3_0=ruleSelector
						{
							doneComposite();
							if(!$current) {
								associateWithSemanticElement();
								$current = true;
							}
						}
					)
				)
			)
			    |
			(
				(
					{
						markLeaf(elementTypeProvider.getSelector_WSTerminalRuleCall_1_1_0ElementType());
					}
					this_WS_4=RULE_WS
					{
						doneLeaf(this_WS_4);
					}
				)+
				(
					(
						(
							{
								markComposite(elementTypeProvider.getSelector_CombinatorCombinatorParserRuleCall_1_1_1_0_0ElementType());
							}
							lv_combinator_5_0=ruleCombinator
							{
								doneComposite();
								if(!$current) {
									associateWithSemanticElement();
									$current = true;
								}
							}
						)
					)
					(
						{
							markLeaf(elementTypeProvider.getSelector_WSTerminalRuleCall_1_1_1_1ElementType());
						}
						this_WS_6=RULE_WS
						{
							doneLeaf(this_WS_6);
						}
					)*
				)?
				(
					(
						{
							markComposite(elementTypeProvider.getSelector_SelectorSelectorParserRuleCall_1_1_2_0ElementType());
						}
						lv_selector_7_0=ruleSelector
						{
							doneComposite();
							if(!$current) {
								associateWithSemanticElement();
								$current = true;
							}
						}
					)
				)
			)
		)?
	)
;
finally {
	myHiddenTokenState.restore();
}

//Entry rule entryRuleSimpleSelectorForNegation
entryRuleSimpleSelectorForNegation returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getSimpleSelectorForNegationElementType()); }
	iv_ruleSimpleSelectorForNegation=ruleSimpleSelectorForNegation
	{ $current=$iv_ruleSimpleSelectorForNegation.current; }
	EOF;

// Rule SimpleSelectorForNegation
ruleSimpleSelectorForNegation returns [Boolean current=false]
:
	(
		(
			(
				(
					(
						{
							markComposite(elementTypeProvider.getSimpleSelectorForNegation_ElementElementSelectorParserRuleCall_0_0_0_0ElementType());
						}
						lv_element_0_0=ruleElementSelector
						{
							doneComposite();
							if(!$current) {
								associateWithSemanticElement();
								$current = true;
							}
						}
					)
				)
				    |
				(
					(
						{
							markComposite(elementTypeProvider.getSimpleSelectorForNegation_UniversalUniversalSelectorParserRuleCall_0_0_1_0ElementType());
						}
						lv_universal_1_0=ruleUniversalSelector
						{
							doneComposite();
							if(!$current) {
								associateWithSemanticElement();
								$current = true;
							}
						}
					)
				)
			)
			(
				(
					{
						markComposite(elementTypeProvider.getSimpleSelectorForNegation_SubSelectorsSubSelectorForNegationParserRuleCall_0_1_0ElementType());
					}
					lv_subSelectors_2_0=ruleSubSelectorForNegation
					{
						doneComposite();
						if(!$current) {
							associateWithSemanticElement();
							$current = true;
						}
					}
				)
			)*
		)
		    |
		(
			((
				ruleSubSelectorForNegation
			)
			)=>
			(
				{
					markComposite(elementTypeProvider.getSimpleSelectorForNegation_SubSelectorsSubSelectorForNegationParserRuleCall_1_0ElementType());
				}
				lv_subSelectors_3_0=ruleSubSelectorForNegation
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)+
	)
;

//Entry rule entryRuleSubSelectorForNegation
entryRuleSubSelectorForNegation returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getSubSelectorForNegationElementType()); }
	iv_ruleSubSelectorForNegation=ruleSubSelectorForNegation
	{ $current=$iv_ruleSubSelectorForNegation.current; }
	EOF;

// Rule SubSelectorForNegation
ruleSubSelectorForNegation returns [Boolean current=false]
:
	(
		{
			markComposite(elementTypeProvider.getSubSelectorForNegation_IdSelectorParserRuleCall_0ElementType());
		}
		this_IdSelector_0=ruleIdSelector
		{
			$current = $this_IdSelector_0.current;
			doneComposite();
		}
		    |
		{
			markComposite(elementTypeProvider.getSubSelectorForNegation_ClassSelectorParserRuleCall_1ElementType());
		}
		this_ClassSelector_1=ruleClassSelector
		{
			$current = $this_ClassSelector_1.current;
			doneComposite();
		}
		    |
		{
			markComposite(elementTypeProvider.getSubSelectorForNegation_AttributeSelectorParserRuleCall_2ElementType());
		}
		this_AttributeSelector_2=ruleAttributeSelector
		{
			$current = $this_AttributeSelector_2.current;
			doneComposite();
		}
		    |
		{
			markComposite(elementTypeProvider.getSubSelectorForNegation_PseudoClassParserRuleCall_3ElementType());
		}
		this_PseudoClass_3=rulePseudoClass
		{
			$current = $this_PseudoClass_3.current;
			doneComposite();
		}
	)
;

//Entry rule entryRuleSimpleSelector
entryRuleSimpleSelector returns [Boolean current=false]@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}:
	{ markComposite(elementTypeProvider.getSimpleSelectorElementType()); }
	iv_ruleSimpleSelector=ruleSimpleSelector
	{ $current=$iv_ruleSimpleSelector.current; }
	EOF;
finally {
	myHiddenTokenState.restore();
}

// Rule SimpleSelector
ruleSimpleSelector returns [Boolean current=false]
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}:
	(
		(
			(
				(
					(
						{
							markComposite(elementTypeProvider.getSimpleSelector_ElementElementSelectorParserRuleCall_0_0_0_0ElementType());
						}
						lv_element_0_0=ruleElementSelector
						{
							doneComposite();
							if(!$current) {
								associateWithSemanticElement();
								$current = true;
							}
						}
					)
				)
				    |
				(
					(
						{
							markComposite(elementTypeProvider.getSimpleSelector_UniversalUniversalSelectorParserRuleCall_0_0_1_0ElementType());
						}
						lv_universal_1_0=ruleUniversalSelector
						{
							doneComposite();
							if(!$current) {
								associateWithSemanticElement();
								$current = true;
							}
						}
					)
				)
			)
			(
				(
					{
						markComposite(elementTypeProvider.getSimpleSelector_SubSelectorsSubSelectorParserRuleCall_0_1_0ElementType());
					}
					lv_subSelectors_2_0=ruleSubSelector
					{
						doneComposite();
						if(!$current) {
							associateWithSemanticElement();
							$current = true;
						}
					}
				)
			)*
		)
		    |
		(
			(
				{
					markComposite(elementTypeProvider.getSimpleSelector_SubSelectorsSubSelectorParserRuleCall_1_0ElementType());
				}
				lv_subSelectors_3_0=ruleSubSelector
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)+
	)
;
finally {
	myHiddenTokenState.restore();
}

//Entry rule entryRuleSubSelector
entryRuleSubSelector returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getSubSelectorElementType()); }
	iv_ruleSubSelector=ruleSubSelector
	{ $current=$iv_ruleSubSelector.current; }
	EOF;

// Rule SubSelector
ruleSubSelector returns [Boolean current=false]
:
	(
		{
			markComposite(elementTypeProvider.getSubSelector_IdSelectorParserRuleCall_0ElementType());
		}
		this_IdSelector_0=ruleIdSelector
		{
			$current = $this_IdSelector_0.current;
			doneComposite();
		}
		    |
		{
			markComposite(elementTypeProvider.getSubSelector_ClassSelectorParserRuleCall_1ElementType());
		}
		this_ClassSelector_1=ruleClassSelector
		{
			$current = $this_ClassSelector_1.current;
			doneComposite();
		}
		    |
		{
			markComposite(elementTypeProvider.getSubSelector_AttributeSelectorParserRuleCall_2ElementType());
		}
		this_AttributeSelector_2=ruleAttributeSelector
		{
			$current = $this_AttributeSelector_2.current;
			doneComposite();
		}
		    |
		{
			markComposite(elementTypeProvider.getSubSelector_PseudoClassOrFuncParserRuleCall_3ElementType());
		}
		this_PseudoClassOrFunc_3=rulePseudoClassOrFunc
		{
			$current = $this_PseudoClassOrFunc_3.current;
			doneComposite();
		}
	)
;

//Entry rule entryRuleAttributeSelector
entryRuleAttributeSelector returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getAttributeSelectorElementType()); }
	iv_ruleAttributeSelector=ruleAttributeSelector
	{ $current=$iv_ruleAttributeSelector.current; }
	EOF;

// Rule AttributeSelector
ruleAttributeSelector returns [Boolean current=false]
:
	(
		(
			{
				precedeComposite(elementTypeProvider.getAttributeSelector_AttributeSelectorAction_0ElementType());
				doneComposite();
				associateWithSemanticElement();
			}
		)
		{
			markLeaf(elementTypeProvider.getAttributeSelector_LeftSquareBracketKeyword_1ElementType());
		}
		otherlv_1='['
		{
			doneLeaf(otherlv_1);
		}
		(
			(
				{
					markComposite(elementTypeProvider.getAttributeSelector_NameIdentifierParserRuleCall_2_0ElementType());
				}
				lv_name_2_0=ruleIdentifier
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)
		(
			(
				(
					(
						{
							markLeaf(elementTypeProvider.getAttributeSelector_OpCircumflexAccentEqualsSignKeyword_3_0_0_0ElementType());
						}
						lv_op_3_1='^='
						{
							doneLeaf(lv_op_3_1);
						}
						{
							if (!$current) {
								associateWithSemanticElement();
								$current = true;
							}
						}
						    |
						{
							markLeaf(elementTypeProvider.getAttributeSelector_OpDollarSignEqualsSignKeyword_3_0_0_1ElementType());
						}
						lv_op_3_2='$='
						{
							doneLeaf(lv_op_3_2);
						}
						{
							if (!$current) {
								associateWithSemanticElement();
								$current = true;
							}
						}
						    |
						{
							markLeaf(elementTypeProvider.getAttributeSelector_OpAsteriskEqualsSignKeyword_3_0_0_2ElementType());
						}
						lv_op_3_3='*='
						{
							doneLeaf(lv_op_3_3);
						}
						{
							if (!$current) {
								associateWithSemanticElement();
								$current = true;
							}
						}
						    |
						{
							markLeaf(elementTypeProvider.getAttributeSelector_OpEqualsSignKeyword_3_0_0_3ElementType());
						}
						lv_op_3_4='='
						{
							doneLeaf(lv_op_3_4);
						}
						{
							if (!$current) {
								associateWithSemanticElement();
								$current = true;
							}
						}
						    |
						{
							markLeaf(elementTypeProvider.getAttributeSelector_OpINCLUDESTerminalRuleCall_3_0_0_4ElementType());
						}
						lv_op_3_5=RULE_INCLUDES
						{
							if(!$current) {
								associateWithSemanticElement();
								$current = true;
							}
						}
						{
							doneLeaf(lv_op_3_5);
						}
						    |
						{
							markLeaf(elementTypeProvider.getAttributeSelector_OpDASHMATCHTerminalRuleCall_3_0_0_5ElementType());
						}
						lv_op_3_6=RULE_DASHMATCH
						{
							if(!$current) {
								associateWithSemanticElement();
								$current = true;
							}
						}
						{
							doneLeaf(lv_op_3_6);
						}
					)
				)
			)
			(
				(
					(
						{
							markComposite(elementTypeProvider.getAttributeSelector_ValueIdentifierParserRuleCall_3_1_0_0ElementType());
						}
						lv_value_4_1=ruleIdentifier
						{
							doneComposite();
							if(!$current) {
								associateWithSemanticElement();
								$current = true;
							}
						}
						    |
						{
							markLeaf(elementTypeProvider.getAttributeSelector_ValueCSSSTRINGTerminalRuleCall_3_1_0_1ElementType());
						}
						lv_value_4_2=RULE_CSSSTRING
						{
							if(!$current) {
								associateWithSemanticElement();
								$current = true;
							}
						}
						{
							doneLeaf(lv_value_4_2);
						}
					)
				)
			)
		)?
		{
			markLeaf(elementTypeProvider.getAttributeSelector_RightSquareBracketKeyword_4ElementType());
		}
		otherlv_5=']'
		{
			doneLeaf(otherlv_5);
		}
	)
;

//Entry rule entryRuleClassSelector
entryRuleClassSelector returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getClassSelectorElementType()); }
	iv_ruleClassSelector=ruleClassSelector
	{ $current=$iv_ruleClassSelector.current; }
	EOF;

// Rule ClassSelector
ruleClassSelector returns [Boolean current=false]
:
	(
		(
			{
				precedeComposite(elementTypeProvider.getClassSelector_ClassSelectorAction_0ElementType());
				doneComposite();
				associateWithSemanticElement();
			}
		)
		{
			markLeaf(elementTypeProvider.getClassSelector_FullStopKeyword_1ElementType());
		}
		otherlv_1='.'
		{
			doneLeaf(otherlv_1);
		}
		(
			(
				{
					markComposite(elementTypeProvider.getClassSelector_NameIdentifierParserRuleCall_2_0ElementType());
				}
				lv_name_2_0=ruleIdentifier
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)
	)
;

//Entry rule entryRuleElementSelector
entryRuleElementSelector returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getElementSelectorElementType()); }
	iv_ruleElementSelector=ruleElementSelector
	{ $current=$iv_ruleElementSelector.current; }
	EOF;

// Rule ElementSelector
ruleElementSelector returns [Boolean current=false]
:
	(
		(
			{
				precedeComposite(elementTypeProvider.getElementSelector_ElementSelectorAction_0ElementType());
				doneComposite();
				associateWithSemanticElement();
			}
		)
		(
			(
				{
					markComposite(elementTypeProvider.getElementSelector_NameIdentifierParserRuleCall_1_0ElementType());
				}
				lv_name_1_0=ruleIdentifier
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)
	)
;

//Entry rule entryRuleUniversalSelector
entryRuleUniversalSelector returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getUniversalSelectorElementType()); }
	iv_ruleUniversalSelector=ruleUniversalSelector
	{ $current=$iv_ruleUniversalSelector.current; }
	EOF;

// Rule UniversalSelector
ruleUniversalSelector returns [Boolean current=false]
:
	(
		(
			{
				precedeComposite(elementTypeProvider.getUniversalSelector_UniversalSelectorAction_0ElementType());
				doneComposite();
				associateWithSemanticElement();
			}
		)
		(
			(
				{
					markComposite(elementTypeProvider.getUniversalSelector_NamespaceCssNamespacePrefixParserRuleCall_1_0ElementType());
				}
				lv_namespace_1_0=ruleCssNamespacePrefix
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)?
		{
			markLeaf(elementTypeProvider.getUniversalSelector_AsteriskKeyword_2ElementType());
		}
		otherlv_2='*'
		{
			doneLeaf(otherlv_2);
		}
	)
;

//Entry rule entryRuleIdSelector
entryRuleIdSelector returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getIdSelectorElementType()); }
	iv_ruleIdSelector=ruleIdSelector
	{ $current=$iv_ruleIdSelector.current; }
	EOF;

// Rule IdSelector
ruleIdSelector returns [Boolean current=false]
:
	(
		(
			{
				precedeComposite(elementTypeProvider.getIdSelector_IdSelectorAction_0ElementType());
				doneComposite();
				associateWithSemanticElement();
			}
		)
		{
			markLeaf(elementTypeProvider.getIdSelector_HASHMARKTerminalRuleCall_1ElementType());
		}
		this_HASHMARK_1=RULE_HASHMARK
		{
			doneLeaf(this_HASHMARK_1);
		}
		(
			(
				{
					markComposite(elementTypeProvider.getIdSelector_NameIdentifierParserRuleCall_2_0ElementType());
				}
				lv_name_2_0=ruleIdentifier
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)
	)
;

//Entry rule entryRuleCssNamespacePrefix
entryRuleCssNamespacePrefix returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getCssNamespacePrefixElementType()); }
	iv_ruleCssNamespacePrefix=ruleCssNamespacePrefix
	{ $current=$iv_ruleCssNamespacePrefix.current; }
	EOF;

// Rule CssNamespacePrefix
ruleCssNamespacePrefix returns [Boolean current=false]
:
	(
		(
			{
				markComposite(elementTypeProvider.getCssNamespacePrefix_IdentifierParserRuleCall_0_0ElementType());
			}
			ruleIdentifier
			{
				doneComposite();
			}
			    |
			{
				markLeaf(elementTypeProvider.getCssNamespacePrefix_AsteriskKeyword_0_1ElementType());
			}
			kw='*'
			{
				doneLeaf(kw);
			}
		)?
		{
			markLeaf(elementTypeProvider.getCssNamespacePrefix_VerticalLineKeyword_1ElementType());
		}
		kw='|'
		{
			doneLeaf(kw);
		}
	)
;

//Entry rule entryRuleCssProperty
entryRuleCssProperty returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getCssPropertyElementType()); }
	iv_ruleCssProperty=ruleCssProperty
	{ $current=$iv_ruleCssProperty.current; }
	EOF;

// Rule CssProperty
ruleCssProperty returns [Boolean current=false]
:
	(
		(
			{
				precedeComposite(elementTypeProvider.getCssProperty_CssPropertyAction_0ElementType());
				doneComposite();
				associateWithSemanticElement();
			}
		)
		(
			(
				{
					markComposite(elementTypeProvider.getCssProperty_NameValidPropertyIdentParserRuleCall_1_0ElementType());
				}
				lv_name_1_0=ruleValidPropertyIdent
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)
	)
;

//Entry rule entryRuleValidPropertyIdent
entryRuleValidPropertyIdent returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getValidPropertyIdentElementType()); }
	iv_ruleValidPropertyIdent=ruleValidPropertyIdent
	{ $current=$iv_ruleValidPropertyIdent.current; }
	EOF;

// Rule ValidPropertyIdent
ruleValidPropertyIdent returns [Boolean current=false]
:
	{
		markComposite(elementTypeProvider.getValidPropertyIdent_IdentifierParserRuleCallElementType());
	}
	ruleIdentifier
	{
		doneComposite();
	}
;

//Entry rule entryRulePseudoClassOrFunc
entryRulePseudoClassOrFunc returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getPseudoClassOrFuncElementType()); }
	iv_rulePseudoClassOrFunc=rulePseudoClassOrFunc
	{ $current=$iv_rulePseudoClassOrFunc.current; }
	EOF;

// Rule PseudoClassOrFunc
rulePseudoClassOrFunc returns [Boolean current=false]
:
	(
		{
			markComposite(elementTypeProvider.getPseudoClassOrFunc_PseudoClassParserRuleCall_0ElementType());
		}
		this_PseudoClass_0=rulePseudoClass
		{
			$current = $this_PseudoClass_0.current;
			doneComposite();
		}
		    |
		{
			markComposite(elementTypeProvider.getPseudoClassOrFunc_PseudoClassFunctionParserRuleCall_1ElementType());
		}
		this_PseudoClassFunction_1=rulePseudoClassFunction
		{
			$current = $this_PseudoClassFunction_1.current;
			doneComposite();
		}
	)
;

//Entry rule entryRulePseudoClass
entryRulePseudoClass returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getPseudoClassElementType()); }
	iv_rulePseudoClass=rulePseudoClass
	{ $current=$iv_rulePseudoClass.current; }
	EOF;

// Rule PseudoClass
rulePseudoClass returns [Boolean current=false]
:
	(
		{
			markLeaf(elementTypeProvider.getPseudoClass_COLONTerminalRuleCall_0ElementType());
		}
		this_COLON_0=RULE_COLON
		{
			doneLeaf(this_COLON_0);
		}
		(
			{
				markLeaf(elementTypeProvider.getPseudoClass_COLONTerminalRuleCall_1ElementType());
			}
			this_COLON_1=RULE_COLON
			{
				doneLeaf(this_COLON_1);
			}
		)?
		(
			(
				{
					markComposite(elementTypeProvider.getPseudoClass_NamePseudoClassNameParserRuleCall_2_0ElementType());
				}
				lv_name_2_0=rulePseudoClassName
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)
	)
;

//Entry rule entryRulePseudoClassName
entryRulePseudoClassName returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getPseudoClassNameElementType()); }
	iv_rulePseudoClassName=rulePseudoClassName
	{ $current=$iv_rulePseudoClassName.current; }
	EOF;

// Rule PseudoClassName
rulePseudoClassName returns [Boolean current=false]
:
	{
		markComposite(elementTypeProvider.getPseudoClassName_IdentifierParserRuleCallElementType());
	}
	ruleIdentifier
	{
		doneComposite();
	}
;

//Entry rule entryRulePseudoClassFunction
entryRulePseudoClassFunction returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getPseudoClassFunctionElementType()); }
	iv_rulePseudoClassFunction=rulePseudoClassFunction
	{ $current=$iv_rulePseudoClassFunction.current; }
	EOF;

// Rule PseudoClassFunction
rulePseudoClassFunction returns [Boolean current=false]
:
	(
		(
			(
				(
					{
						markComposite(elementTypeProvider.getPseudoClassFunction_NotNotFunctionCallParserRuleCall_0_0_0ElementType());
					}
					lv_not_0_0=ruleNotFunctionCall
					{
						doneComposite();
						if(!$current) {
							associateWithSemanticElement();
							$current = true;
						}
					}
				)
			)
			(
				(
					{
						markComposite(elementTypeProvider.getPseudoClassFunction_ParamSelectorSimpleSelectorForNegationParserRuleCall_0_1_0ElementType());
					}
					lv_paramSelector_1_0=ruleSimpleSelectorForNegation
					{
						doneComposite();
						if(!$current) {
							associateWithSemanticElement();
							$current = true;
						}
					}
				)
			)
			{
				markLeaf(elementTypeProvider.getPseudoClassFunction_RightParenthesisKeyword_0_2ElementType());
			}
			otherlv_2=')'
			{
				doneLeaf(otherlv_2);
			}
		)
		    |
		(
			{
				markLeaf(elementTypeProvider.getPseudoClassFunction_COLONTerminalRuleCall_1_0ElementType());
			}
			this_COLON_3=RULE_COLON
			{
				doneLeaf(this_COLON_3);
			}
			(
				(
					{
						markComposite(elementTypeProvider.getPseudoClassFunction_NameIdentifierParserRuleCall_1_1_0ElementType());
					}
					lv_name_4_0=ruleIdentifier
					{
						doneComposite();
						if(!$current) {
							associateWithSemanticElement();
							$current = true;
						}
					}
				)
			)
			{
				markLeaf(elementTypeProvider.getPseudoClassFunction_LeftParenthesisKeyword_1_2ElementType());
			}
			otherlv_5='('
			{
				doneLeaf(otherlv_5);
			}
			(
				(
					{
						markComposite(elementTypeProvider.getPseudoClassFunction_ParamsCssTokParserRuleCall_1_3_0ElementType());
					}
					lv_params_6_0=ruleCssTok
					{
						doneComposite();
						if(!$current) {
							associateWithSemanticElement();
							$current = true;
						}
					}
				)
			)*
			{
				markLeaf(elementTypeProvider.getPseudoClassFunction_RightParenthesisKeyword_1_4ElementType());
			}
			otherlv_7=')'
			{
				doneLeaf(otherlv_7);
			}
		)
	)
;

//Entry rule entryRuleNotFunctionCall
entryRuleNotFunctionCall returns [Boolean current=false]@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}:
	{ markComposite(elementTypeProvider.getNotFunctionCallElementType()); }
	iv_ruleNotFunctionCall=ruleNotFunctionCall
	{ $current=$iv_ruleNotFunctionCall.current; }
	EOF;
finally {
	myHiddenTokenState.restore();
}

// Rule NotFunctionCall
ruleNotFunctionCall returns [Boolean current=false]
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}:
	(
		{
			markLeaf(elementTypeProvider.getNotFunctionCall_COLONTerminalRuleCall_0ElementType());
		}
		this_COLON_0=RULE_COLON
		{
			doneLeaf(this_COLON_0);
		}
		{
			markLeaf(elementTypeProvider.getNotFunctionCall_NotKeyword_1ElementType());
		}
		kw='not('
		{
			doneLeaf(kw);
		}
	)
;
finally {
	myHiddenTokenState.restore();
}

//Entry rule entryRuleCombinator
entryRuleCombinator returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getCombinatorElementType()); }
	iv_ruleCombinator=ruleCombinator
	{ $current=$iv_ruleCombinator.current; }
	EOF;

// Rule Combinator
ruleCombinator returns [Boolean current=false]
:
	(
		{
			markLeaf(elementTypeProvider.getCombinator_PLUSTerminalRuleCall_0ElementType());
		}
		this_PLUS_0=RULE_PLUS
		{
			doneLeaf(this_PLUS_0);
		}
		    |
		{
			markLeaf(elementTypeProvider.getCombinator_GreaterThanSignKeyword_1ElementType());
		}
		kw='>'
		{
			doneLeaf(kw);
		}
		    |
		{
			markLeaf(elementTypeProvider.getCombinator_TildeKeyword_2ElementType());
		}
		kw='~'
		{
			doneLeaf(kw);
		}
	)
;

//Entry rule entryRuleSymbolTok
entryRuleSymbolTok returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getSymbolTokElementType()); }
	iv_ruleSymbolTok=ruleSymbolTok
	{ $current=$iv_ruleSymbolTok.current; }
	EOF;

// Rule SymbolTok
ruleSymbolTok returns [Boolean current=false]
:
	(
		(
			{
				precedeComposite(elementTypeProvider.getSymbolTok_SymbolTokAction_0ElementType());
				doneComposite();
				associateWithSemanticElement();
			}
		)
		(
			(
				(
					{
						markLeaf(elementTypeProvider.getSymbolTok_SymbolCOMMATerminalRuleCall_1_0_0ElementType());
					}
					lv_symbol_1_1=RULE_COMMA
					{
						if(!$current) {
							associateWithSemanticElement();
							$current = true;
						}
					}
					{
						doneLeaf(lv_symbol_1_1);
					}
					    |
					{
						markLeaf(elementTypeProvider.getSymbolTok_SymbolPERCENTTerminalRuleCall_1_0_1ElementType());
					}
					lv_symbol_1_2=RULE_PERCENT
					{
						if(!$current) {
							associateWithSemanticElement();
							$current = true;
						}
					}
					{
						doneLeaf(lv_symbol_1_2);
					}
				)
			)
		)
	)
;

//Entry rule entryRuleWSTok
entryRuleWSTok returns [Boolean current=false]@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}:
	{ markComposite(elementTypeProvider.getWSTokElementType()); }
	iv_ruleWSTok=ruleWSTok
	{ $current=$iv_ruleWSTok.current; }
	EOF;
finally {
	myHiddenTokenState.restore();
}

// Rule WSTok
ruleWSTok returns [Boolean current=false]
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}:
	(
		(
			{
				precedeComposite(elementTypeProvider.getWSTok_WSTokAction_0ElementType());
				doneComposite();
				associateWithSemanticElement();
			}
		)
		{
			markLeaf(elementTypeProvider.getWSTok_WSTerminalRuleCall_1ElementType());
		}
		this_WS_1=RULE_WS
		{
			doneLeaf(this_WS_1);
		}
	)
;
finally {
	myHiddenTokenState.restore();
}

//Entry rule entryRuleStringTok
entryRuleStringTok returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getStringTokElementType()); }
	iv_ruleStringTok=ruleStringTok
	{ $current=$iv_ruleStringTok.current; }
	EOF;

// Rule StringTok
ruleStringTok returns [Boolean current=false]
:
	(
		(
			{
				precedeComposite(elementTypeProvider.getStringTok_StringTokAction_0ElementType());
				doneComposite();
				associateWithSemanticElement();
			}
		)
		(
			(
				{
					markLeaf(elementTypeProvider.getStringTok_ValueCSSSTRINGTerminalRuleCall_1_0ElementType());
				}
				lv_value_1_0=RULE_CSSSTRING
				{
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
				{
					doneLeaf(lv_value_1_0);
				}
			)
		)
	)
;

//Entry rule entryRuleNumberTok
entryRuleNumberTok returns [Boolean current=false]@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}:
	{ markComposite(elementTypeProvider.getNumberTokElementType()); }
	iv_ruleNumberTok=ruleNumberTok
	{ $current=$iv_ruleNumberTok.current; }
	EOF;
finally {
	myHiddenTokenState.restore();
}

// Rule NumberTok
ruleNumberTok returns [Boolean current=false]
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}:
	(
		(
			{
				precedeComposite(elementTypeProvider.getNumberTok_NumberTokAction_0ElementType());
				doneComposite();
				associateWithSemanticElement();
			}
		)
		(
			(
				{
					markComposite(elementTypeProvider.getNumberTok_ValNumParserRuleCall_1_0ElementType());
				}
				lv_val_1_0=ruleNum
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)
	)
;
finally {
	myHiddenTokenState.restore();
}

//Entry rule entryRuleUrlTok
entryRuleUrlTok returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getUrlTokElementType()); }
	iv_ruleUrlTok=ruleUrlTok
	{ $current=$iv_ruleUrlTok.current; }
	EOF;

// Rule UrlTok
ruleUrlTok returns [Boolean current=false]
:
	(
		(
			{
				precedeComposite(elementTypeProvider.getUrlTok_UrlTokAction_0ElementType());
				doneComposite();
				associateWithSemanticElement();
			}
		)
		(
			(
				{
					markComposite(elementTypeProvider.getUrlTok_UrlURLTypeParserRuleCall_1_0ElementType());
				}
				lv_url_1_0=ruleURLType
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)
	)
;

//Entry rule entryRuleColorTok
entryRuleColorTok returns [Boolean current=false]@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}:
	{ markComposite(elementTypeProvider.getColorTokElementType()); }
	iv_ruleColorTok=ruleColorTok
	{ $current=$iv_ruleColorTok.current; }
	EOF;
finally {
	myHiddenTokenState.restore();
}

// Rule ColorTok
ruleColorTok returns [Boolean current=false]
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}:
	(
		(
			{
				precedeComposite(elementTypeProvider.getColorTok_ColorTokAction_0ElementType());
				doneComposite();
				associateWithSemanticElement();
			}
		)
		(
			(
				{
					markComposite(elementTypeProvider.getColorTok_ValueHexParserRuleCall_1_0ElementType());
				}
				lv_value_1_0=ruleHex
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)
	)
;
finally {
	myHiddenTokenState.restore();
}

//Entry rule entryRuleIdentifierOrFuncTok
entryRuleIdentifierOrFuncTok returns [Boolean current=false]@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}:
	{ markComposite(elementTypeProvider.getIdentifierOrFuncTokElementType()); }
	iv_ruleIdentifierOrFuncTok=ruleIdentifierOrFuncTok
	{ $current=$iv_ruleIdentifierOrFuncTok.current; }
	EOF;
finally {
	myHiddenTokenState.restore();
}

// Rule IdentifierOrFuncTok
ruleIdentifierOrFuncTok returns [Boolean current=false]
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}:
	(
		(
			{
				precedeComposite(elementTypeProvider.getIdentifierOrFuncTok_IdentifierTokAction_0ElementType());
				doneComposite();
				associateWithSemanticElement();
			}
		)
		(
			(
				{
					markComposite(elementTypeProvider.getIdentifierOrFuncTok_NameIdentifierParserRuleCall_1_0ElementType());
				}
				lv_name_1_0=ruleIdentifier
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)
		(
			(
				{
					precedeComposite(elementTypeProvider.getIdentifierOrFuncTok_FuncTokNameAction_2_0ElementType());
					doneComposite();
					associateWithSemanticElement();
				}
			)
			{
				markLeaf(elementTypeProvider.getIdentifierOrFuncTok_LeftParenthesisKeyword_2_1ElementType());
			}
			otherlv_3='('
			{
				doneLeaf(otherlv_3);
			}
			(
				(
					{
						markComposite(elementTypeProvider.getIdentifierOrFuncTok_ParamsCssTokParserRuleCall_2_2_0ElementType());
					}
					lv_params_4_0=ruleCssTok
					{
						doneComposite();
						if(!$current) {
							associateWithSemanticElement();
							$current = true;
						}
					}
				)
			)+
			{
				markLeaf(elementTypeProvider.getIdentifierOrFuncTok_RightParenthesisKeyword_2_3ElementType());
			}
			otherlv_5=')'
			{
				doneLeaf(otherlv_5);
			}
		)?
	)
;
finally {
	myHiddenTokenState.restore();
}

//Entry rule entryRuleCssTok
entryRuleCssTok returns [Boolean current=false]@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}:
	{ markComposite(elementTypeProvider.getCssTokElementType()); }
	iv_ruleCssTok=ruleCssTok
	{ $current=$iv_ruleCssTok.current; }
	EOF;
finally {
	myHiddenTokenState.restore();
}

// Rule CssTok
ruleCssTok returns [Boolean current=false]
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}:
	(
		{
			markComposite(elementTypeProvider.getCssTok_IdentifierOrFuncTokParserRuleCall_0ElementType());
		}
		this_IdentifierOrFuncTok_0=ruleIdentifierOrFuncTok
		{
			$current = $this_IdentifierOrFuncTok_0.current;
			doneComposite();
		}
		    |
		{
			markComposite(elementTypeProvider.getCssTok_SymbolTokParserRuleCall_1ElementType());
		}
		this_SymbolTok_1=ruleSymbolTok
		{
			$current = $this_SymbolTok_1.current;
			doneComposite();
		}
		    |
		{
			markComposite(elementTypeProvider.getCssTok_WSTokParserRuleCall_2ElementType());
		}
		this_WSTok_2=ruleWSTok
		{
			$current = $this_WSTok_2.current;
			doneComposite();
		}
		    |
		{
			markComposite(elementTypeProvider.getCssTok_StringTokParserRuleCall_3ElementType());
		}
		this_StringTok_3=ruleStringTok
		{
			$current = $this_StringTok_3.current;
			doneComposite();
		}
		    |
		{
			markComposite(elementTypeProvider.getCssTok_NumberTokParserRuleCall_4ElementType());
		}
		this_NumberTok_4=ruleNumberTok
		{
			$current = $this_NumberTok_4.current;
			doneComposite();
		}
		    |
		{
			markComposite(elementTypeProvider.getCssTok_UrlTokParserRuleCall_5ElementType());
		}
		this_UrlTok_5=ruleUrlTok
		{
			$current = $this_UrlTok_5.current;
			doneComposite();
		}
		    |
		{
			markComposite(elementTypeProvider.getCssTok_ColorTokParserRuleCall_6ElementType());
		}
		this_ColorTok_6=ruleColorTok
		{
			$current = $this_ColorTok_6.current;
			doneComposite();
		}
	)
;
finally {
	myHiddenTokenState.restore();
}

//Entry rule entryRuleURLType
entryRuleURLType returns [Boolean current=false]@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}:
	{ markComposite(elementTypeProvider.getURLTypeElementType()); }
	iv_ruleURLType=ruleURLType
	{ $current=$iv_ruleURLType.current; }
	EOF;
finally {
	myHiddenTokenState.restore();
}

// Rule URLType
ruleURLType returns [Boolean current=false]
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}:
	(
		{
			markLeaf(elementTypeProvider.getURLType_UrlKeyword_0ElementType());
		}
		otherlv_0='url('
		{
			doneLeaf(otherlv_0);
		}
		(
			(
				{
					markComposite(elementTypeProvider.getURLType_UrlValidURLParserRuleCall_1_0ElementType());
				}
				lv_url_1_0=ruleValidURL
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)
		{
			markLeaf(elementTypeProvider.getURLType_RightParenthesisKeyword_2ElementType());
		}
		otherlv_2=')'
		{
			doneLeaf(otherlv_2);
		}
	)
;
finally {
	myHiddenTokenState.restore();
}

//Entry rule entryRuleValidURLSymbol
entryRuleValidURLSymbol returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getValidURLSymbolElementType()); }
	iv_ruleValidURLSymbol=ruleValidURLSymbol
	{ $current=$iv_ruleValidURLSymbol.current; }
	EOF;

// Rule ValidURLSymbol
ruleValidURLSymbol returns [Boolean current=false]
:
	(
		{
			markLeaf(elementTypeProvider.getValidURLSymbol_DASHTerminalRuleCall_0ElementType());
		}
		this_DASH_0=RULE_DASH
		{
			doneLeaf(this_DASH_0);
		}
		    |
		{
			markLeaf(elementTypeProvider.getValidURLSymbol_FullStopKeyword_1ElementType());
		}
		kw='.'
		{
			doneLeaf(kw);
		}
		    |
		{
			markLeaf(elementTypeProvider.getValidURLSymbol_UNDERSCORETerminalRuleCall_2ElementType());
		}
		this_UNDERSCORE_2=RULE_UNDERSCORE
		{
			doneLeaf(this_UNDERSCORE_2);
		}
		    |
		{
			markLeaf(elementTypeProvider.getValidURLSymbol_TildeKeyword_3ElementType());
		}
		kw='~'
		{
			doneLeaf(kw);
		}
		    |
		{
			markLeaf(elementTypeProvider.getValidURLSymbol_COLONTerminalRuleCall_4ElementType());
		}
		this_COLON_4=RULE_COLON
		{
			doneLeaf(this_COLON_4);
		}
		    |
		{
			markLeaf(elementTypeProvider.getValidURLSymbol_SolidusKeyword_5ElementType());
		}
		kw='/'
		{
			doneLeaf(kw);
		}
		    |
		{
			markLeaf(elementTypeProvider.getValidURLSymbol_QuestionMarkKeyword_6ElementType());
		}
		kw='?'
		{
			doneLeaf(kw);
		}
		    |
		{
			markLeaf(elementTypeProvider.getValidURLSymbol_HASHMARKTerminalRuleCall_7ElementType());
		}
		this_HASHMARK_7=RULE_HASHMARK
		{
			doneLeaf(this_HASHMARK_7);
		}
		    |
		{
			markLeaf(elementTypeProvider.getValidURLSymbol_LeftSquareBracketKeyword_8ElementType());
		}
		kw='['
		{
			doneLeaf(kw);
		}
		    |
		{
			markLeaf(elementTypeProvider.getValidURLSymbol_RightSquareBracketKeyword_9ElementType());
		}
		kw=']'
		{
			doneLeaf(kw);
		}
		    |
		{
			markLeaf(elementTypeProvider.getValidURLSymbol_CommercialAtKeyword_10ElementType());
		}
		kw='@'
		{
			doneLeaf(kw);
		}
		    |
		{
			markLeaf(elementTypeProvider.getValidURLSymbol_ExclamationMarkKeyword_11ElementType());
		}
		kw='!'
		{
			doneLeaf(kw);
		}
		    |
		{
			markLeaf(elementTypeProvider.getValidURLSymbol_DollarSignKeyword_12ElementType());
		}
		kw='$'
		{
			doneLeaf(kw);
		}
		    |
		{
			markLeaf(elementTypeProvider.getValidURLSymbol_AmpersandKeyword_13ElementType());
		}
		kw='&'
		{
			doneLeaf(kw);
		}
		    |
		{
			markLeaf(elementTypeProvider.getValidURLSymbol_AsteriskKeyword_14ElementType());
		}
		kw='*'
		{
			doneLeaf(kw);
		}
		    |
		{
			markLeaf(elementTypeProvider.getValidURLSymbol_PLUSTerminalRuleCall_15ElementType());
		}
		this_PLUS_15=RULE_PLUS
		{
			doneLeaf(this_PLUS_15);
		}
		    |
		{
			markLeaf(elementTypeProvider.getValidURLSymbol_COMMATerminalRuleCall_16ElementType());
		}
		this_COMMA_16=RULE_COMMA
		{
			doneLeaf(this_COMMA_16);
		}
		    |
		{
			markLeaf(elementTypeProvider.getValidURLSymbol_SemicolonKeyword_17ElementType());
		}
		kw=';'
		{
			doneLeaf(kw);
		}
		    |
		(
			{
				markLeaf(elementTypeProvider.getValidURLSymbol_EqualsSignKeyword_18_0ElementType());
			}
			kw='='
			{
				doneLeaf(kw);
			}
			{
				markComposite(elementTypeProvider.getValidURLSymbol_KeywordHackParserRuleCall_18_1ElementType());
			}
			ruleKeywordHack
			{
				doneComposite();
			}
		)
	)
;

//Entry rule entryRuleKeywordHack
entryRuleKeywordHack returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getKeywordHackElementType()); }
	iv_ruleKeywordHack=ruleKeywordHack
	{ $current=$iv_ruleKeywordHack.current; }
	EOF;

// Rule KeywordHack
ruleKeywordHack returns [Boolean current=false]
:
	(
		{
			markLeaf(elementTypeProvider.getKeywordHack_NotKeyword_0ElementType());
		}
		kw='not'
		{
			doneLeaf(kw);
		}
		    |
		{
			markLeaf(elementTypeProvider.getKeywordHack_NoKeyword_1ElementType());
		}
		kw='no'
		{
			doneLeaf(kw);
		}
		    |
		{
			markLeaf(elementTypeProvider.getKeywordHack_UrlKeyword_2ElementType());
		}
		kw='url'
		{
			doneLeaf(kw);
		}
		    |
		{
			markLeaf(elementTypeProvider.getKeywordHack_UrKeyword_3ElementType());
		}
		kw='ur'
		{
			doneLeaf(kw);
		}
	)
;

//Entry rule entryRuleValidURL
entryRuleValidURL returns [Boolean current=false]@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}:
	{ markComposite(elementTypeProvider.getValidURLElementType()); }
	iv_ruleValidURL=ruleValidURL
	{ $current=$iv_ruleValidURL.current; }
	EOF;
finally {
	myHiddenTokenState.restore();
}

// Rule ValidURL
ruleValidURL returns [Boolean current=false]
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}:
	(
		{
			markLeaf(elementTypeProvider.getValidURL_CSSSTRINGTerminalRuleCall_0ElementType());
		}
		this_CSSSTRING_0=RULE_CSSSTRING
		{
			doneLeaf(this_CSSSTRING_0);
		}
		    |
		(
			{
				markComposite(elementTypeProvider.getValidURL_ValidURLSymbolParserRuleCall_1_0ElementType());
			}
			ruleValidURLSymbol
			{
				doneComposite();
			}
			    |
			{
				markComposite(elementTypeProvider.getValidURL_KeywordHackParserRuleCall_1_1ElementType());
			}
			ruleKeywordHack
			{
				doneComposite();
			}
			    |
			{
				markLeaf(elementTypeProvider.getValidURL_ONE_HEX_LETTERTerminalRuleCall_1_2ElementType());
			}
			this_ONE_HEX_LETTER_3=RULE_ONE_HEX_LETTER
			{
				doneLeaf(this_ONE_HEX_LETTER_3);
			}
			    |
			{
				markLeaf(elementTypeProvider.getValidURL_ONE_NON_HEX_LETTERTerminalRuleCall_1_3ElementType());
			}
			this_ONE_NON_HEX_LETTER_4=RULE_ONE_NON_HEX_LETTER
			{
				doneLeaf(this_ONE_NON_HEX_LETTER_4);
			}
			    |
			{
				markLeaf(elementTypeProvider.getValidURL_ONE_INTTerminalRuleCall_1_4ElementType());
			}
			this_ONE_INT_5=RULE_ONE_INT
			{
				doneLeaf(this_ONE_INT_5);
			}
			    |
			{
				markLeaf(elementTypeProvider.getValidURL_ReverseSolidusSpaceKeyword_1_5ElementType());
			}
			kw='\\ '
			{
				doneLeaf(kw);
			}
			    |
			{
				markLeaf(elementTypeProvider.getValidURL_ReverseSolidusLeftParenthesisKeyword_1_6ElementType());
			}
			kw='\\('
			{
				doneLeaf(kw);
			}
			    |
			{
				markLeaf(elementTypeProvider.getValidURL_ReverseSolidusRightParenthesisKeyword_1_7ElementType());
			}
			kw='\\)'
			{
				doneLeaf(kw);
			}
			    |
			{
				markLeaf(elementTypeProvider.getValidURL_ReverseSolidusApostropheKeyword_1_8ElementType());
			}
			kw='\\\''
			{
				doneLeaf(kw);
			}
			    |
			{
				markLeaf(elementTypeProvider.getValidURL_ReverseSolidusQuotationMarkKeyword_1_9ElementType());
			}
			kw='\\"'
			{
				doneLeaf(kw);
			}
			    |
			(
				{
					markLeaf(elementTypeProvider.getValidURL_PERCENTTerminalRuleCall_1_10_0ElementType());
				}
				this_PERCENT_11=RULE_PERCENT
				{
					doneLeaf(this_PERCENT_11);
				}
				(
					{
						markLeaf(elementTypeProvider.getValidURL_ONE_INTTerminalRuleCall_1_10_1_0ElementType());
					}
					this_ONE_INT_12=RULE_ONE_INT
					{
						doneLeaf(this_ONE_INT_12);
					}
					    |
					{
						markLeaf(elementTypeProvider.getValidURL_ONE_HEX_LETTERTerminalRuleCall_1_10_1_1ElementType());
					}
					this_ONE_HEX_LETTER_13=RULE_ONE_HEX_LETTER
					{
						doneLeaf(this_ONE_HEX_LETTER_13);
					}
				)
				(
					{
						markLeaf(elementTypeProvider.getValidURL_ONE_INTTerminalRuleCall_1_10_2_0ElementType());
					}
					this_ONE_INT_14=RULE_ONE_INT
					{
						doneLeaf(this_ONE_INT_14);
					}
					    |
					{
						markLeaf(elementTypeProvider.getValidURL_ONE_HEX_LETTERTerminalRuleCall_1_10_2_1ElementType());
					}
					this_ONE_HEX_LETTER_15=RULE_ONE_HEX_LETTER
					{
						doneLeaf(this_ONE_HEX_LETTER_15);
					}
				)
			)
		)+
	)
;
finally {
	myHiddenTokenState.restore();
}

//Entry rule entryRuleIdentifier
entryRuleIdentifier returns [Boolean current=false]@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}:
	{ markComposite(elementTypeProvider.getIdentifierElementType()); }
	iv_ruleIdentifier=ruleIdentifier
	{ $current=$iv_ruleIdentifier.current; }
	EOF;
finally {
	myHiddenTokenState.restore();
}

// Rule Identifier
ruleIdentifier returns [Boolean current=false]
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}:
	(
		(
			{
				markLeaf(elementTypeProvider.getIdentifier_DASHTerminalRuleCall_0ElementType());
			}
			this_DASH_0=RULE_DASH
			{
				doneLeaf(this_DASH_0);
			}
		)?
		(
			{
				markLeaf(elementTypeProvider.getIdentifier_UNDERSCORETerminalRuleCall_1_0ElementType());
			}
			this_UNDERSCORE_1=RULE_UNDERSCORE
			{
				doneLeaf(this_UNDERSCORE_1);
			}
			    |
			{
				markLeaf(elementTypeProvider.getIdentifier_ONE_HEX_LETTERTerminalRuleCall_1_1ElementType());
			}
			this_ONE_HEX_LETTER_2=RULE_ONE_HEX_LETTER
			{
				doneLeaf(this_ONE_HEX_LETTER_2);
			}
			    |
			{
				markLeaf(elementTypeProvider.getIdentifier_ONE_NON_HEX_LETTERTerminalRuleCall_1_2ElementType());
			}
			this_ONE_NON_HEX_LETTER_3=RULE_ONE_NON_HEX_LETTER
			{
				doneLeaf(this_ONE_NON_HEX_LETTER_3);
			}
			    |
			{
				markComposite(elementTypeProvider.getIdentifier_KeywordHackParserRuleCall_1_3ElementType());
			}
			ruleKeywordHack
			{
				doneComposite();
			}
		)
		(
			((
				RULE_UNDERSCORE
				    |
				RULE_DASH
				    |
				RULE_ONE_HEX_LETTER
				    |
				RULE_ONE_NON_HEX_LETTER
				    |
				RULE_ONE_INT
				    |
				ruleKeywordHack
			)
			)=>
			(
				{
					markLeaf(elementTypeProvider.getIdentifier_UNDERSCORETerminalRuleCall_2_0_0ElementType());
				}
				this_UNDERSCORE_5=RULE_UNDERSCORE
				{
					doneLeaf(this_UNDERSCORE_5);
				}
				    |
				{
					markLeaf(elementTypeProvider.getIdentifier_DASHTerminalRuleCall_2_0_1ElementType());
				}
				this_DASH_6=RULE_DASH
				{
					doneLeaf(this_DASH_6);
				}
				    |
				{
					markLeaf(elementTypeProvider.getIdentifier_ONE_HEX_LETTERTerminalRuleCall_2_0_2ElementType());
				}
				this_ONE_HEX_LETTER_7=RULE_ONE_HEX_LETTER
				{
					doneLeaf(this_ONE_HEX_LETTER_7);
				}
				    |
				{
					markLeaf(elementTypeProvider.getIdentifier_ONE_NON_HEX_LETTERTerminalRuleCall_2_0_3ElementType());
				}
				this_ONE_NON_HEX_LETTER_8=RULE_ONE_NON_HEX_LETTER
				{
					doneLeaf(this_ONE_NON_HEX_LETTER_8);
				}
				    |
				{
					markLeaf(elementTypeProvider.getIdentifier_ONE_INTTerminalRuleCall_2_0_4ElementType());
				}
				this_ONE_INT_9=RULE_ONE_INT
				{
					doneLeaf(this_ONE_INT_9);
				}
				    |
				{
					markComposite(elementTypeProvider.getIdentifier_KeywordHackParserRuleCall_2_0_5ElementType());
				}
				ruleKeywordHack
				{
					doneComposite();
				}
			)
		)*
	)
;
finally {
	myHiddenTokenState.restore();
}

//Entry rule entryRuleNum
entryRuleNum returns [Boolean current=false]@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}:
	{ markComposite(elementTypeProvider.getNumElementType()); }
	iv_ruleNum=ruleNum
	{ $current=$iv_ruleNum.current; }
	EOF;
finally {
	myHiddenTokenState.restore();
}

// Rule Num
ruleNum returns [Boolean current=false]
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}:
	(
		(
			{
				markLeaf(elementTypeProvider.getNum_PLUSTerminalRuleCall_0_0ElementType());
			}
			this_PLUS_0=RULE_PLUS
			{
				doneLeaf(this_PLUS_0);
			}
			    |
			{
				markLeaf(elementTypeProvider.getNum_DASHTerminalRuleCall_0_1ElementType());
			}
			this_DASH_1=RULE_DASH
			{
				doneLeaf(this_DASH_1);
			}
		)?
		(
			(
				{
					markLeaf(elementTypeProvider.getNum_FullStopKeyword_1_0_0ElementType());
				}
				kw='.'
				{
					doneLeaf(kw);
				}
				(
					(RULE_ONE_INT)=>
					{
						markLeaf(elementTypeProvider.getNum_ONE_INTTerminalRuleCall_1_0_1ElementType());
					}
					this_ONE_INT_3=RULE_ONE_INT
					{
						doneLeaf(this_ONE_INT_3);
					}
				)+
			)
			    |
			(
				(
					(RULE_ONE_INT)=>
					{
						markLeaf(elementTypeProvider.getNum_ONE_INTTerminalRuleCall_1_1_0ElementType());
					}
					this_ONE_INT_4=RULE_ONE_INT
					{
						doneLeaf(this_ONE_INT_4);
					}
				)+
				(
					(
						('.')=>
						{
							markLeaf(elementTypeProvider.getNum_FullStopKeyword_1_1_1_0ElementType());
						}
						kw='.'
						{
							doneLeaf(kw);
						}
					)
					(
						(RULE_ONE_INT)=>
						{
							markLeaf(elementTypeProvider.getNum_ONE_INTTerminalRuleCall_1_1_1_1ElementType());
						}
						this_ONE_INT_6=RULE_ONE_INT
						{
							doneLeaf(this_ONE_INT_6);
						}
					)+
				)?
			)
		)
	)
;
finally {
	myHiddenTokenState.restore();
}

//Entry rule entryRuleHex
entryRuleHex returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getHexElementType()); }
	iv_ruleHex=ruleHex
	{ $current=$iv_ruleHex.current; }
	EOF;

// Rule Hex
ruleHex returns [Boolean current=false]
:
	(
		{
			markLeaf(elementTypeProvider.getHex_HASHMARKTerminalRuleCall_0ElementType());
		}
		this_HASHMARK_0=RULE_HASHMARK
		{
			doneLeaf(this_HASHMARK_0);
		}
		(
			((
				RULE_ONE_INT
				    |
				RULE_ONE_HEX_LETTER
			)
			)=>
			(
				{
					markLeaf(elementTypeProvider.getHex_ONE_INTTerminalRuleCall_1_0_0ElementType());
				}
				this_ONE_INT_1=RULE_ONE_INT
				{
					doneLeaf(this_ONE_INT_1);
				}
				    |
				{
					markLeaf(elementTypeProvider.getHex_ONE_HEX_LETTERTerminalRuleCall_1_0_1ElementType());
				}
				this_ONE_HEX_LETTER_2=RULE_ONE_HEX_LETTER
				{
					doneLeaf(this_ONE_HEX_LETTER_2);
				}
			)
		)+
	)
;

RULE_IMPORTANT_SYM : '!important';

RULE_ONE_INT : '0'..'9';

RULE_ONE_HEX_LETTER : ('a'..'f'|'A'..'F');

RULE_ONE_NON_HEX_LETTER : ('g'..'z'|'G'..'Z');

RULE_UNDERSCORE : '_';

RULE_DASH : '-';

RULE_PLUS : '+';

RULE_HASHMARK : '#';

RULE_COMMA : ',';

RULE_PERCENT : '%';

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_CSSSTRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'0'..'9'|'a'..'f'|'A'..'F'|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'0'..'9'|'a'..'f'|'A'..'F'|'\\')|~(('\\'|'\'')))* '\'');

RULE_INCLUDES : '~=';

RULE_DASHMATCH : '|=';

RULE_COLON : ':';
