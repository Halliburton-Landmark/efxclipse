/*
 * generated by Xtext 2.9.0
 */
grammar PsiInternalCssExtDsl;

options {
	superClass=AbstractPsiAntlrParser;
}

@lexer::header {
package org.eclipse.fx.ide.css.cssext.idea.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.eclipse.fx.ide.css.cssext.idea.parser.antlr.internal;

import org.eclipse.xtext.idea.parser.AbstractPsiAntlrParser;
import org.eclipse.fx.ide.css.cssext.idea.lang.CssExtDslElementTypeProvider;
import org.eclipse.xtext.idea.parser.TokenTypeProvider;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.fx.ide.css.cssext.services.CssExtDslGrammarAccess;

import com.intellij.lang.PsiBuilder;
}

@parser::members {

	protected CssExtDslGrammarAccess grammarAccess;

	protected CssExtDslElementTypeProvider elementTypeProvider;

	public PsiInternalCssExtDslParser(PsiBuilder builder, TokenStream input, CssExtDslElementTypeProvider elementTypeProvider, CssExtDslGrammarAccess grammarAccess) {
		this(input);
		setPsiBuilder(builder);
    	this.grammarAccess = grammarAccess;
		this.elementTypeProvider = elementTypeProvider;
	}

	@Override
	protected String getFirstRuleName() {
		return "CssExtension";
	}

}

//Entry rule entryRuleCssExtension
entryRuleCssExtension returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getCssExtensionElementType()); }
	iv_ruleCssExtension=ruleCssExtension
	{ $current=$iv_ruleCssExtension.current; }
	EOF;

// Rule CssExtension
ruleCssExtension returns [Boolean current=false]
:
	(
		{
			markLeaf(elementTypeProvider.getCssExtension_NamespaceKeyword_0ElementType());
		}
		otherlv_0='namespace'
		{
			doneLeaf(otherlv_0);
		}
		(
			(
				{
					markLeaf(elementTypeProvider.getCssExtension_NamespaceSTRINGTerminalRuleCall_1_0ElementType());
				}
				lv_namespace_1_0=RULE_STRING
				{
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
				{
					doneLeaf(lv_namespace_1_0);
				}
			)
		)
		(
			(
				{
					markComposite(elementTypeProvider.getCssExtension_ImportsImportParserRuleCall_2_0ElementType());
				}
				lv_imports_2_0=ruleImport
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)*
		(
			(
				{
					markComposite(elementTypeProvider.getCssExtension_PackageDefPackageDefinitionParserRuleCall_3_0ElementType());
				}
				lv_packageDef_3_0=rulePackageDefinition
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)?
	)
;

//Entry rule entryRuleImport
entryRuleImport returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getImportElementType()); }
	iv_ruleImport=ruleImport
	{ $current=$iv_ruleImport.current; }
	EOF;

// Rule Import
ruleImport returns [Boolean current=false]
:
	(
		{
			markLeaf(elementTypeProvider.getImport_ImportKeyword_0ElementType());
		}
		otherlv_0='import'
		{
			doneLeaf(otherlv_0);
		}
		(
			(
				{
					markComposite(elementTypeProvider.getImport_ImportedNamespaceQualifiedNameWithWildCardParserRuleCall_1_0ElementType());
				}
				lv_importedNamespace_1_0=ruleQualifiedNameWithWildCard
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)
	)
;

//Entry rule entryRuleValidID
entryRuleValidID returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getValidIDElementType()); }
	iv_ruleValidID=ruleValidID
	{ $current=$iv_ruleValidID.current; }
	EOF;

// Rule ValidID
ruleValidID returns [Boolean current=false]
:
	{
		markLeaf(elementTypeProvider.getValidID_IDTerminalRuleCallElementType());
	}
	this_ID_0=RULE_ID
	{
		doneLeaf(this_ID_0);
	}
;

//Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getQualifiedNameElementType()); }
	iv_ruleQualifiedName=ruleQualifiedName
	{ $current=$iv_ruleQualifiedName.current; }
	EOF;

// Rule QualifiedName
ruleQualifiedName returns [Boolean current=false]
:
	(
		{
			markComposite(elementTypeProvider.getQualifiedName_ValidIDParserRuleCall_0ElementType());
		}
		ruleValidID
		{
			doneComposite();
		}
		(
			(
				('.')=>
				{
					markLeaf(elementTypeProvider.getQualifiedName_FullStopKeyword_1_0ElementType());
				}
				kw='.'
				{
					doneLeaf(kw);
				}
			)
			{
				markComposite(elementTypeProvider.getQualifiedName_ValidIDParserRuleCall_1_1ElementType());
			}
			ruleValidID
			{
				doneComposite();
			}
		)*
	)
;

//Entry rule entryRuleQualifiedNameWithWildCard
entryRuleQualifiedNameWithWildCard returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getQualifiedNameWithWildCardElementType()); }
	iv_ruleQualifiedNameWithWildCard=ruleQualifiedNameWithWildCard
	{ $current=$iv_ruleQualifiedNameWithWildCard.current; }
	EOF;

// Rule QualifiedNameWithWildCard
ruleQualifiedNameWithWildCard returns [Boolean current=false]
:
	(
		{
			markComposite(elementTypeProvider.getQualifiedNameWithWildCard_QualifiedNameParserRuleCall_0ElementType());
		}
		ruleQualifiedName
		{
			doneComposite();
		}
		(
			{
				markLeaf(elementTypeProvider.getQualifiedNameWithWildCard_FullStopKeyword_1_0ElementType());
			}
			kw='.'
			{
				doneLeaf(kw);
			}
			{
				markLeaf(elementTypeProvider.getQualifiedNameWithWildCard_AsteriskKeyword_1_1ElementType());
			}
			kw='*'
			{
				doneLeaf(kw);
			}
		)?
	)
;

//Entry rule entryRulePackageDefinition
entryRulePackageDefinition returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getPackageDefinitionElementType()); }
	iv_rulePackageDefinition=rulePackageDefinition
	{ $current=$iv_rulePackageDefinition.current; }
	EOF;

// Rule PackageDefinition
rulePackageDefinition returns [Boolean current=false]
:
	(
		(
			(
				(
					{
						markComposite(elementTypeProvider.getPackageDefinition_DokuDokuParserRuleCall_0_0_0ElementType());
					}
					lv_doku_0_0=ruleDoku
					{
						doneComposite();
						if(!$current) {
							associateWithSemanticElement();
							$current = true;
						}
					}
				)
			)
			(
				{
					markLeaf(elementTypeProvider.getPackageDefinition_WSTerminalRuleCall_0_1ElementType());
				}
				this_WS_1=RULE_WS
				{
					doneLeaf(this_WS_1);
				}
			)*
		)?
		{
			markLeaf(elementTypeProvider.getPackageDefinition_PackageKeyword_1ElementType());
		}
		otherlv_2='package'
		{
			doneLeaf(otherlv_2);
		}
		(
			(
				{
					markComposite(elementTypeProvider.getPackageDefinition_NameQualifiedNameParserRuleCall_2_0ElementType());
				}
				lv_name_3_0=ruleQualifiedName
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)
		{
			markLeaf(elementTypeProvider.getPackageDefinition_LeftCurlyBracketKeyword_3ElementType());
		}
		otherlv_4='{'
		{
			doneLeaf(otherlv_4);
		}
		(
			(
				(
					{
						markComposite(elementTypeProvider.getPackageDefinition_RulesCSSRuleDefinitionParserRuleCall_4_0_0ElementType());
					}
					lv_rules_5_0=ruleCSSRuleDefinition
					{
						doneComposite();
						if(!$current) {
							associateWithSemanticElement();
							$current = true;
						}
					}
				)
			)
			    |
			(
				(
					{
						markComposite(elementTypeProvider.getPackageDefinition_SubpackagesPackageDefinitionParserRuleCall_4_1_0ElementType());
					}
					lv_subpackages_6_0=rulePackageDefinition
					{
						doneComposite();
						if(!$current) {
							associateWithSemanticElement();
							$current = true;
						}
					}
				)
			)
			    |
			(
				(
					{
						markComposite(elementTypeProvider.getPackageDefinition_ElementsElementDefinitionParserRuleCall_4_2_0ElementType());
					}
					lv_elements_7_0=ruleElementDefinition
					{
						doneComposite();
						if(!$current) {
							associateWithSemanticElement();
							$current = true;
						}
					}
				)
			)
		)*
		{
			markLeaf(elementTypeProvider.getPackageDefinition_RightCurlyBracketKeyword_5ElementType());
		}
		otherlv_8='}'
		{
			doneLeaf(otherlv_8);
		}
	)
;

//Entry rule entryRuleDoku
entryRuleDoku returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getDokuElementType()); }
	iv_ruleDoku=ruleDoku
	{ $current=$iv_ruleDoku.current; }
	EOF;

// Rule Doku
ruleDoku returns [Boolean current=false]
:
	(
		(
			{
				markLeaf(elementTypeProvider.getDoku_ContentJDOCTerminalRuleCall_0ElementType());
			}
			lv_content_0_0=RULE_JDOC
			{
				if(!$current) {
					associateWithSemanticElement();
					$current = true;
				}
			}
			{
				doneLeaf(lv_content_0_0);
			}
		)
	)
;

//Entry rule entryRuleCSSBaseType
entryRuleCSSBaseType returns [Boolean current=false]@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT", "RULE_ML_COMMENT");
}:
	{ markComposite(elementTypeProvider.getCSSBaseTypeElementType()); }
	iv_ruleCSSBaseType=ruleCSSBaseType
	{ $current=$iv_ruleCSSBaseType.current; }
	EOF;
finally {
	myHiddenTokenState.restore();
}

// Rule CSSBaseType
ruleCSSBaseType returns [Boolean current=false]
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT", "RULE_ML_COMMENT");
}:
	{
		markComposite(elementTypeProvider.getCSSBaseType_CSSTypeParserRuleCallElementType());
	}
	this_CSSType_0=ruleCSSType
	{
		$current = $this_CSSType_0.current;
		doneComposite();
	}
;
finally {
	myHiddenTokenState.restore();
}

//Entry rule entryRuleCSSType
entryRuleCSSType returns [Boolean current=false]@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_SL_COMMENT", "RULE_ML_COMMENT");
}:
	{ markComposite(elementTypeProvider.getCSSTypeElementType()); }
	iv_ruleCSSType=ruleCSSType
	{ $current=$iv_ruleCSSType.current; }
	EOF;
finally {
	myHiddenTokenState.restore();
}

// Rule CSSType
ruleCSSType returns [Boolean current=false]
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_SL_COMMENT", "RULE_ML_COMMENT");
}:
	(
		(
			(
				{
					precedeComposite(elementTypeProvider.getCSSType_CSSRangedIntTypeAction_0_0ElementType());
					doneComposite();
					associateWithSemanticElement();
				}
			)
			(
				(
					(
						{
							markComposite(elementTypeProvider.getCSSType_DokuDokuParserRuleCall_0_1_0_0ElementType());
						}
						lv_doku_1_0=ruleDoku
						{
							doneComposite();
							if(!$current) {
								associateWithSemanticElement();
								$current = true;
							}
						}
					)
				)
				(
					{
						markLeaf(elementTypeProvider.getCSSType_WSTerminalRuleCall_0_1_1ElementType());
					}
					this_WS_2=RULE_WS
					{
						doneLeaf(this_WS_2);
					}
				)*
			)?
			(
				(
					{
						markLeaf(elementTypeProvider.getCSSType_TypeINTKeyword_0_2_0ElementType());
					}
					lv_type_3_0='@INT'
					{
						doneLeaf(lv_type_3_0);
					}
					{
						if (!$current) {
							associateWithSemanticElement();
							$current = true;
						}
					}
				)
			)
			{
				markLeaf(elementTypeProvider.getCSSType_LeftParenthesisKeyword_0_3ElementType());
			}
			otherlv_4='('
			{
				doneLeaf(otherlv_4);
			}
			(
				{
					markLeaf(elementTypeProvider.getCSSType_WSTerminalRuleCall_0_4ElementType());
				}
				this_WS_5=RULE_WS
				{
					doneLeaf(this_WS_5);
				}
			)*
			(
				(
					{
						markLeaf(elementTypeProvider.getCSSType_FromINTTerminalRuleCall_0_5_0ElementType());
					}
					lv_from_6_0=RULE_INT
					{
						if(!$current) {
							associateWithSemanticElement();
							$current = true;
						}
					}
					{
						doneLeaf(lv_from_6_0);
					}
				)
			)
			(
				{
					markLeaf(elementTypeProvider.getCSSType_WSTerminalRuleCall_0_6ElementType());
				}
				this_WS_7=RULE_WS
				{
					doneLeaf(this_WS_7);
				}
			)*
			{
				markLeaf(elementTypeProvider.getCSSType_HyphenMinusGreaterThanSignKeyword_0_7ElementType());
			}
			otherlv_8='->'
			{
				doneLeaf(otherlv_8);
			}
			(
				{
					markLeaf(elementTypeProvider.getCSSType_WSTerminalRuleCall_0_8ElementType());
				}
				this_WS_9=RULE_WS
				{
					doneLeaf(this_WS_9);
				}
			)*
			(
				(
					{
						markLeaf(elementTypeProvider.getCSSType_ToINTTerminalRuleCall_0_9_0ElementType());
					}
					lv_to_10_0=RULE_INT
					{
						if(!$current) {
							associateWithSemanticElement();
							$current = true;
						}
					}
					{
						doneLeaf(lv_to_10_0);
					}
				)
			)
			(
				{
					markLeaf(elementTypeProvider.getCSSType_WSTerminalRuleCall_0_10ElementType());
				}
				this_WS_11=RULE_WS
				{
					doneLeaf(this_WS_11);
				}
			)*
			{
				markLeaf(elementTypeProvider.getCSSType_RightParenthesisKeyword_0_11ElementType());
			}
			otherlv_12=')'
			{
				doneLeaf(otherlv_12);
			}
		)
		    |
		(
			(
				{
					precedeComposite(elementTypeProvider.getCSSType_CSSRangedDoubleTypeAction_1_0ElementType());
					doneComposite();
					associateWithSemanticElement();
				}
			)
			(
				(
					(
						{
							markComposite(elementTypeProvider.getCSSType_DokuDokuParserRuleCall_1_1_0_0ElementType());
						}
						lv_doku_14_0=ruleDoku
						{
							doneComposite();
							if(!$current) {
								associateWithSemanticElement();
								$current = true;
							}
						}
					)
				)
				(
					{
						markLeaf(elementTypeProvider.getCSSType_WSTerminalRuleCall_1_1_1ElementType());
					}
					this_WS_15=RULE_WS
					{
						doneLeaf(this_WS_15);
					}
				)*
			)?
			(
				(
					{
						markLeaf(elementTypeProvider.getCSSType_TypeNUMKeyword_1_2_0ElementType());
					}
					lv_type_16_0='@NUM'
					{
						doneLeaf(lv_type_16_0);
					}
					{
						if (!$current) {
							associateWithSemanticElement();
							$current = true;
						}
					}
				)
			)
			{
				markLeaf(elementTypeProvider.getCSSType_LeftParenthesisKeyword_1_3ElementType());
			}
			otherlv_17='('
			{
				doneLeaf(otherlv_17);
			}
			(
				{
					markLeaf(elementTypeProvider.getCSSType_WSTerminalRuleCall_1_4ElementType());
				}
				this_WS_18=RULE_WS
				{
					doneLeaf(this_WS_18);
				}
			)*
			(
				(
					{
						markLeaf(elementTypeProvider.getCSSType_FromDOUBLETerminalRuleCall_1_5_0ElementType());
					}
					lv_from_19_0=RULE_DOUBLE
					{
						if(!$current) {
							associateWithSemanticElement();
							$current = true;
						}
					}
					{
						doneLeaf(lv_from_19_0);
					}
				)
			)
			(
				{
					markLeaf(elementTypeProvider.getCSSType_WSTerminalRuleCall_1_6ElementType());
				}
				this_WS_20=RULE_WS
				{
					doneLeaf(this_WS_20);
				}
			)*
			{
				markLeaf(elementTypeProvider.getCSSType_HyphenMinusGreaterThanSignKeyword_1_7ElementType());
			}
			otherlv_21='->'
			{
				doneLeaf(otherlv_21);
			}
			(
				{
					markLeaf(elementTypeProvider.getCSSType_WSTerminalRuleCall_1_8ElementType());
				}
				this_WS_22=RULE_WS
				{
					doneLeaf(this_WS_22);
				}
			)*
			(
				(
					{
						markLeaf(elementTypeProvider.getCSSType_ToDOUBLETerminalRuleCall_1_9_0ElementType());
					}
					lv_to_23_0=RULE_DOUBLE
					{
						if(!$current) {
							associateWithSemanticElement();
							$current = true;
						}
					}
					{
						doneLeaf(lv_to_23_0);
					}
				)
			)
			(
				{
					markLeaf(elementTypeProvider.getCSSType_WSTerminalRuleCall_1_10ElementType());
				}
				this_WS_24=RULE_WS
				{
					doneLeaf(this_WS_24);
				}
			)*
			{
				markLeaf(elementTypeProvider.getCSSType_RightParenthesisKeyword_1_11ElementType());
			}
			otherlv_25=')'
			{
				doneLeaf(otherlv_25);
			}
		)
		    |
		(
			(
				{
					precedeComposite(elementTypeProvider.getCSSType_CSSPropertyRefAction_2_0ElementType());
					doneComposite();
					associateWithSemanticElement();
				}
			)
			(
				(
					(
						{
							markComposite(elementTypeProvider.getCSSType_DokuDokuParserRuleCall_2_1_0_0ElementType());
						}
						lv_doku_27_0=ruleDoku
						{
							doneComposite();
							if(!$current) {
								associateWithSemanticElement();
								$current = true;
							}
						}
					)
				)
				(
					{
						markLeaf(elementTypeProvider.getCSSType_WSTerminalRuleCall_2_1_1ElementType());
					}
					this_WS_28=RULE_WS
					{
						doneLeaf(this_WS_28);
					}
				)*
			)?
			(
				(
					{
						markLeaf(elementTypeProvider.getCSSType_TypePROPERTY_REFKeyword_2_2_0ElementType());
					}
					lv_type_29_0='@PROPERTY_REF'
					{
						doneLeaf(lv_type_29_0);
					}
					{
						if (!$current) {
							associateWithSemanticElement();
							$current = true;
						}
					}
				)
			)
			{
				markLeaf(elementTypeProvider.getCSSType_LeftParenthesisKeyword_2_3ElementType());
			}
			otherlv_30='('
			{
				doneLeaf(otherlv_30);
			}
			(
				(
					{
						markComposite(elementTypeProvider.getCSSType_RuleCSSRuleRefParserRuleCall_2_4_0ElementType());
					}
					lv_rule_31_0=ruleCSSRuleRef
					{
						doneComposite();
						if(!$current) {
							associateWithSemanticElement();
							$current = true;
						}
					}
				)
			)
			{
				markLeaf(elementTypeProvider.getCSSType_RightParenthesisKeyword_2_5ElementType());
			}
			otherlv_32=')'
			{
				doneLeaf(otherlv_32);
			}
		)
		    |
		(
			(
				(
					(
						{
							markComposite(elementTypeProvider.getCSSType_DokuDokuParserRuleCall_3_0_0_0ElementType());
						}
						lv_doku_33_0=ruleDoku
						{
							doneComposite();
							if(!$current) {
								associateWithSemanticElement();
								$current = true;
							}
						}
					)
				)
				(
					{
						markLeaf(elementTypeProvider.getCSSType_WSTerminalRuleCall_3_0_1ElementType());
					}
					this_WS_34=RULE_WS
					{
						doneLeaf(this_WS_34);
					}
				)*
			)?
			(
				(
					(
						(
							{
								markLeaf(elementTypeProvider.getCSSType_TypeINTKeyword_3_1_0_0_0ElementType());
							}
							lv_type_35_0='@INT'
							{
								doneLeaf(lv_type_35_0);
							}
							{
								if (!$current) {
									associateWithSemanticElement();
									$current = true;
								}
							}
						)
					)
					(
						{
							markLeaf(elementTypeProvider.getCSSType_WSTerminalRuleCall_3_1_0_1ElementType());
						}
						this_WS_36=RULE_WS
						{
							doneLeaf(this_WS_36);
						}
					)*
				)
				    |
				(
					(
						(
							{
								markLeaf(elementTypeProvider.getCSSType_TypeNUMKeyword_3_1_1_0_0ElementType());
							}
							lv_type_37_0='@NUM'
							{
								doneLeaf(lv_type_37_0);
							}
							{
								if (!$current) {
									associateWithSemanticElement();
									$current = true;
								}
							}
						)
					)
					(
						{
							markLeaf(elementTypeProvider.getCSSType_WSTerminalRuleCall_3_1_1_1ElementType());
						}
						this_WS_38=RULE_WS
						{
							doneLeaf(this_WS_38);
						}
					)*
				)
				    |
				(
					(
						(
							{
								markLeaf(elementTypeProvider.getCSSType_TypeSTRINGKeyword_3_1_2_0_0ElementType());
							}
							lv_type_39_0='@STRING'
							{
								doneLeaf(lv_type_39_0);
							}
							{
								if (!$current) {
									associateWithSemanticElement();
									$current = true;
								}
							}
						)
					)
					(
						{
							markLeaf(elementTypeProvider.getCSSType_WSTerminalRuleCall_3_1_2_1ElementType());
						}
						this_WS_40=RULE_WS
						{
							doneLeaf(this_WS_40);
						}
					)*
				)
				    |
				(
					(
						(
							{
								markLeaf(elementTypeProvider.getCSSType_TypeURLKeyword_3_1_3_0_0ElementType());
							}
							lv_type_41_0='@URL'
							{
								doneLeaf(lv_type_41_0);
							}
							{
								if (!$current) {
									associateWithSemanticElement();
									$current = true;
								}
							}
						)
					)
					(
						{
							markLeaf(elementTypeProvider.getCSSType_WSTerminalRuleCall_3_1_3_1ElementType());
						}
						this_WS_42=RULE_WS
						{
							doneLeaf(this_WS_42);
						}
					)*
				)
			)
		)
	)
;
finally {
	myHiddenTokenState.restore();
}

//Entry rule entryRuleElementDefinition
entryRuleElementDefinition returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getElementDefinitionElementType()); }
	iv_ruleElementDefinition=ruleElementDefinition
	{ $current=$iv_ruleElementDefinition.current; }
	EOF;

// Rule ElementDefinition
ruleElementDefinition returns [Boolean current=false]
:
	(
		(
			{
				precedeComposite(elementTypeProvider.getElementDefinition_ElementDefinitionAction_0ElementType());
				doneComposite();
				associateWithSemanticElement();
			}
		)
		(
			(
				{
					markComposite(elementTypeProvider.getElementDefinition_DokuDokuParserRuleCall_1_0ElementType());
				}
				lv_doku_1_0=ruleDoku
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)?
		(
			(
				{
					markComposite(elementTypeProvider.getElementDefinition_NameQualifiedNameParserRuleCall_2_0ElementType());
				}
				lv_name_2_0=ruleQualifiedName
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)
		(
			{
				markLeaf(elementTypeProvider.getElementDefinition_ExtendsKeyword_3_0ElementType());
			}
			otherlv_3='extends'
			{
				doneLeaf(otherlv_3);
			}
			(
				(
					{
						if (!$current) {
							associateWithSemanticElement();
							$current = true;
						}
					}
					{
						markComposite(elementTypeProvider.getElementDefinition_SuperElementDefinitionCrossReference_3_1_0ElementType());
					}
					ruleQualifiedName
					{
						doneComposite();
					}
				)
			)
			(
				{
					markLeaf(elementTypeProvider.getElementDefinition_CommaKeyword_3_2_0ElementType());
				}
				otherlv_5=','
				{
					doneLeaf(otherlv_5);
				}
				(
					(
						{
							if (!$current) {
								associateWithSemanticElement();
								$current = true;
							}
						}
						{
							markComposite(elementTypeProvider.getElementDefinition_SuperElementDefinitionCrossReference_3_2_1_0ElementType());
						}
						ruleQualifiedName
						{
							doneComposite();
						}
					)
				)
			)*
		)?
		(
			{
				markLeaf(elementTypeProvider.getElementDefinition_StyleclassKeyword_4_0ElementType());
			}
			otherlv_7='styleclass'
			{
				doneLeaf(otherlv_7);
			}
			(
				(
					{
						markLeaf(elementTypeProvider.getElementDefinition_StyleclassIDTerminalRuleCall_4_1_0ElementType());
					}
					lv_styleclass_8_0=RULE_ID
					{
						if(!$current) {
							associateWithSemanticElement();
							$current = true;
						}
					}
					{
						doneLeaf(lv_styleclass_8_0);
					}
				)
			)
		)?
		{
			markLeaf(elementTypeProvider.getElementDefinition_LeftCurlyBracketKeyword_5ElementType());
		}
		otherlv_9='{'
		{
			doneLeaf(otherlv_9);
		}
		(
			(
				(
					{
						markComposite(elementTypeProvider.getElementDefinition_PropertiesPropertyDefinitionParserRuleCall_6_0_0ElementType());
					}
					lv_properties_10_0=rulePropertyDefinition
					{
						doneComposite();
						if(!$current) {
							associateWithSemanticElement();
							$current = true;
						}
					}
				)
			)
			    |
			(
				(
					{
						markComposite(elementTypeProvider.getElementDefinition_PseudoClassesPseudoClassDefinitionParserRuleCall_6_1_0ElementType());
					}
					lv_pseudoClasses_11_0=rulePseudoClassDefinition
					{
						doneComposite();
						if(!$current) {
							associateWithSemanticElement();
							$current = true;
						}
					}
				)
			)
			    |
			(
				(
					{
						markComposite(elementTypeProvider.getElementDefinition_SubstructuresSubstructureParserRuleCall_6_2_0ElementType());
					}
					lv_substructures_12_0=ruleSubstructure
					{
						doneComposite();
						if(!$current) {
							associateWithSemanticElement();
							$current = true;
						}
					}
				)
			)
		)*
		{
			markLeaf(elementTypeProvider.getElementDefinition_RightCurlyBracketKeyword_7ElementType());
		}
		otherlv_13='}'
		{
			doneLeaf(otherlv_13);
		}
	)
;

//Entry rule entryRulePropertyDefinition
entryRulePropertyDefinition returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getPropertyDefinitionElementType()); }
	iv_rulePropertyDefinition=rulePropertyDefinition
	{ $current=$iv_rulePropertyDefinition.current; }
	EOF;

// Rule PropertyDefinition
rulePropertyDefinition returns [Boolean current=false]
:
	(
		(
			{
				precedeComposite(elementTypeProvider.getPropertyDefinition_PropertyDefinitionAction_0ElementType());
				doneComposite();
				associateWithSemanticElement();
			}
		)
		(
			(
				{
					markComposite(elementTypeProvider.getPropertyDefinition_DokuDokuParserRuleCall_1_0ElementType());
				}
				lv_doku_1_0=ruleDoku
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)?
		(
			(
				{
					markComposite(elementTypeProvider.getPropertyDefinition_NameQualifiedNameParserRuleCall_2_0ElementType());
				}
				lv_name_2_0=ruleQualifiedName
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)
		(
			(
				{
					markComposite(elementTypeProvider.getPropertyDefinition_RuleCSSRuleOrParserRuleCall_3_0ElementType());
				}
				lv_rule_3_0=ruleCSSRuleOr
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)
		(
			{
				markLeaf(elementTypeProvider.getPropertyDefinition_DefaultKeyword_4_0ElementType());
			}
			otherlv_4='default:'
			{
				doneLeaf(otherlv_4);
			}
			(
				(
					{
						markComposite(elementTypeProvider.getPropertyDefinition_DefaultCSSDefaultValueParserRuleCall_4_1_0ElementType());
					}
					lv_default_5_0=ruleCSSDefaultValue
					{
						doneComposite();
						if(!$current) {
							associateWithSemanticElement();
							$current = true;
						}
					}
				)
			)
		)?
		{
			markLeaf(elementTypeProvider.getPropertyDefinition_SemicolonKeyword_5ElementType());
		}
		otherlv_6=';'
		{
			doneLeaf(otherlv_6);
		}
	)
;

//Entry rule entryRulePseudoClassDefinition
entryRulePseudoClassDefinition returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getPseudoClassDefinitionElementType()); }
	iv_rulePseudoClassDefinition=rulePseudoClassDefinition
	{ $current=$iv_rulePseudoClassDefinition.current; }
	EOF;

// Rule PseudoClassDefinition
rulePseudoClassDefinition returns [Boolean current=false]
:
	(
		(
			{
				precedeComposite(elementTypeProvider.getPseudoClassDefinition_PseudoClassDefinitionAction_0ElementType());
				doneComposite();
				associateWithSemanticElement();
			}
		)
		(
			(
				{
					markComposite(elementTypeProvider.getPseudoClassDefinition_DokuDokuParserRuleCall_1_0ElementType());
				}
				lv_doku_1_0=ruleDoku
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)?
		(
			(
				{
					markLeaf(elementTypeProvider.getPseudoClassDefinition_NamePSEUDOTerminalRuleCall_2_0ElementType());
				}
				lv_name_2_0=RULE_PSEUDO
				{
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
				{
					doneLeaf(lv_name_2_0);
				}
			)
		)
	)
;

//Entry rule entryRuleCSSRuleRef
entryRuleCSSRuleRef returns [Boolean current=false]@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}:
	{ markComposite(elementTypeProvider.getCSSRuleRefElementType()); }
	iv_ruleCSSRuleRef=ruleCSSRuleRef
	{ $current=$iv_ruleCSSRuleRef.current; }
	EOF;
finally {
	myHiddenTokenState.restore();
}

// Rule CSSRuleRef
ruleCSSRuleRef returns [Boolean current=false]
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}:
	(
		(
			(
				(
					{
						markComposite(elementTypeProvider.getCSSRuleRef_DokuDokuParserRuleCall_0_0_0ElementType());
					}
					lv_doku_0_0=ruleDoku
					{
						doneComposite();
						if(!$current) {
							associateWithSemanticElement();
							$current = true;
						}
					}
				)
			)
			(
				{
					markLeaf(elementTypeProvider.getCSSRuleRef_WSTerminalRuleCall_0_1ElementType());
				}
				this_WS_1=RULE_WS
				{
					doneLeaf(this_WS_1);
				}
			)*
		)?
		{
			markLeaf(elementTypeProvider.getCSSRuleRef_LessThanSignKeyword_1ElementType());
		}
		otherlv_2='<'
		{
			doneLeaf(otherlv_2);
		}
		(
			(
				{
					if (!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
				{
					markComposite(elementTypeProvider.getCSSRuleRef_RefDefinitionCrossReference_2_0ElementType());
				}
				ruleQualifiedName
				{
					doneComposite();
				}
			)
		)
		{
			markLeaf(elementTypeProvider.getCSSRuleRef_GreaterThanSignKeyword_3ElementType());
		}
		otherlv_4='>'
		{
			doneLeaf(otherlv_4);
		}
	)
;
finally {
	myHiddenTokenState.restore();
}

//Entry rule entryRuleCSSRuleDefinition
entryRuleCSSRuleDefinition returns [Boolean current=false]@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT", "RULE_ML_COMMENT");
}:
	{ markComposite(elementTypeProvider.getCSSRuleDefinitionElementType()); }
	iv_ruleCSSRuleDefinition=ruleCSSRuleDefinition
	{ $current=$iv_ruleCSSRuleDefinition.current; }
	EOF;
finally {
	myHiddenTokenState.restore();
}

// Rule CSSRuleDefinition
ruleCSSRuleDefinition returns [Boolean current=false]
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT", "RULE_ML_COMMENT");
}:
	(
		(
			{
				precedeComposite(elementTypeProvider.getCSSRuleDefinition_CSSRuleDefinitionAction_0ElementType());
				doneComposite();
				associateWithSemanticElement();
			}
		)
		(
			(
				{
					markComposite(elementTypeProvider.getCSSRuleDefinition_DokuDokuParserRuleCall_1_0ElementType());
				}
				lv_doku_1_0=ruleDoku
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)?
		(
			(
				{
					markComposite(elementTypeProvider.getCSSRuleDefinition_NameQualifiedNameParserRuleCall_2_0ElementType());
				}
				lv_name_2_0=ruleQualifiedName
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)
		{
			markLeaf(elementTypeProvider.getCSSRuleDefinition_EqualsSignKeyword_3ElementType());
		}
		otherlv_3='='
		{
			doneLeaf(otherlv_3);
		}
		(
			(
				(
					{
						markComposite(elementTypeProvider.getCSSRuleDefinition_RuleCSSRuleOrParserRuleCall_4_0_0ElementType());
					}
					lv_rule_4_0=ruleCSSRuleOr
					{
						doneComposite();
						if(!$current) {
							associateWithSemanticElement();
							$current = true;
						}
					}
				)
			)
			    |
			(
				(
					{
						markComposite(elementTypeProvider.getCSSRuleDefinition_FuncCSSRuleFuncParserRuleCall_4_1_0ElementType());
					}
					lv_func_5_0=ruleCSSRuleFunc
					{
						doneComposite();
						if(!$current) {
							associateWithSemanticElement();
							$current = true;
						}
					}
				)
			)
		)
		{
			markLeaf(elementTypeProvider.getCSSRuleDefinition_SemicolonKeyword_5ElementType());
		}
		otherlv_6=';'
		{
			doneLeaf(otherlv_6);
		}
	)
;
finally {
	myHiddenTokenState.restore();
}

//Entry rule entryRuleCSSRuleFunc
entryRuleCSSRuleFunc returns [Boolean current=false]@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT");
}:
	{ markComposite(elementTypeProvider.getCSSRuleFuncElementType()); }
	iv_ruleCSSRuleFunc=ruleCSSRuleFunc
	{ $current=$iv_ruleCSSRuleFunc.current; }
	EOF;
finally {
	myHiddenTokenState.restore();
}

// Rule CSSRuleFunc
ruleCSSRuleFunc returns [Boolean current=false]
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT");
}:
	(
		(
			{
				precedeComposite(elementTypeProvider.getCSSRuleFunc_CSSRuleFuncAction_0ElementType());
				doneComposite();
				associateWithSemanticElement();
			}
		)
		(
			(
				{
					markComposite(elementTypeProvider.getCSSRuleFunc_NameValidIDParserRuleCall_1_0ElementType());
				}
				lv_name_1_0=ruleValidID
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)
		{
			markLeaf(elementTypeProvider.getCSSRuleFunc_LeftParenthesisKeyword_2ElementType());
		}
		otherlv_2='('
		{
			doneLeaf(otherlv_2);
		}
		(
			{
				markLeaf(elementTypeProvider.getCSSRuleFunc_WSTerminalRuleCall_3ElementType());
			}
			this_WS_3=RULE_WS
			{
				doneLeaf(this_WS_3);
			}
		)*
		(
			(
				{
					markComposite(elementTypeProvider.getCSSRuleFunc_ParamsCSSRuleOrParserRuleCall_4_0ElementType());
				}
				lv_params_4_0=ruleCSSRuleOr
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)
		{
			markLeaf(elementTypeProvider.getCSSRuleFunc_RightParenthesisKeyword_5ElementType());
		}
		otherlv_5=')'
		{
			doneLeaf(otherlv_5);
		}
	)
;
finally {
	myHiddenTokenState.restore();
}

//Entry rule entryRuleCSSRuleOr
entryRuleCSSRuleOr returns [Boolean current=false]@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT");
}:
	{ markComposite(elementTypeProvider.getCSSRuleOrElementType()); }
	iv_ruleCSSRuleOr=ruleCSSRuleOr
	{ $current=$iv_ruleCSSRuleOr.current; }
	EOF;
finally {
	myHiddenTokenState.restore();
}

// Rule CSSRuleOr
ruleCSSRuleOr returns [Boolean current=false]
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT");
}:
	(
		{
			markComposite(elementTypeProvider.getCSSRuleOr_CSSRuleXorParserRuleCall_0ElementType());
		}
		this_CSSRuleXor_0=ruleCSSRuleXor
		{
			$current = $this_CSSRuleXor_0.current;
			doneComposite();
		}
		(
			(
				{
					precedeComposite(elementTypeProvider.getCSSRuleOr_CSSRuleOrOrsAction_1_0ElementType());
					doneComposite();
					associateWithSemanticElement();
				}
			)
			(
				{
					markLeaf(elementTypeProvider.getCSSRuleOr_VerticalLineKeyword_1_1_0ElementType());
				}
				otherlv_2='|'
				{
					doneLeaf(otherlv_2);
				}
				(
					(
						{
							markComposite(elementTypeProvider.getCSSRuleOr_OrsCSSRuleXorParserRuleCall_1_1_1_0ElementType());
						}
						lv_ors_3_0=ruleCSSRuleXor
						{
							doneComposite();
							if(!$current) {
								associateWithSemanticElement();
								$current = true;
							}
						}
					)
				)
			)+
		)?
	)
;
finally {
	myHiddenTokenState.restore();
}

//Entry rule entryRuleCSSRuleXor
entryRuleCSSRuleXor returns [Boolean current=false]@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT", "RULE_ML_COMMENT");
}:
	{ markComposite(elementTypeProvider.getCSSRuleXorElementType()); }
	iv_ruleCSSRuleXor=ruleCSSRuleXor
	{ $current=$iv_ruleCSSRuleXor.current; }
	EOF;
finally {
	myHiddenTokenState.restore();
}

// Rule CSSRuleXor
ruleCSSRuleXor returns [Boolean current=false]
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT", "RULE_ML_COMMENT");
}:
	(
		{
			markComposite(elementTypeProvider.getCSSRuleXor_CSSRuleConcatParserRuleCall_0ElementType());
		}
		this_CSSRuleConcat_0=ruleCSSRuleConcat
		{
			$current = $this_CSSRuleConcat_0.current;
			doneComposite();
		}
		(
			(
				{
					precedeComposite(elementTypeProvider.getCSSRuleXor_CSSRuleXorXorsAction_1_0ElementType());
					doneComposite();
					associateWithSemanticElement();
				}
			)
			(
				{
					markLeaf(elementTypeProvider.getCSSRuleXor_VerticalLineVerticalLineKeyword_1_1_0ElementType());
				}
				otherlv_2='||'
				{
					doneLeaf(otherlv_2);
				}
				(
					(
						{
							markComposite(elementTypeProvider.getCSSRuleXor_XorsCSSRuleConcatParserRuleCall_1_1_1_0ElementType());
						}
						lv_xors_3_0=ruleCSSRuleConcat
						{
							doneComposite();
							if(!$current) {
								associateWithSemanticElement();
								$current = true;
							}
						}
					)
				)
			)+
		)?
	)
;
finally {
	myHiddenTokenState.restore();
}

//Entry rule entryRuleCSSRuleConcat
entryRuleCSSRuleConcat returns [Boolean current=false]@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT", "RULE_ML_COMMENT");
}:
	{ markComposite(elementTypeProvider.getCSSRuleConcatElementType()); }
	iv_ruleCSSRuleConcat=ruleCSSRuleConcat
	{ $current=$iv_ruleCSSRuleConcat.current; }
	EOF;
finally {
	myHiddenTokenState.restore();
}

// Rule CSSRuleConcat
ruleCSSRuleConcat returns [Boolean current=false]
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT", "RULE_ML_COMMENT");
}:
	(
		{
			markComposite(elementTypeProvider.getCSSRuleConcat_CSSRuleConcatWithoutSpaceParserRuleCall_0ElementType());
		}
		this_CSSRuleConcatWithoutSpace_0=ruleCSSRuleConcatWithoutSpace
		{
			$current = $this_CSSRuleConcatWithoutSpace_0.current;
			doneComposite();
		}
		(
			(
				{
					precedeComposite(elementTypeProvider.getCSSRuleConcat_CSSRuleConcatConcAction_1_0ElementType());
					doneComposite();
					associateWithSemanticElement();
				}
			)
			(
				(
					{
						markComposite(elementTypeProvider.getCSSRuleConcat_ConcCSSRuleConcatWithoutSpaceParserRuleCall_1_1_0ElementType());
					}
					lv_conc_2_0=ruleCSSRuleConcatWithoutSpace
					{
						doneComposite();
						if(!$current) {
							associateWithSemanticElement();
							$current = true;
						}
					}
				)
			)+
		)?
	)
;
finally {
	myHiddenTokenState.restore();
}

//Entry rule entryRuleCSSRuleConcatWithoutSpace
entryRuleCSSRuleConcatWithoutSpace returns [Boolean current=false]@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT", "RULE_ML_COMMENT");
}:
	{ markComposite(elementTypeProvider.getCSSRuleConcatWithoutSpaceElementType()); }
	iv_ruleCSSRuleConcatWithoutSpace=ruleCSSRuleConcatWithoutSpace
	{ $current=$iv_ruleCSSRuleConcatWithoutSpace.current; }
	EOF;
finally {
	myHiddenTokenState.restore();
}

// Rule CSSRuleConcatWithoutSpace
ruleCSSRuleConcatWithoutSpace returns [Boolean current=false]
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT", "RULE_ML_COMMENT");
}:
	(
		{
			markComposite(elementTypeProvider.getCSSRuleConcatWithoutSpace_CSSRulePostfixParserRuleCall_0ElementType());
		}
		this_CSSRulePostfix_0=ruleCSSRulePostfix
		{
			$current = $this_CSSRulePostfix_0.current;
			doneComposite();
		}
		(
			(
				{
					precedeComposite(elementTypeProvider.getCSSRuleConcatWithoutSpace_CSSRuleConcatWithoutSpaceConcAction_1_0ElementType());
					doneComposite();
					associateWithSemanticElement();
				}
			)
			(
				{
					markLeaf(elementTypeProvider.getCSSRuleConcatWithoutSpace_TildeKeyword_1_1_0ElementType());
				}
				otherlv_2='~'
				{
					doneLeaf(otherlv_2);
				}
				(
					(
						{
							markComposite(elementTypeProvider.getCSSRuleConcatWithoutSpace_ConcCSSRulePostfixParserRuleCall_1_1_1_0ElementType());
						}
						lv_conc_3_0=ruleCSSRulePostfix
						{
							doneComposite();
							if(!$current) {
								associateWithSemanticElement();
								$current = true;
							}
						}
					)
				)
			)+
		)?
	)
;
finally {
	myHiddenTokenState.restore();
}

//Entry rule entryRuleCSSRulePostfix
entryRuleCSSRulePostfix returns [Boolean current=false]@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT", "RULE_ML_COMMENT");
}:
	{ markComposite(elementTypeProvider.getCSSRulePostfixElementType()); }
	iv_ruleCSSRulePostfix=ruleCSSRulePostfix
	{ $current=$iv_ruleCSSRulePostfix.current; }
	EOF;
finally {
	myHiddenTokenState.restore();
}

// Rule CSSRulePostfix
ruleCSSRulePostfix returns [Boolean current=false]
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT", "RULE_ML_COMMENT");
}:
	(
		{
			markComposite(elementTypeProvider.getCSSRulePostfix_CSSRulePrimaryParserRuleCall_0ElementType());
		}
		this_CSSRulePrimary_0=ruleCSSRulePrimary
		{
			$current = $this_CSSRulePrimary_0.current;
			doneComposite();
		}
		(
			(
				{
					precedeComposite(elementTypeProvider.getCSSRulePostfix_CSSRulePostfixRuleAction_1_0ElementType());
					doneComposite();
					associateWithSemanticElement();
				}
			)
			(
				(
					(
						{
							markLeaf(elementTypeProvider.getCSSRulePostfix_CardinalityAsteriskKeyword_1_1_0_0ElementType());
						}
						lv_cardinality_2_1='*'
						{
							doneLeaf(lv_cardinality_2_1);
						}
						{
							if (!$current) {
								associateWithSemanticElement();
								$current = true;
							}
						}
						    |
						{
							markLeaf(elementTypeProvider.getCSSRulePostfix_CardinalityPlusSignKeyword_1_1_0_1ElementType());
						}
						lv_cardinality_2_2='+'
						{
							doneLeaf(lv_cardinality_2_2);
						}
						{
							if (!$current) {
								associateWithSemanticElement();
								$current = true;
							}
						}
						    |
						{
							markLeaf(elementTypeProvider.getCSSRulePostfix_CardinalityQuestionMarkKeyword_1_1_0_2ElementType());
						}
						lv_cardinality_2_3='?'
						{
							doneLeaf(lv_cardinality_2_3);
						}
						{
							if (!$current) {
								associateWithSemanticElement();
								$current = true;
							}
						}
					)
				)
			)
		)?
	)
;
finally {
	myHiddenTokenState.restore();
}

//Entry rule entryRuleCSSRuleBracket
entryRuleCSSRuleBracket returns [Boolean current=false]@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT", "RULE_ML_COMMENT");
}:
	{ markComposite(elementTypeProvider.getCSSRuleBracketElementType()); }
	iv_ruleCSSRuleBracket=ruleCSSRuleBracket
	{ $current=$iv_ruleCSSRuleBracket.current; }
	EOF;
finally {
	myHiddenTokenState.restore();
}

// Rule CSSRuleBracket
ruleCSSRuleBracket returns [Boolean current=false]
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT", "RULE_ML_COMMENT");
}:
	(
		(
			{
				precedeComposite(elementTypeProvider.getCSSRuleBracket_CSSRuleBracketAction_0ElementType());
				doneComposite();
				associateWithSemanticElement();
			}
		)
		{
			markLeaf(elementTypeProvider.getCSSRuleBracket_LeftSquareBracketKeyword_1ElementType());
		}
		otherlv_1='['
		{
			doneLeaf(otherlv_1);
		}
		(
			(
				{
					markComposite(elementTypeProvider.getCSSRuleBracket_InnerCSSRuleOrParserRuleCall_2_0ElementType());
				}
				lv_inner_2_0=ruleCSSRuleOr
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)
		{
			markLeaf(elementTypeProvider.getCSSRuleBracket_RightSquareBracketKeyword_3ElementType());
		}
		otherlv_3=']'
		{
			doneLeaf(otherlv_3);
		}
	)
;
finally {
	myHiddenTokenState.restore();
}

//Entry rule entryRuleCSSRulePrimary
entryRuleCSSRulePrimary returns [Boolean current=false]@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_SL_COMMENT", "RULE_ML_COMMENT");
}:
	{ markComposite(elementTypeProvider.getCSSRulePrimaryElementType()); }
	iv_ruleCSSRulePrimary=ruleCSSRulePrimary
	{ $current=$iv_ruleCSSRulePrimary.current; }
	EOF;
finally {
	myHiddenTokenState.restore();
}

// Rule CSSRulePrimary
ruleCSSRulePrimary returns [Boolean current=false]
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_SL_COMMENT", "RULE_ML_COMMENT");
}:
	(
		{
			markComposite(elementTypeProvider.getCSSRulePrimary_CSSRuleRefParserRuleCall_0ElementType());
		}
		this_CSSRuleRef_0=ruleCSSRuleRef
		{
			$current = $this_CSSRuleRef_0.current;
			doneComposite();
		}
		    |
		{
			markComposite(elementTypeProvider.getCSSRulePrimary_CSSRuleBracketParserRuleCall_1ElementType());
		}
		this_CSSRuleBracket_1=ruleCSSRuleBracket
		{
			$current = $this_CSSRuleBracket_1.current;
			doneComposite();
		}
		    |
		{
			markComposite(elementTypeProvider.getCSSRulePrimary_CSSRuleLiteralParserRuleCall_2ElementType());
		}
		this_CSSRuleLiteral_2=ruleCSSRuleLiteral
		{
			$current = $this_CSSRuleLiteral_2.current;
			doneComposite();
		}
		    |
		{
			markComposite(elementTypeProvider.getCSSRulePrimary_CSSRuleSymbolParserRuleCall_3ElementType());
		}
		this_CSSRuleSymbol_3=ruleCSSRuleSymbol
		{
			$current = $this_CSSRuleSymbol_3.current;
			doneComposite();
		}
		    |
		{
			markComposite(elementTypeProvider.getCSSRulePrimary_CSSBaseTypeParserRuleCall_4ElementType());
		}
		this_CSSBaseType_4=ruleCSSBaseType
		{
			$current = $this_CSSBaseType_4.current;
			doneComposite();
		}
		    |
		{
			markComposite(elementTypeProvider.getCSSRulePrimary_CSSRuleRegexParserRuleCall_5ElementType());
		}
		this_CSSRuleRegex_5=ruleCSSRuleRegex
		{
			$current = $this_CSSRuleRegex_5.current;
			doneComposite();
		}
		    |
		(
			(
				{
					precedeComposite(elementTypeProvider.getCSSRulePrimary_CSSNumLiteralAction_6_0ElementType());
					doneComposite();
					associateWithSemanticElement();
				}
			)
			(
				(
					{
						markLeaf(elementTypeProvider.getCSSRulePrimary_ValueINTTerminalRuleCall_6_1_0ElementType());
					}
					lv_value_7_0=RULE_INT
					{
						if(!$current) {
							associateWithSemanticElement();
							$current = true;
						}
					}
					{
						doneLeaf(lv_value_7_0);
					}
				)
			)
		)
	)
;
finally {
	myHiddenTokenState.restore();
}

//Entry rule entryRuleCSSRuleRegex
entryRuleCSSRuleRegex returns [Boolean current=false]@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT", "RULE_ML_COMMENT");
}:
	{ markComposite(elementTypeProvider.getCSSRuleRegexElementType()); }
	iv_ruleCSSRuleRegex=ruleCSSRuleRegex
	{ $current=$iv_ruleCSSRuleRegex.current; }
	EOF;
finally {
	myHiddenTokenState.restore();
}

// Rule CSSRuleRegex
ruleCSSRuleRegex returns [Boolean current=false]
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT", "RULE_ML_COMMENT");
}:
	(
		(
			{
				precedeComposite(elementTypeProvider.getCSSRuleRegex_CSSRuleRegexAction_0ElementType());
				doneComposite();
				associateWithSemanticElement();
			}
		)
		(
			(
				{
					markLeaf(elementTypeProvider.getCSSRuleRegex_RegexREGEXTerminalRuleCall_1_0ElementType());
				}
				lv_regex_1_0=RULE_REGEX
				{
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
				{
					doneLeaf(lv_regex_1_0);
				}
			)
		)
	)
;
finally {
	myHiddenTokenState.restore();
}

//Entry rule entryRuleCSSRuleLiteral
entryRuleCSSRuleLiteral returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getCSSRuleLiteralElementType()); }
	iv_ruleCSSRuleLiteral=ruleCSSRuleLiteral
	{ $current=$iv_ruleCSSRuleLiteral.current; }
	EOF;

// Rule CSSRuleLiteral
ruleCSSRuleLiteral returns [Boolean current=false]
:
	(
		(
			{
				precedeComposite(elementTypeProvider.getCSSRuleLiteral_CSSRuleLiteralAction_0ElementType());
				doneComposite();
				associateWithSemanticElement();
			}
		)
		(
			(
				(
					{
						markComposite(elementTypeProvider.getCSSRuleLiteral_DokuDokuParserRuleCall_1_0_0ElementType());
					}
					lv_doku_1_0=ruleDoku
					{
						doneComposite();
						if(!$current) {
							associateWithSemanticElement();
							$current = true;
						}
					}
				)
			)
			(
				{
					markLeaf(elementTypeProvider.getCSSRuleLiteral_WSTerminalRuleCall_1_1ElementType());
				}
				this_WS_2=RULE_WS
				{
					doneLeaf(this_WS_2);
				}
			)*
		)?
		(
			(
				{
					markLeaf(elementTypeProvider.getCSSRuleLiteral_ValueIDTerminalRuleCall_2_0ElementType());
				}
				lv_value_3_0=RULE_ID
				{
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
				{
					doneLeaf(lv_value_3_0);
				}
			)
		)
	)
;

//Entry rule entryRuleCSSRuleSymbol
entryRuleCSSRuleSymbol returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getCSSRuleSymbolElementType()); }
	iv_ruleCSSRuleSymbol=ruleCSSRuleSymbol
	{ $current=$iv_ruleCSSRuleSymbol.current; }
	EOF;

// Rule CSSRuleSymbol
ruleCSSRuleSymbol returns [Boolean current=false]
:
	(
		(
			{
				precedeComposite(elementTypeProvider.getCSSRuleSymbol_CSSRuleSymbolAction_0ElementType());
				doneComposite();
				associateWithSemanticElement();
			}
		)
		(
			(
				(
					{
						markComposite(elementTypeProvider.getCSSRuleSymbol_DokuDokuParserRuleCall_1_0_0ElementType());
					}
					lv_doku_1_0=ruleDoku
					{
						doneComposite();
						if(!$current) {
							associateWithSemanticElement();
							$current = true;
						}
					}
				)
			)
			(
				{
					markLeaf(elementTypeProvider.getCSSRuleSymbol_WSTerminalRuleCall_1_1ElementType());
				}
				this_WS_2=RULE_WS
				{
					doneLeaf(this_WS_2);
				}
			)*
		)?
		(
			(
				(
					{
						markLeaf(elementTypeProvider.getCSSRuleSymbol_SymbolCommaKeyword_2_0_0ElementType());
					}
					lv_symbol_3_1=','
					{
						doneLeaf(lv_symbol_3_1);
					}
					{
						if (!$current) {
							associateWithSemanticElement();
							$current = true;
						}
					}
					    |
					{
						markLeaf(elementTypeProvider.getCSSRuleSymbol_SymbolPercentSignKeyword_2_0_1ElementType());
					}
					lv_symbol_3_2='%'
					{
						doneLeaf(lv_symbol_3_2);
					}
					{
						if (!$current) {
							associateWithSemanticElement();
							$current = true;
						}
					}
				)
			)
		)
	)
;

//Entry rule entryRuleCSSDefaultValue
entryRuleCSSDefaultValue returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getCSSDefaultValueElementType()); }
	iv_ruleCSSDefaultValue=ruleCSSDefaultValue
	{ $current=$iv_ruleCSSDefaultValue.current; }
	EOF;

// Rule CSSDefaultValue
ruleCSSDefaultValue returns [Boolean current=false]
:
	(
		(
			(
				{
					precedeComposite(elementTypeProvider.getCSSDefaultValue_CSSDefaultValueAction_0_0ElementType());
					doneComposite();
					associateWithSemanticElement();
				}
			)
			(
				(
					{
						markComposite(elementTypeProvider.getCSSDefaultValue_ValCSSRuleLiteralParserRuleCall_0_1_0ElementType());
					}
					lv_val_1_0=ruleCSSRuleLiteral
					{
						doneComposite();
						if(!$current) {
							associateWithSemanticElement();
							$current = true;
						}
					}
				)
			)
		)
		    |
		(
			(
				{
					markLeaf(elementTypeProvider.getCSSDefaultValue_IvalINTTerminalRuleCall_1_0ElementType());
				}
				lv_ival_2_0=RULE_INT
				{
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
				{
					doneLeaf(lv_ival_2_0);
				}
			)
		)
		    |
		(
			(
				{
					markLeaf(elementTypeProvider.getCSSDefaultValue_DvalDOUBLETerminalRuleCall_2_0ElementType());
				}
				lv_dval_3_0=RULE_DOUBLE
				{
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
				{
					doneLeaf(lv_dval_3_0);
				}
			)
		)
		    |
		(
			(
				{
					markLeaf(elementTypeProvider.getCSSDefaultValue_SvalSTRINGTerminalRuleCall_3_0ElementType());
				}
				lv_sval_4_0=RULE_STRING
				{
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
				{
					doneLeaf(lv_sval_4_0);
				}
			)
		)
	)
;

//Entry rule entryRuleSubstructureSelector
entryRuleSubstructureSelector returns [Boolean current=false]@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}:
	{ markComposite(elementTypeProvider.getSubstructureSelectorElementType()); }
	iv_ruleSubstructureSelector=ruleSubstructureSelector
	{ $current=$iv_ruleSubstructureSelector.current; }
	EOF;
finally {
	myHiddenTokenState.restore();
}

// Rule SubstructureSelector
ruleSubstructureSelector returns [Boolean current=false]
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}:
	(
		(
			{
				precedeComposite(elementTypeProvider.getSubstructureSelector_SubstructureSelectorAction_0ElementType());
				doneComposite();
				associateWithSemanticElement();
			}
		)
		(
			(
				{
					markLeaf(elementTypeProvider.getSubstructureSelector_SelectorNameIDTerminalRuleCall_1_0ElementType());
				}
				lv_selectorName_1_0=RULE_ID
				{
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
				{
					doneLeaf(lv_selectorName_1_0);
				}
			)
		)
		(
			{
				markLeaf(elementTypeProvider.getSubstructureSelector_LeftSquareBracketKeyword_2_0ElementType());
			}
			otherlv_2='['
			{
				doneLeaf(otherlv_2);
			}
			(
				(
					{
						markLeaf(elementTypeProvider.getSubstructureSelector_VarIDTerminalRuleCall_2_1_0ElementType());
					}
					lv_var_3_0=RULE_ID
					{
						if(!$current) {
							associateWithSemanticElement();
							$current = true;
						}
					}
					{
						doneLeaf(lv_var_3_0);
					}
				)
			)
			{
				markLeaf(elementTypeProvider.getSubstructureSelector_RightSquareBracketKeyword_2_2ElementType());
			}
			otherlv_4=']'
			{
				doneLeaf(otherlv_4);
			}
		)?
	)
;
finally {
	myHiddenTokenState.restore();
}

//Entry rule entryRuleSubstructure
entryRuleSubstructure returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getSubstructureElementType()); }
	iv_ruleSubstructure=ruleSubstructure
	{ $current=$iv_ruleSubstructure.current; }
	EOF;

// Rule Substructure
ruleSubstructure returns [Boolean current=false]
:
	(
		(
			(
				{
					markComposite(elementTypeProvider.getSubstructure_DokuDokuParserRuleCall_0_0ElementType());
				}
				lv_doku_0_0=ruleDoku
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)?
		{
			markLeaf(elementTypeProvider.getSubstructure_SubstructureKeyword_1ElementType());
		}
		otherlv_1='substructure'
		{
			doneLeaf(otherlv_1);
		}
		(
			(
				{
					markLeaf(elementTypeProvider.getSubstructure_NameIDTerminalRuleCall_2_0ElementType());
				}
				lv_name_2_0=RULE_ID
				{
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
				{
					doneLeaf(lv_name_2_0);
				}
			)
		)
		{
			markLeaf(elementTypeProvider.getSubstructure_LeftCurlyBracketKeyword_3ElementType());
		}
		otherlv_3='{'
		{
			doneLeaf(otherlv_3);
		}
		(
			(
				{
					markComposite(elementTypeProvider.getSubstructure_ChildsSubstructureStyleclassParserRuleCall_4_0ElementType());
				}
				lv_childs_4_0=ruleSubstructureStyleclass
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)+
		{
			markLeaf(elementTypeProvider.getSubstructure_RightCurlyBracketKeyword_5ElementType());
		}
		otherlv_5='}'
		{
			doneLeaf(otherlv_5);
		}
	)
;

//Entry rule entryRuleSubstructureStyleclass
entryRuleSubstructureStyleclass returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getSubstructureStyleclassElementType()); }
	iv_ruleSubstructureStyleclass=ruleSubstructureStyleclass
	{ $current=$iv_ruleSubstructureStyleclass.current; }
	EOF;

// Rule SubstructureStyleclass
ruleSubstructureStyleclass returns [Boolean current=false]
:
	(
		(
			(
				{
					markComposite(elementTypeProvider.getSubstructureStyleclass_DokuDokuParserRuleCall_0_0ElementType());
				}
				lv_doku_0_0=ruleDoku
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)?
		(
			(
				{
					if (!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
				{
					markComposite(elementTypeProvider.getSubstructureStyleclass_ElementElementDefinitionCrossReference_1_0ElementType());
				}
				ruleQualifiedName
				{
					doneComposite();
				}
			)
		)
		{
			markLeaf(elementTypeProvider.getSubstructureStyleclass_StyleclassKeyword_2ElementType());
		}
		otherlv_2='styleclass'
		{
			doneLeaf(otherlv_2);
		}
		(
			(
				{
					markComposite(elementTypeProvider.getSubstructureStyleclass_SelectorsSubstructureSelectorParserRuleCall_3_0ElementType());
				}
				lv_selectors_3_0=ruleSubstructureSelector
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)+
		(
			{
				markLeaf(elementTypeProvider.getSubstructureStyleclass_LeftCurlyBracketKeyword_4_0ElementType());
			}
			otherlv_4='{'
			{
				doneLeaf(otherlv_4);
			}
			(
				(
					{
						markComposite(elementTypeProvider.getSubstructureStyleclass_ChildsSubstructureStyleclassParserRuleCall_4_1_0ElementType());
					}
					lv_childs_5_0=ruleSubstructureStyleclass
					{
						doneComposite();
						if(!$current) {
							associateWithSemanticElement();
							$current = true;
						}
					}
				)
			)+
			{
				markLeaf(elementTypeProvider.getSubstructureStyleclass_RightCurlyBracketKeyword_4_2ElementType());
			}
			otherlv_6='}'
			{
				doneLeaf(otherlv_6);
			}
		)?
	)
;

RULE_PSEUDO : ':' ~(' ') RULE_ID;

RULE_ID : ('a'..'z'|'A'..'Z'|'_'|'-') ('a'..'z'|'A'..'Z'|'_'|'0'..'9'|'-')*;

RULE_JDOC : '/**' ( options {greedy=false;} : . )*'*/';

RULE_ML_COMMENT : '/*' ~('*') ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_INT : '-'? ('0'..'9')+;

RULE_DOUBLE : '-'? ('0'..'9')* '.' ('0'..'9')+;

RULE_REGEX : '$' ('a'..'z'|'A'..'Z'|'0'..'9'|'-'|','|'.'|'?'|'\''|':'|'"'|'>'|'<'|'/'|'_'|'='|';'|'('|')'|'&'|'!'|'#'|'%'|'*'|'+'|'['|']'|'{'|'}')+ '$';

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
