/*
 * generated by Xtext 2.9.0
 */
parser grammar InternalCssDslParser;

options {
	tokenVocab=InternalCssDslLexer;
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
}

@header {
package org.eclipse.fx.ide.css.ide.contentassist.antlr.internal;
import java.util.Map;
import java.util.HashMap;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.eclipse.fx.ide.css.services.CssDslGrammarAccess;

}
@members {
	private CssDslGrammarAccess grammarAccess;
	private final Map<String, String> tokenNameToValue = new HashMap<String, String>();
	
	{
		tokenNameToValue.put("ExclamationMark", "'!'");
		tokenNameToValue.put("DollarSign", "'\\u0024'");
		tokenNameToValue.put("Ampersand", "'&'");
		tokenNameToValue.put("LeftParenthesis", "'('");
		tokenNameToValue.put("RightParenthesis", "')'");
		tokenNameToValue.put("Asterisk", "'*'");
		tokenNameToValue.put("FullStop", "'.'");
		tokenNameToValue.put("Solidus", "'/'");
		tokenNameToValue.put("Semicolon", "';'");
		tokenNameToValue.put("EqualsSign", "'='");
		tokenNameToValue.put("GreaterThanSign", "'>'");
		tokenNameToValue.put("QuestionMark", "'?'");
		tokenNameToValue.put("CommercialAt", "'@'");
		tokenNameToValue.put("LeftSquareBracket", "'['");
		tokenNameToValue.put("RightSquareBracket", "']'");
		tokenNameToValue.put("LeftCurlyBracket", "'{'");
		tokenNameToValue.put("VerticalLine", "'|'");
		tokenNameToValue.put("RightCurlyBracket", "'}'");
		tokenNameToValue.put("Tilde", "'~'");
		tokenNameToValue.put("DollarSignEqualsSign", "'\\u0024='");
		tokenNameToValue.put("AsteriskEqualsSign", "'*='");
		tokenNameToValue.put("ReverseSolidusSpace", "'\\ '");
		tokenNameToValue.put("ReverseSolidusQuotationMark", "'\\\"'");
		tokenNameToValue.put("ReverseSolidusApostrophe", "'\\\''");
		tokenNameToValue.put("ReverseSolidusLeftParenthesis", "'\\('");
		tokenNameToValue.put("ReverseSolidusRightParenthesis", "'\\)'");
		tokenNameToValue.put("CircumflexAccentEqualsSign", "'^='");
		tokenNameToValue.put("No", "'no'");
		tokenNameToValue.put("Ur", "'ur'");
		tokenNameToValue.put("Not", "'not'");
		tokenNameToValue.put("Url", "'url'");
		tokenNameToValue.put("Not_1", "'not('");
		tokenNameToValue.put("Url_1", "'url('");
		tokenNameToValue.put("Page", "'@page'");
		tokenNameToValue.put("Media", "'@media'");
		tokenNameToValue.put("Import", "'@import'");
		tokenNameToValue.put("Charset", "'@charset'");
		tokenNameToValue.put("FontFace", "'@font-face'");
		tokenNameToValue.put("Keyframes", "'@keyframes'");
	}

	public void setGrammarAccess(CssDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		String result = tokenNameToValue.get(tokenName);
		if (result == null)
			result = tokenName;
		return result;
	}
}

// Entry rule entryRuleStylesheet
entryRuleStylesheet
:
{ before(grammarAccess.getStylesheetRule()); }
	 ruleStylesheet
{ after(grammarAccess.getStylesheetRule()); } 
	 EOF 
;

// Rule Stylesheet
ruleStylesheet 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStylesheetAccess().getGroup()); }
		(rule__Stylesheet__Group__0)
		{ after(grammarAccess.getStylesheetAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCharsetRule
entryRuleCharsetRule
:
{ before(grammarAccess.getCharsetRuleRule()); }
	 ruleCharsetRule
{ after(grammarAccess.getCharsetRuleRule()); } 
	 EOF 
;

// Rule CharsetRule
ruleCharsetRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCharsetRuleAccess().getGroup()); }
		(rule__CharsetRule__Group__0)
		{ after(grammarAccess.getCharsetRuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImportRule
entryRuleImportRule
:
{ before(grammarAccess.getImportRuleRule()); }
	 ruleImportRule
{ after(grammarAccess.getImportRuleRule()); } 
	 EOF 
;

// Rule ImportRule
ruleImportRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImportRuleAccess().getGroup()); }
		(rule__ImportRule__Group__0)
		{ after(grammarAccess.getImportRuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePageRule
entryRulePageRule
:
{ before(grammarAccess.getPageRuleRule()); }
	 rulePageRule
{ after(grammarAccess.getPageRuleRule()); } 
	 EOF 
;

// Rule PageRule
rulePageRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPageRuleAccess().getGroup()); }
		(rule__PageRule__Group__0)
		{ after(grammarAccess.getPageRuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePseudoPage
entryRulePseudoPage
:
{ before(grammarAccess.getPseudoPageRule()); }
	 rulePseudoPage
{ after(grammarAccess.getPseudoPageRule()); } 
	 EOF 
;

// Rule PseudoPage
rulePseudoPage 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPseudoPageAccess().getGroup()); }
		(rule__PseudoPage__Group__0)
		{ after(grammarAccess.getPseudoPageAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMediaRule
entryRuleMediaRule
:
{ before(grammarAccess.getMediaRuleRule()); }
	 ruleMediaRule
{ after(grammarAccess.getMediaRuleRule()); } 
	 EOF 
;

// Rule MediaRule
ruleMediaRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMediaRuleAccess().getGroup()); }
		(rule__MediaRule__Group__0)
		{ after(grammarAccess.getMediaRuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMediaList
entryRuleMediaList
:
{ before(grammarAccess.getMediaListRule()); }
	 ruleMediaList
{ after(grammarAccess.getMediaListRule()); } 
	 EOF 
;

// Rule MediaList
ruleMediaList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMediaListAccess().getGroup()); }
		(rule__MediaList__Group__0)
		{ after(grammarAccess.getMediaListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMedia
entryRuleMedia
:
{ before(grammarAccess.getMediaRule()); }
	 ruleMedia
{ after(grammarAccess.getMediaRule()); } 
	 EOF 
;

// Rule Media
ruleMedia 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMediaAccess().getNameAssignment()); }
		(rule__Media__NameAssignment)
		{ after(grammarAccess.getMediaAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFontFaceRule
entryRuleFontFaceRule
:
{ before(grammarAccess.getFontFaceRuleRule()); }
	 ruleFontFaceRule
{ after(grammarAccess.getFontFaceRuleRule()); } 
	 EOF 
;

// Rule FontFaceRule
ruleFontFaceRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFontFaceRuleAccess().getGroup()); }
		(rule__FontFaceRule__Group__0)
		{ after(grammarAccess.getFontFaceRuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleKeyframesRule
entryRuleKeyframesRule
:
{ before(grammarAccess.getKeyframesRuleRule()); }
	 ruleKeyframesRule
{ after(grammarAccess.getKeyframesRuleRule()); } 
	 EOF 
;

// Rule KeyframesRule
ruleKeyframesRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getKeyframesRuleAccess().getGroup()); }
		(rule__KeyframesRule__Group__0)
		{ after(grammarAccess.getKeyframesRuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleKeyframeSelector
entryRuleKeyframeSelector
:
{ before(grammarAccess.getKeyframeSelectorRule()); }
	 ruleKeyframeSelector
{ after(grammarAccess.getKeyframeSelectorRule()); } 
	 EOF 
;

// Rule KeyframeSelector
ruleKeyframeSelector 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getKeyframeSelectorAccess().getGroup()); }
		(rule__KeyframeSelector__Group__0)
		{ after(grammarAccess.getKeyframeSelectorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRuleset
entryRuleRuleset
@init { 
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_ML_COMMENT");
}
:
{ before(grammarAccess.getRulesetRule()); }
	 ruleRuleset
{ after(grammarAccess.getRulesetRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Ruleset
ruleRuleset 
	@init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_ML_COMMENT");
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRulesetAccess().getGroup()); }
		(rule__Ruleset__Group__0)
		{ after(grammarAccess.getRulesetAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}

// Entry rule entryRuleCssDeclaration
entryRuleCssDeclaration
@init { 
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT");
}
:
{ before(grammarAccess.getCssDeclarationRule()); }
	 ruleCssDeclaration
{ after(grammarAccess.getCssDeclarationRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule CssDeclaration
ruleCssDeclaration 
	@init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT");
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCssDeclarationAccess().getGroup()); }
		(rule__CssDeclaration__Group__0)
		{ after(grammarAccess.getCssDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}

// Entry rule entryRuleSelector
entryRuleSelector
@init { 
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT");
}
:
{ before(grammarAccess.getSelectorRule()); }
	 ruleSelector
{ after(grammarAccess.getSelectorRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Selector
ruleSelector 
	@init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT");
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSelectorAccess().getGroup()); }
		(rule__Selector__Group__0)
		{ after(grammarAccess.getSelectorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}

// Entry rule entryRuleSimpleSelectorForNegation
entryRuleSimpleSelectorForNegation
:
{ before(grammarAccess.getSimpleSelectorForNegationRule()); }
	 ruleSimpleSelectorForNegation
{ after(grammarAccess.getSimpleSelectorForNegationRule()); } 
	 EOF 
;

// Rule SimpleSelectorForNegation
ruleSimpleSelectorForNegation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSimpleSelectorForNegationAccess().getAlternatives()); }
		(rule__SimpleSelectorForNegation__Alternatives)
		{ after(grammarAccess.getSimpleSelectorForNegationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSubSelectorForNegation
entryRuleSubSelectorForNegation
:
{ before(grammarAccess.getSubSelectorForNegationRule()); }
	 ruleSubSelectorForNegation
{ after(grammarAccess.getSubSelectorForNegationRule()); } 
	 EOF 
;

// Rule SubSelectorForNegation
ruleSubSelectorForNegation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSubSelectorForNegationAccess().getAlternatives()); }
		(rule__SubSelectorForNegation__Alternatives)
		{ after(grammarAccess.getSubSelectorForNegationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSimpleSelector
entryRuleSimpleSelector
@init { 
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
:
{ before(grammarAccess.getSimpleSelectorRule()); }
	 ruleSimpleSelector
{ after(grammarAccess.getSimpleSelectorRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule SimpleSelector
ruleSimpleSelector 
	@init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSimpleSelectorAccess().getAlternatives()); }
		(rule__SimpleSelector__Alternatives)
		{ after(grammarAccess.getSimpleSelectorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}

// Entry rule entryRuleSubSelector
entryRuleSubSelector
:
{ before(grammarAccess.getSubSelectorRule()); }
	 ruleSubSelector
{ after(grammarAccess.getSubSelectorRule()); } 
	 EOF 
;

// Rule SubSelector
ruleSubSelector 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSubSelectorAccess().getAlternatives()); }
		(rule__SubSelector__Alternatives)
		{ after(grammarAccess.getSubSelectorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAttributeSelector
entryRuleAttributeSelector
:
{ before(grammarAccess.getAttributeSelectorRule()); }
	 ruleAttributeSelector
{ after(grammarAccess.getAttributeSelectorRule()); } 
	 EOF 
;

// Rule AttributeSelector
ruleAttributeSelector 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAttributeSelectorAccess().getGroup()); }
		(rule__AttributeSelector__Group__0)
		{ after(grammarAccess.getAttributeSelectorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleClassSelector
entryRuleClassSelector
:
{ before(grammarAccess.getClassSelectorRule()); }
	 ruleClassSelector
{ after(grammarAccess.getClassSelectorRule()); } 
	 EOF 
;

// Rule ClassSelector
ruleClassSelector 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getClassSelectorAccess().getGroup()); }
		(rule__ClassSelector__Group__0)
		{ after(grammarAccess.getClassSelectorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleElementSelector
entryRuleElementSelector
:
{ before(grammarAccess.getElementSelectorRule()); }
	 ruleElementSelector
{ after(grammarAccess.getElementSelectorRule()); } 
	 EOF 
;

// Rule ElementSelector
ruleElementSelector 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElementSelectorAccess().getGroup()); }
		(rule__ElementSelector__Group__0)
		{ after(grammarAccess.getElementSelectorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUniversalSelector
entryRuleUniversalSelector
:
{ before(grammarAccess.getUniversalSelectorRule()); }
	 ruleUniversalSelector
{ after(grammarAccess.getUniversalSelectorRule()); } 
	 EOF 
;

// Rule UniversalSelector
ruleUniversalSelector 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUniversalSelectorAccess().getGroup()); }
		(rule__UniversalSelector__Group__0)
		{ after(grammarAccess.getUniversalSelectorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIdSelector
entryRuleIdSelector
:
{ before(grammarAccess.getIdSelectorRule()); }
	 ruleIdSelector
{ after(grammarAccess.getIdSelectorRule()); } 
	 EOF 
;

// Rule IdSelector
ruleIdSelector 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIdSelectorAccess().getGroup()); }
		(rule__IdSelector__Group__0)
		{ after(grammarAccess.getIdSelectorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCssNamespacePrefix
entryRuleCssNamespacePrefix
:
{ before(grammarAccess.getCssNamespacePrefixRule()); }
	 ruleCssNamespacePrefix
{ after(grammarAccess.getCssNamespacePrefixRule()); } 
	 EOF 
;

// Rule CssNamespacePrefix
ruleCssNamespacePrefix 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCssNamespacePrefixAccess().getGroup()); }
		(rule__CssNamespacePrefix__Group__0)
		{ after(grammarAccess.getCssNamespacePrefixAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCssProperty
entryRuleCssProperty
:
{ before(grammarAccess.getCssPropertyRule()); }
	 ruleCssProperty
{ after(grammarAccess.getCssPropertyRule()); } 
	 EOF 
;

// Rule CssProperty
ruleCssProperty 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCssPropertyAccess().getGroup()); }
		(rule__CssProperty__Group__0)
		{ after(grammarAccess.getCssPropertyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleValidPropertyIdent
entryRuleValidPropertyIdent
:
{ before(grammarAccess.getValidPropertyIdentRule()); }
	 ruleValidPropertyIdent
{ after(grammarAccess.getValidPropertyIdentRule()); } 
	 EOF 
;

// Rule ValidPropertyIdent
ruleValidPropertyIdent 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getValidPropertyIdentAccess().getIdentifierParserRuleCall()); }
		ruleIdentifier
		{ after(grammarAccess.getValidPropertyIdentAccess().getIdentifierParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePseudoClassOrFunc
entryRulePseudoClassOrFunc
:
{ before(grammarAccess.getPseudoClassOrFuncRule()); }
	 rulePseudoClassOrFunc
{ after(grammarAccess.getPseudoClassOrFuncRule()); } 
	 EOF 
;

// Rule PseudoClassOrFunc
rulePseudoClassOrFunc 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPseudoClassOrFuncAccess().getAlternatives()); }
		(rule__PseudoClassOrFunc__Alternatives)
		{ after(grammarAccess.getPseudoClassOrFuncAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePseudoClass
entryRulePseudoClass
:
{ before(grammarAccess.getPseudoClassRule()); }
	 rulePseudoClass
{ after(grammarAccess.getPseudoClassRule()); } 
	 EOF 
;

// Rule PseudoClass
rulePseudoClass 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPseudoClassAccess().getGroup()); }
		(rule__PseudoClass__Group__0)
		{ after(grammarAccess.getPseudoClassAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePseudoClassName
entryRulePseudoClassName
:
{ before(grammarAccess.getPseudoClassNameRule()); }
	 rulePseudoClassName
{ after(grammarAccess.getPseudoClassNameRule()); } 
	 EOF 
;

// Rule PseudoClassName
rulePseudoClassName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPseudoClassNameAccess().getIdentifierParserRuleCall()); }
		ruleIdentifier
		{ after(grammarAccess.getPseudoClassNameAccess().getIdentifierParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePseudoClassFunction
entryRulePseudoClassFunction
:
{ before(grammarAccess.getPseudoClassFunctionRule()); }
	 rulePseudoClassFunction
{ after(grammarAccess.getPseudoClassFunctionRule()); } 
	 EOF 
;

// Rule PseudoClassFunction
rulePseudoClassFunction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPseudoClassFunctionAccess().getAlternatives()); }
		(rule__PseudoClassFunction__Alternatives)
		{ after(grammarAccess.getPseudoClassFunctionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNotFunctionCall
entryRuleNotFunctionCall
@init { 
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
:
{ before(grammarAccess.getNotFunctionCallRule()); }
	 ruleNotFunctionCall
{ after(grammarAccess.getNotFunctionCallRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule NotFunctionCall
ruleNotFunctionCall 
	@init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNotFunctionCallAccess().getGroup()); }
		(rule__NotFunctionCall__Group__0)
		{ after(grammarAccess.getNotFunctionCallAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}

// Entry rule entryRuleCombinator
entryRuleCombinator
:
{ before(grammarAccess.getCombinatorRule()); }
	 ruleCombinator
{ after(grammarAccess.getCombinatorRule()); } 
	 EOF 
;

// Rule Combinator
ruleCombinator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCombinatorAccess().getAlternatives()); }
		(rule__Combinator__Alternatives)
		{ after(grammarAccess.getCombinatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSymbolTok
entryRuleSymbolTok
:
{ before(grammarAccess.getSymbolTokRule()); }
	 ruleSymbolTok
{ after(grammarAccess.getSymbolTokRule()); } 
	 EOF 
;

// Rule SymbolTok
ruleSymbolTok 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSymbolTokAccess().getGroup()); }
		(rule__SymbolTok__Group__0)
		{ after(grammarAccess.getSymbolTokAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleWSTok
entryRuleWSTok
@init { 
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
:
{ before(grammarAccess.getWSTokRule()); }
	 ruleWSTok
{ after(grammarAccess.getWSTokRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule WSTok
ruleWSTok 
	@init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWSTokAccess().getGroup()); }
		(rule__WSTok__Group__0)
		{ after(grammarAccess.getWSTokAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}

// Entry rule entryRuleStringTok
entryRuleStringTok
:
{ before(grammarAccess.getStringTokRule()); }
	 ruleStringTok
{ after(grammarAccess.getStringTokRule()); } 
	 EOF 
;

// Rule StringTok
ruleStringTok 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStringTokAccess().getGroup()); }
		(rule__StringTok__Group__0)
		{ after(grammarAccess.getStringTokAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNumberTok
entryRuleNumberTok
@init { 
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
:
{ before(grammarAccess.getNumberTokRule()); }
	 ruleNumberTok
{ after(grammarAccess.getNumberTokRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule NumberTok
ruleNumberTok 
	@init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNumberTokAccess().getGroup()); }
		(rule__NumberTok__Group__0)
		{ after(grammarAccess.getNumberTokAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}

// Entry rule entryRuleUrlTok
entryRuleUrlTok
:
{ before(grammarAccess.getUrlTokRule()); }
	 ruleUrlTok
{ after(grammarAccess.getUrlTokRule()); } 
	 EOF 
;

// Rule UrlTok
ruleUrlTok 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUrlTokAccess().getGroup()); }
		(rule__UrlTok__Group__0)
		{ after(grammarAccess.getUrlTokAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleColorTok
entryRuleColorTok
@init { 
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
:
{ before(grammarAccess.getColorTokRule()); }
	 ruleColorTok
{ after(grammarAccess.getColorTokRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule ColorTok
ruleColorTok 
	@init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getColorTokAccess().getGroup()); }
		(rule__ColorTok__Group__0)
		{ after(grammarAccess.getColorTokAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}

// Entry rule entryRuleIdentifierOrFuncTok
entryRuleIdentifierOrFuncTok
@init { 
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
:
{ before(grammarAccess.getIdentifierOrFuncTokRule()); }
	 ruleIdentifierOrFuncTok
{ after(grammarAccess.getIdentifierOrFuncTokRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule IdentifierOrFuncTok
ruleIdentifierOrFuncTok 
	@init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIdentifierOrFuncTokAccess().getGroup()); }
		(rule__IdentifierOrFuncTok__Group__0)
		{ after(grammarAccess.getIdentifierOrFuncTokAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}

// Entry rule entryRuleCssTok
entryRuleCssTok
@init { 
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
:
{ before(grammarAccess.getCssTokRule()); }
	 ruleCssTok
{ after(grammarAccess.getCssTokRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule CssTok
ruleCssTok 
	@init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCssTokAccess().getAlternatives()); }
		(rule__CssTok__Alternatives)
		{ after(grammarAccess.getCssTokAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}

// Entry rule entryRuleURLType
entryRuleURLType
@init { 
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
:
{ before(grammarAccess.getURLTypeRule()); }
	 ruleURLType
{ after(grammarAccess.getURLTypeRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule URLType
ruleURLType 
	@init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getURLTypeAccess().getGroup()); }
		(rule__URLType__Group__0)
		{ after(grammarAccess.getURLTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}

// Entry rule entryRuleValidURLSymbol
entryRuleValidURLSymbol
:
{ before(grammarAccess.getValidURLSymbolRule()); }
	 ruleValidURLSymbol
{ after(grammarAccess.getValidURLSymbolRule()); } 
	 EOF 
;

// Rule ValidURLSymbol
ruleValidURLSymbol 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getValidURLSymbolAccess().getAlternatives()); }
		(rule__ValidURLSymbol__Alternatives)
		{ after(grammarAccess.getValidURLSymbolAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleKeywordHack
entryRuleKeywordHack
:
{ before(grammarAccess.getKeywordHackRule()); }
	 ruleKeywordHack
{ after(grammarAccess.getKeywordHackRule()); } 
	 EOF 
;

// Rule KeywordHack
ruleKeywordHack 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getKeywordHackAccess().getAlternatives()); }
		(rule__KeywordHack__Alternatives)
		{ after(grammarAccess.getKeywordHackAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleValidURL
entryRuleValidURL
@init { 
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
:
{ before(grammarAccess.getValidURLRule()); }
	 ruleValidURL
{ after(grammarAccess.getValidURLRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule ValidURL
ruleValidURL 
	@init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getValidURLAccess().getAlternatives()); }
		(rule__ValidURL__Alternatives)
		{ after(grammarAccess.getValidURLAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}

// Entry rule entryRuleIdentifier
entryRuleIdentifier
@init { 
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
:
{ before(grammarAccess.getIdentifierRule()); }
	 ruleIdentifier
{ after(grammarAccess.getIdentifierRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Identifier
ruleIdentifier 
	@init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIdentifierAccess().getGroup()); }
		(rule__Identifier__Group__0)
		{ after(grammarAccess.getIdentifierAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}

// Entry rule entryRuleNum
entryRuleNum
@init { 
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
:
{ before(grammarAccess.getNumRule()); }
	 ruleNum
{ after(grammarAccess.getNumRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Num
ruleNum 
	@init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNumAccess().getGroup()); }
		(rule__Num__Group__0)
		{ after(grammarAccess.getNumAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}

// Entry rule entryRuleHex
entryRuleHex
:
{ before(grammarAccess.getHexRule()); }
	 ruleHex
{ after(grammarAccess.getHexRule()); } 
	 EOF 
;

// Rule Hex
ruleHex 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getHexAccess().getGroup()); }
		(rule__Hex__Group__0)
		{ after(grammarAccess.getHexAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Stylesheet__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStylesheetAccess().getRulesetAssignment_2_0()); }
		(rule__Stylesheet__RulesetAssignment_2_0)
		{ after(grammarAccess.getStylesheetAccess().getRulesetAssignment_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getStylesheetAccess().getMediaAssignment_2_1()); }
		(rule__Stylesheet__MediaAssignment_2_1)
		{ after(grammarAccess.getStylesheetAccess().getMediaAssignment_2_1()); }
	)
	|
	(
		{ before(grammarAccess.getStylesheetAccess().getPageAssignment_2_2()); }
		(rule__Stylesheet__PageAssignment_2_2)
		{ after(grammarAccess.getStylesheetAccess().getPageAssignment_2_2()); }
	)
	|
	(
		{ before(grammarAccess.getStylesheetAccess().getFont_faceAssignment_2_3()); }
		(rule__Stylesheet__Font_faceAssignment_2_3)
		{ after(grammarAccess.getStylesheetAccess().getFont_faceAssignment_2_3()); }
	)
	|
	(
		{ before(grammarAccess.getStylesheetAccess().getKeyframesAssignment_2_4()); }
		(rule__Stylesheet__KeyframesAssignment_2_4)
		{ after(grammarAccess.getStylesheetAccess().getKeyframesAssignment_2_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportRule__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportRuleAccess().getValueAssignment_1_0()); }
		(rule__ImportRule__ValueAssignment_1_0)
		{ after(grammarAccess.getImportRuleAccess().getValueAssignment_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getImportRuleAccess().getGroup_1_1()); }
		(rule__ImportRule__Group_1_1__0)
		{ after(grammarAccess.getImportRuleAccess().getGroup_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyframeSelector__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getKeyframeSelectorAccess().getTypeAssignment_0_0()); }
		(rule__KeyframeSelector__TypeAssignment_0_0)
		{ after(grammarAccess.getKeyframeSelectorAccess().getTypeAssignment_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getKeyframeSelectorAccess().getGroup_0_1()); }
		(rule__KeyframeSelector__Group_0_1__0)
		{ after(grammarAccess.getKeyframeSelectorAccess().getGroup_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectorAccess().getGroup_1_0()); }
		(rule__Selector__Group_1_0__0)
		{ after(grammarAccess.getSelectorAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getSelectorAccess().getGroup_1_1()); }
		(rule__Selector__Group_1_1__0)
		{ after(grammarAccess.getSelectorAccess().getGroup_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSelectorForNegation__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleSelectorForNegationAccess().getGroup_0()); }
		(rule__SimpleSelectorForNegation__Group_0__0)
		{ after(grammarAccess.getSimpleSelectorForNegationAccess().getGroup_0()); }
	)
	|
	(
		(
			{ before(grammarAccess.getSimpleSelectorForNegationAccess().getSubSelectorsAssignment_1()); }
			(rule__SimpleSelectorForNegation__SubSelectorsAssignment_1)
			{ after(grammarAccess.getSimpleSelectorForNegationAccess().getSubSelectorsAssignment_1()); }
		)
		(
			{ before(grammarAccess.getSimpleSelectorForNegationAccess().getSubSelectorsAssignment_1()); }
			(rule__SimpleSelectorForNegation__SubSelectorsAssignment_1)*
			{ after(grammarAccess.getSimpleSelectorForNegationAccess().getSubSelectorsAssignment_1()); }
		)
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSelectorForNegation__Alternatives_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleSelectorForNegationAccess().getElementAssignment_0_0_0()); }
		(rule__SimpleSelectorForNegation__ElementAssignment_0_0_0)
		{ after(grammarAccess.getSimpleSelectorForNegationAccess().getElementAssignment_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getSimpleSelectorForNegationAccess().getUniversalAssignment_0_0_1()); }
		(rule__SimpleSelectorForNegation__UniversalAssignment_0_0_1)
		{ after(grammarAccess.getSimpleSelectorForNegationAccess().getUniversalAssignment_0_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubSelectorForNegation__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubSelectorForNegationAccess().getIdSelectorParserRuleCall_0()); }
		ruleIdSelector
		{ after(grammarAccess.getSubSelectorForNegationAccess().getIdSelectorParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getSubSelectorForNegationAccess().getClassSelectorParserRuleCall_1()); }
		ruleClassSelector
		{ after(grammarAccess.getSubSelectorForNegationAccess().getClassSelectorParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getSubSelectorForNegationAccess().getAttributeSelectorParserRuleCall_2()); }
		ruleAttributeSelector
		{ after(grammarAccess.getSubSelectorForNegationAccess().getAttributeSelectorParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getSubSelectorForNegationAccess().getPseudoClassParserRuleCall_3()); }
		rulePseudoClass
		{ after(grammarAccess.getSubSelectorForNegationAccess().getPseudoClassParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSelector__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleSelectorAccess().getGroup_0()); }
		(rule__SimpleSelector__Group_0__0)
		{ after(grammarAccess.getSimpleSelectorAccess().getGroup_0()); }
	)
	|
	(
		(
			{ before(grammarAccess.getSimpleSelectorAccess().getSubSelectorsAssignment_1()); }
			(rule__SimpleSelector__SubSelectorsAssignment_1)
			{ after(grammarAccess.getSimpleSelectorAccess().getSubSelectorsAssignment_1()); }
		)
		(
			{ before(grammarAccess.getSimpleSelectorAccess().getSubSelectorsAssignment_1()); }
			(rule__SimpleSelector__SubSelectorsAssignment_1)*
			{ after(grammarAccess.getSimpleSelectorAccess().getSubSelectorsAssignment_1()); }
		)
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSelector__Alternatives_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleSelectorAccess().getElementAssignment_0_0_0()); }
		(rule__SimpleSelector__ElementAssignment_0_0_0)
		{ after(grammarAccess.getSimpleSelectorAccess().getElementAssignment_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getSimpleSelectorAccess().getUniversalAssignment_0_0_1()); }
		(rule__SimpleSelector__UniversalAssignment_0_0_1)
		{ after(grammarAccess.getSimpleSelectorAccess().getUniversalAssignment_0_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubSelector__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubSelectorAccess().getIdSelectorParserRuleCall_0()); }
		ruleIdSelector
		{ after(grammarAccess.getSubSelectorAccess().getIdSelectorParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getSubSelectorAccess().getClassSelectorParserRuleCall_1()); }
		ruleClassSelector
		{ after(grammarAccess.getSubSelectorAccess().getClassSelectorParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getSubSelectorAccess().getAttributeSelectorParserRuleCall_2()); }
		ruleAttributeSelector
		{ after(grammarAccess.getSubSelectorAccess().getAttributeSelectorParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getSubSelectorAccess().getPseudoClassOrFuncParserRuleCall_3()); }
		rulePseudoClassOrFunc
		{ after(grammarAccess.getSubSelectorAccess().getPseudoClassOrFuncParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeSelector__OpAlternatives_3_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeSelectorAccess().getOpCircumflexAccentEqualsSignKeyword_3_0_0_0()); }
		CircumflexAccentEqualsSign
		{ after(grammarAccess.getAttributeSelectorAccess().getOpCircumflexAccentEqualsSignKeyword_3_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getAttributeSelectorAccess().getOpDollarSignEqualsSignKeyword_3_0_0_1()); }
		DollarSignEqualsSign
		{ after(grammarAccess.getAttributeSelectorAccess().getOpDollarSignEqualsSignKeyword_3_0_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getAttributeSelectorAccess().getOpAsteriskEqualsSignKeyword_3_0_0_2()); }
		AsteriskEqualsSign
		{ after(grammarAccess.getAttributeSelectorAccess().getOpAsteriskEqualsSignKeyword_3_0_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getAttributeSelectorAccess().getOpEqualsSignKeyword_3_0_0_3()); }
		EqualsSign
		{ after(grammarAccess.getAttributeSelectorAccess().getOpEqualsSignKeyword_3_0_0_3()); }
	)
	|
	(
		{ before(grammarAccess.getAttributeSelectorAccess().getOpINCLUDESTerminalRuleCall_3_0_0_4()); }
		RULE_INCLUDES
		{ after(grammarAccess.getAttributeSelectorAccess().getOpINCLUDESTerminalRuleCall_3_0_0_4()); }
	)
	|
	(
		{ before(grammarAccess.getAttributeSelectorAccess().getOpDASHMATCHTerminalRuleCall_3_0_0_5()); }
		RULE_DASHMATCH
		{ after(grammarAccess.getAttributeSelectorAccess().getOpDASHMATCHTerminalRuleCall_3_0_0_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeSelector__ValueAlternatives_3_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeSelectorAccess().getValueIdentifierParserRuleCall_3_1_0_0()); }
		ruleIdentifier
		{ after(grammarAccess.getAttributeSelectorAccess().getValueIdentifierParserRuleCall_3_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getAttributeSelectorAccess().getValueCSSSTRINGTerminalRuleCall_3_1_0_1()); }
		RULE_CSSSTRING
		{ after(grammarAccess.getAttributeSelectorAccess().getValueCSSSTRINGTerminalRuleCall_3_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CssNamespacePrefix__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCssNamespacePrefixAccess().getIdentifierParserRuleCall_0_0()); }
		ruleIdentifier
		{ after(grammarAccess.getCssNamespacePrefixAccess().getIdentifierParserRuleCall_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getCssNamespacePrefixAccess().getAsteriskKeyword_0_1()); }
		Asterisk
		{ after(grammarAccess.getCssNamespacePrefixAccess().getAsteriskKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PseudoClassOrFunc__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPseudoClassOrFuncAccess().getPseudoClassParserRuleCall_0()); }
		rulePseudoClass
		{ after(grammarAccess.getPseudoClassOrFuncAccess().getPseudoClassParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getPseudoClassOrFuncAccess().getPseudoClassFunctionParserRuleCall_1()); }
		rulePseudoClassFunction
		{ after(grammarAccess.getPseudoClassOrFuncAccess().getPseudoClassFunctionParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PseudoClassFunction__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPseudoClassFunctionAccess().getGroup_0()); }
		(rule__PseudoClassFunction__Group_0__0)
		{ after(grammarAccess.getPseudoClassFunctionAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getPseudoClassFunctionAccess().getGroup_1()); }
		(rule__PseudoClassFunction__Group_1__0)
		{ after(grammarAccess.getPseudoClassFunctionAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Combinator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCombinatorAccess().getPLUSTerminalRuleCall_0()); }
		RULE_PLUS
		{ after(grammarAccess.getCombinatorAccess().getPLUSTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getCombinatorAccess().getGreaterThanSignKeyword_1()); }
		GreaterThanSign
		{ after(grammarAccess.getCombinatorAccess().getGreaterThanSignKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getCombinatorAccess().getTildeKeyword_2()); }
		Tilde
		{ after(grammarAccess.getCombinatorAccess().getTildeKeyword_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolTok__SymbolAlternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSymbolTokAccess().getSymbolCOMMATerminalRuleCall_1_0_0()); }
		RULE_COMMA
		{ after(grammarAccess.getSymbolTokAccess().getSymbolCOMMATerminalRuleCall_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getSymbolTokAccess().getSymbolPERCENTTerminalRuleCall_1_0_1()); }
		RULE_PERCENT
		{ after(grammarAccess.getSymbolTokAccess().getSymbolPERCENTTerminalRuleCall_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CssTok__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCssTokAccess().getIdentifierOrFuncTokParserRuleCall_0()); }
		ruleIdentifierOrFuncTok
		{ after(grammarAccess.getCssTokAccess().getIdentifierOrFuncTokParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getCssTokAccess().getSymbolTokParserRuleCall_1()); }
		ruleSymbolTok
		{ after(grammarAccess.getCssTokAccess().getSymbolTokParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getCssTokAccess().getWSTokParserRuleCall_2()); }
		ruleWSTok
		{ after(grammarAccess.getCssTokAccess().getWSTokParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getCssTokAccess().getStringTokParserRuleCall_3()); }
		ruleStringTok
		{ after(grammarAccess.getCssTokAccess().getStringTokParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getCssTokAccess().getNumberTokParserRuleCall_4()); }
		ruleNumberTok
		{ after(grammarAccess.getCssTokAccess().getNumberTokParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getCssTokAccess().getUrlTokParserRuleCall_5()); }
		ruleUrlTok
		{ after(grammarAccess.getCssTokAccess().getUrlTokParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getCssTokAccess().getColorTokParserRuleCall_6()); }
		ruleColorTok
		{ after(grammarAccess.getCssTokAccess().getColorTokParserRuleCall_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValidURLSymbol__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValidURLSymbolAccess().getDASHTerminalRuleCall_0()); }
		RULE_DASH
		{ after(grammarAccess.getValidURLSymbolAccess().getDASHTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getValidURLSymbolAccess().getFullStopKeyword_1()); }
		FullStop
		{ after(grammarAccess.getValidURLSymbolAccess().getFullStopKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getValidURLSymbolAccess().getUNDERSCORETerminalRuleCall_2()); }
		RULE_UNDERSCORE
		{ after(grammarAccess.getValidURLSymbolAccess().getUNDERSCORETerminalRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getValidURLSymbolAccess().getTildeKeyword_3()); }
		Tilde
		{ after(grammarAccess.getValidURLSymbolAccess().getTildeKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getValidURLSymbolAccess().getCOLONTerminalRuleCall_4()); }
		RULE_COLON
		{ after(grammarAccess.getValidURLSymbolAccess().getCOLONTerminalRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getValidURLSymbolAccess().getSolidusKeyword_5()); }
		Solidus
		{ after(grammarAccess.getValidURLSymbolAccess().getSolidusKeyword_5()); }
	)
	|
	(
		{ before(grammarAccess.getValidURLSymbolAccess().getQuestionMarkKeyword_6()); }
		QuestionMark
		{ after(grammarAccess.getValidURLSymbolAccess().getQuestionMarkKeyword_6()); }
	)
	|
	(
		{ before(grammarAccess.getValidURLSymbolAccess().getHASHMARKTerminalRuleCall_7()); }
		RULE_HASHMARK
		{ after(grammarAccess.getValidURLSymbolAccess().getHASHMARKTerminalRuleCall_7()); }
	)
	|
	(
		{ before(grammarAccess.getValidURLSymbolAccess().getLeftSquareBracketKeyword_8()); }
		LeftSquareBracket
		{ after(grammarAccess.getValidURLSymbolAccess().getLeftSquareBracketKeyword_8()); }
	)
	|
	(
		{ before(grammarAccess.getValidURLSymbolAccess().getRightSquareBracketKeyword_9()); }
		RightSquareBracket
		{ after(grammarAccess.getValidURLSymbolAccess().getRightSquareBracketKeyword_9()); }
	)
	|
	(
		{ before(grammarAccess.getValidURLSymbolAccess().getCommercialAtKeyword_10()); }
		CommercialAt
		{ after(grammarAccess.getValidURLSymbolAccess().getCommercialAtKeyword_10()); }
	)
	|
	(
		{ before(grammarAccess.getValidURLSymbolAccess().getExclamationMarkKeyword_11()); }
		ExclamationMark
		{ after(grammarAccess.getValidURLSymbolAccess().getExclamationMarkKeyword_11()); }
	)
	|
	(
		{ before(grammarAccess.getValidURLSymbolAccess().getDollarSignKeyword_12()); }
		DollarSign
		{ after(grammarAccess.getValidURLSymbolAccess().getDollarSignKeyword_12()); }
	)
	|
	(
		{ before(grammarAccess.getValidURLSymbolAccess().getAmpersandKeyword_13()); }
		Ampersand
		{ after(grammarAccess.getValidURLSymbolAccess().getAmpersandKeyword_13()); }
	)
	|
	(
		{ before(grammarAccess.getValidURLSymbolAccess().getAsteriskKeyword_14()); }
		Asterisk
		{ after(grammarAccess.getValidURLSymbolAccess().getAsteriskKeyword_14()); }
	)
	|
	(
		{ before(grammarAccess.getValidURLSymbolAccess().getPLUSTerminalRuleCall_15()); }
		RULE_PLUS
		{ after(grammarAccess.getValidURLSymbolAccess().getPLUSTerminalRuleCall_15()); }
	)
	|
	(
		{ before(grammarAccess.getValidURLSymbolAccess().getCOMMATerminalRuleCall_16()); }
		RULE_COMMA
		{ after(grammarAccess.getValidURLSymbolAccess().getCOMMATerminalRuleCall_16()); }
	)
	|
	(
		{ before(grammarAccess.getValidURLSymbolAccess().getSemicolonKeyword_17()); }
		Semicolon
		{ after(grammarAccess.getValidURLSymbolAccess().getSemicolonKeyword_17()); }
	)
	|
	(
		{ before(grammarAccess.getValidURLSymbolAccess().getGroup_18()); }
		(rule__ValidURLSymbol__Group_18__0)
		{ after(grammarAccess.getValidURLSymbolAccess().getGroup_18()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__KeywordHack__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getKeywordHackAccess().getNotKeyword_0()); }
		Not
		{ after(grammarAccess.getKeywordHackAccess().getNotKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getKeywordHackAccess().getNoKeyword_1()); }
		No
		{ after(grammarAccess.getKeywordHackAccess().getNoKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getKeywordHackAccess().getUrlKeyword_2()); }
		Url
		{ after(grammarAccess.getKeywordHackAccess().getUrlKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getKeywordHackAccess().getUrKeyword_3()); }
		Ur
		{ after(grammarAccess.getKeywordHackAccess().getUrKeyword_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValidURL__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValidURLAccess().getCSSSTRINGTerminalRuleCall_0()); }
		RULE_CSSSTRING
		{ after(grammarAccess.getValidURLAccess().getCSSSTRINGTerminalRuleCall_0()); }
	)
	|
	(
		(
			{ before(grammarAccess.getValidURLAccess().getAlternatives_1()); }
			(rule__ValidURL__Alternatives_1)
			{ after(grammarAccess.getValidURLAccess().getAlternatives_1()); }
		)
		(
			{ before(grammarAccess.getValidURLAccess().getAlternatives_1()); }
			(rule__ValidURL__Alternatives_1)*
			{ after(grammarAccess.getValidURLAccess().getAlternatives_1()); }
		)
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValidURL__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValidURLAccess().getValidURLSymbolParserRuleCall_1_0()); }
		ruleValidURLSymbol
		{ after(grammarAccess.getValidURLAccess().getValidURLSymbolParserRuleCall_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getValidURLAccess().getKeywordHackParserRuleCall_1_1()); }
		ruleKeywordHack
		{ after(grammarAccess.getValidURLAccess().getKeywordHackParserRuleCall_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getValidURLAccess().getONE_HEX_LETTERTerminalRuleCall_1_2()); }
		RULE_ONE_HEX_LETTER
		{ after(grammarAccess.getValidURLAccess().getONE_HEX_LETTERTerminalRuleCall_1_2()); }
	)
	|
	(
		{ before(grammarAccess.getValidURLAccess().getONE_NON_HEX_LETTERTerminalRuleCall_1_3()); }
		RULE_ONE_NON_HEX_LETTER
		{ after(grammarAccess.getValidURLAccess().getONE_NON_HEX_LETTERTerminalRuleCall_1_3()); }
	)
	|
	(
		{ before(grammarAccess.getValidURLAccess().getONE_INTTerminalRuleCall_1_4()); }
		RULE_ONE_INT
		{ after(grammarAccess.getValidURLAccess().getONE_INTTerminalRuleCall_1_4()); }
	)
	|
	(
		{ before(grammarAccess.getValidURLAccess().getReverseSolidusSpaceKeyword_1_5()); }
		ReverseSolidusSpace
		{ after(grammarAccess.getValidURLAccess().getReverseSolidusSpaceKeyword_1_5()); }
	)
	|
	(
		{ before(grammarAccess.getValidURLAccess().getReverseSolidusLeftParenthesisKeyword_1_6()); }
		ReverseSolidusLeftParenthesis
		{ after(grammarAccess.getValidURLAccess().getReverseSolidusLeftParenthesisKeyword_1_6()); }
	)
	|
	(
		{ before(grammarAccess.getValidURLAccess().getReverseSolidusRightParenthesisKeyword_1_7()); }
		ReverseSolidusRightParenthesis
		{ after(grammarAccess.getValidURLAccess().getReverseSolidusRightParenthesisKeyword_1_7()); }
	)
	|
	(
		{ before(grammarAccess.getValidURLAccess().getReverseSolidusApostropheKeyword_1_8()); }
		ReverseSolidusApostrophe
		{ after(grammarAccess.getValidURLAccess().getReverseSolidusApostropheKeyword_1_8()); }
	)
	|
	(
		{ before(grammarAccess.getValidURLAccess().getReverseSolidusQuotationMarkKeyword_1_9()); }
		ReverseSolidusQuotationMark
		{ after(grammarAccess.getValidURLAccess().getReverseSolidusQuotationMarkKeyword_1_9()); }
	)
	|
	(
		{ before(grammarAccess.getValidURLAccess().getGroup_1_10()); }
		(rule__ValidURL__Group_1_10__0)
		{ after(grammarAccess.getValidURLAccess().getGroup_1_10()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValidURL__Alternatives_1_10_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValidURLAccess().getONE_INTTerminalRuleCall_1_10_1_0()); }
		RULE_ONE_INT
		{ after(grammarAccess.getValidURLAccess().getONE_INTTerminalRuleCall_1_10_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getValidURLAccess().getONE_HEX_LETTERTerminalRuleCall_1_10_1_1()); }
		RULE_ONE_HEX_LETTER
		{ after(grammarAccess.getValidURLAccess().getONE_HEX_LETTERTerminalRuleCall_1_10_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValidURL__Alternatives_1_10_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValidURLAccess().getONE_INTTerminalRuleCall_1_10_2_0()); }
		RULE_ONE_INT
		{ after(grammarAccess.getValidURLAccess().getONE_INTTerminalRuleCall_1_10_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getValidURLAccess().getONE_HEX_LETTERTerminalRuleCall_1_10_2_1()); }
		RULE_ONE_HEX_LETTER
		{ after(grammarAccess.getValidURLAccess().getONE_HEX_LETTERTerminalRuleCall_1_10_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIdentifierAccess().getUNDERSCORETerminalRuleCall_1_0()); }
		RULE_UNDERSCORE
		{ after(grammarAccess.getIdentifierAccess().getUNDERSCORETerminalRuleCall_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getIdentifierAccess().getONE_HEX_LETTERTerminalRuleCall_1_1()); }
		RULE_ONE_HEX_LETTER
		{ after(grammarAccess.getIdentifierAccess().getONE_HEX_LETTERTerminalRuleCall_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getIdentifierAccess().getONE_NON_HEX_LETTERTerminalRuleCall_1_2()); }
		RULE_ONE_NON_HEX_LETTER
		{ after(grammarAccess.getIdentifierAccess().getONE_NON_HEX_LETTERTerminalRuleCall_1_2()); }
	)
	|
	(
		{ before(grammarAccess.getIdentifierAccess().getKeywordHackParserRuleCall_1_3()); }
		ruleKeywordHack
		{ after(grammarAccess.getIdentifierAccess().getKeywordHackParserRuleCall_1_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier__Alternatives_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIdentifierAccess().getUNDERSCORETerminalRuleCall_2_0_0()); }
		RULE_UNDERSCORE
		{ after(grammarAccess.getIdentifierAccess().getUNDERSCORETerminalRuleCall_2_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getIdentifierAccess().getDASHTerminalRuleCall_2_0_1()); }
		RULE_DASH
		{ after(grammarAccess.getIdentifierAccess().getDASHTerminalRuleCall_2_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getIdentifierAccess().getONE_HEX_LETTERTerminalRuleCall_2_0_2()); }
		RULE_ONE_HEX_LETTER
		{ after(grammarAccess.getIdentifierAccess().getONE_HEX_LETTERTerminalRuleCall_2_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getIdentifierAccess().getONE_NON_HEX_LETTERTerminalRuleCall_2_0_3()); }
		RULE_ONE_NON_HEX_LETTER
		{ after(grammarAccess.getIdentifierAccess().getONE_NON_HEX_LETTERTerminalRuleCall_2_0_3()); }
	)
	|
	(
		{ before(grammarAccess.getIdentifierAccess().getONE_INTTerminalRuleCall_2_0_4()); }
		RULE_ONE_INT
		{ after(grammarAccess.getIdentifierAccess().getONE_INTTerminalRuleCall_2_0_4()); }
	)
	|
	(
		{ before(grammarAccess.getIdentifierAccess().getKeywordHackParserRuleCall_2_0_5()); }
		ruleKeywordHack
		{ after(grammarAccess.getIdentifierAccess().getKeywordHackParserRuleCall_2_0_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Num__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumAccess().getPLUSTerminalRuleCall_0_0()); }
		RULE_PLUS
		{ after(grammarAccess.getNumAccess().getPLUSTerminalRuleCall_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getNumAccess().getDASHTerminalRuleCall_0_1()); }
		RULE_DASH
		{ after(grammarAccess.getNumAccess().getDASHTerminalRuleCall_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Num__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumAccess().getGroup_1_0()); }
		(rule__Num__Group_1_0__0)
		{ after(grammarAccess.getNumAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getNumAccess().getGroup_1_1()); }
		(rule__Num__Group_1_1__0)
		{ after(grammarAccess.getNumAccess().getGroup_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Hex__Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHexAccess().getONE_INTTerminalRuleCall_1_0_0()); }
		RULE_ONE_INT
		{ after(grammarAccess.getHexAccess().getONE_INTTerminalRuleCall_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getHexAccess().getONE_HEX_LETTERTerminalRuleCall_1_0_1()); }
		RULE_ONE_HEX_LETTER
		{ after(grammarAccess.getHexAccess().getONE_HEX_LETTERTerminalRuleCall_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Stylesheet__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Stylesheet__Group__0__Impl
	rule__Stylesheet__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Stylesheet__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStylesheetAccess().getCharsetAssignment_0()); }
	(rule__Stylesheet__CharsetAssignment_0)?
	{ after(grammarAccess.getStylesheetAccess().getCharsetAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Stylesheet__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Stylesheet__Group__1__Impl
	rule__Stylesheet__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Stylesheet__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStylesheetAccess().getImportsAssignment_1()); }
	(rule__Stylesheet__ImportsAssignment_1)*
	{ after(grammarAccess.getStylesheetAccess().getImportsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Stylesheet__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Stylesheet__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Stylesheet__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStylesheetAccess().getAlternatives_2()); }
	(rule__Stylesheet__Alternatives_2)*
	{ after(grammarAccess.getStylesheetAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CharsetRule__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CharsetRule__Group__0__Impl
	rule__CharsetRule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CharsetRule__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCharsetRuleAccess().getCharsetKeyword_0()); }
	Charset
	{ after(grammarAccess.getCharsetRuleAccess().getCharsetKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CharsetRule__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CharsetRule__Group__1__Impl
	rule__CharsetRule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CharsetRule__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCharsetRuleAccess().getCharsetAssignment_1()); }
	(rule__CharsetRule__CharsetAssignment_1)
	{ after(grammarAccess.getCharsetRuleAccess().getCharsetAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CharsetRule__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CharsetRule__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CharsetRule__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCharsetRuleAccess().getSemicolonKeyword_2()); }
	Semicolon
	{ after(grammarAccess.getCharsetRuleAccess().getSemicolonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ImportRule__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportRule__Group__0__Impl
	rule__ImportRule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportRule__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportRuleAccess().getImportKeyword_0()); }
	Import
	{ after(grammarAccess.getImportRuleAccess().getImportKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportRule__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportRule__Group__1__Impl
	rule__ImportRule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportRule__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportRuleAccess().getAlternatives_1()); }
	(rule__ImportRule__Alternatives_1)
	{ after(grammarAccess.getImportRuleAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportRule__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportRule__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportRule__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportRuleAccess().getSemicolonKeyword_2()); }
	Semicolon
	{ after(grammarAccess.getImportRuleAccess().getSemicolonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ImportRule__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportRule__Group_1_1__0__Impl
	rule__ImportRule__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportRule__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportRuleAccess().getURLTypeParserRuleCall_1_1_0()); }
	ruleURLType
	{ after(grammarAccess.getImportRuleAccess().getURLTypeParserRuleCall_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportRule__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportRule__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportRule__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportRuleAccess().getMediaListAssignment_1_1_1()); }
	(rule__ImportRule__MediaListAssignment_1_1_1)?
	{ after(grammarAccess.getImportRuleAccess().getMediaListAssignment_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PageRule__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PageRule__Group__0__Impl
	rule__PageRule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PageRule__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPageRuleAccess().getPageRuleAction_0()); }
	()
	{ after(grammarAccess.getPageRuleAccess().getPageRuleAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PageRule__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PageRule__Group__1__Impl
	rule__PageRule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PageRule__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPageRuleAccess().getPageKeyword_1()); }
	Page
	{ after(grammarAccess.getPageRuleAccess().getPageKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PageRule__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PageRule__Group__2__Impl
	rule__PageRule__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PageRule__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPageRuleAccess().getPseudoPageAssignment_2()); }
	(rule__PageRule__PseudoPageAssignment_2)?
	{ after(grammarAccess.getPageRuleAccess().getPseudoPageAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PageRule__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PageRule__Group__3__Impl
	rule__PageRule__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PageRule__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPageRuleAccess().getLeftCurlyBracketKeyword_3()); }
	LeftCurlyBracket
	{ after(grammarAccess.getPageRuleAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PageRule__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PageRule__Group__4__Impl
	rule__PageRule__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__PageRule__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPageRuleAccess().getDeclarationsAssignment_4()); }
	(rule__PageRule__DeclarationsAssignment_4)?
	{ after(grammarAccess.getPageRuleAccess().getDeclarationsAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PageRule__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PageRule__Group__5__Impl
	rule__PageRule__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__PageRule__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPageRuleAccess().getGroup_5()); }
	(rule__PageRule__Group_5__0)*
	{ after(grammarAccess.getPageRuleAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PageRule__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PageRule__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PageRule__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPageRuleAccess().getRightCurlyBracketKeyword_6()); }
	RightCurlyBracket
	{ after(grammarAccess.getPageRuleAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PageRule__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PageRule__Group_5__0__Impl
	rule__PageRule__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PageRule__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPageRuleAccess().getSemicolonKeyword_5_0()); }
	Semicolon
	{ after(grammarAccess.getPageRuleAccess().getSemicolonKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PageRule__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PageRule__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PageRule__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPageRuleAccess().getDeclarationsAssignment_5_1()); }
	(rule__PageRule__DeclarationsAssignment_5_1)?
	{ after(grammarAccess.getPageRuleAccess().getDeclarationsAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PseudoPage__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PseudoPage__Group__0__Impl
	rule__PseudoPage__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PseudoPage__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPseudoPageAccess().getCOLONTerminalRuleCall_0()); }
	RULE_COLON
	{ after(grammarAccess.getPseudoPageAccess().getCOLONTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PseudoPage__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PseudoPage__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PseudoPage__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPseudoPageAccess().getIdentifierParserRuleCall_1()); }
	ruleIdentifier
	{ after(grammarAccess.getPseudoPageAccess().getIdentifierParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MediaRule__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MediaRule__Group__0__Impl
	rule__MediaRule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MediaRule__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMediaRuleAccess().getMediaKeyword_0()); }
	Media
	{ after(grammarAccess.getMediaRuleAccess().getMediaKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MediaRule__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MediaRule__Group__1__Impl
	rule__MediaRule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MediaRule__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMediaRuleAccess().getMedialistAssignment_1()); }
	(rule__MediaRule__MedialistAssignment_1)
	{ after(grammarAccess.getMediaRuleAccess().getMedialistAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MediaRule__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MediaRule__Group__2__Impl
	rule__MediaRule__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MediaRule__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMediaRuleAccess().getLeftCurlyBracketKeyword_2()); }
	LeftCurlyBracket
	{ after(grammarAccess.getMediaRuleAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MediaRule__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MediaRule__Group__3__Impl
	rule__MediaRule__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MediaRule__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMediaRuleAccess().getRulesetsAssignment_3()); }
	(rule__MediaRule__RulesetsAssignment_3)*
	{ after(grammarAccess.getMediaRuleAccess().getRulesetsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MediaRule__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MediaRule__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MediaRule__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMediaRuleAccess().getRightCurlyBracketKeyword_4()); }
	RightCurlyBracket
	{ after(grammarAccess.getMediaRuleAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MediaList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MediaList__Group__0__Impl
	rule__MediaList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MediaList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMediaListAccess().getEntryAssignment_0()); }
	(rule__MediaList__EntryAssignment_0)
	{ after(grammarAccess.getMediaListAccess().getEntryAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MediaList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MediaList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MediaList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMediaListAccess().getGroup_1()); }
	(rule__MediaList__Group_1__0)*
	{ after(grammarAccess.getMediaListAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MediaList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MediaList__Group_1__0__Impl
	rule__MediaList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MediaList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMediaListAccess().getCOMMATerminalRuleCall_1_0()); }
	RULE_COMMA
	{ after(grammarAccess.getMediaListAccess().getCOMMATerminalRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MediaList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MediaList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MediaList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMediaListAccess().getEntryAssignment_1_1()); }
	(rule__MediaList__EntryAssignment_1_1)
	{ after(grammarAccess.getMediaListAccess().getEntryAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FontFaceRule__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FontFaceRule__Group__0__Impl
	rule__FontFaceRule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FontFaceRule__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFontFaceRuleAccess().getFontFaceRuleAction_0()); }
	()
	{ after(grammarAccess.getFontFaceRuleAccess().getFontFaceRuleAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FontFaceRule__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FontFaceRule__Group__1__Impl
	rule__FontFaceRule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FontFaceRule__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFontFaceRuleAccess().getFontFaceKeyword_1()); }
	FontFace
	{ after(grammarAccess.getFontFaceRuleAccess().getFontFaceKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FontFaceRule__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FontFaceRule__Group__2__Impl
	rule__FontFaceRule__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FontFaceRule__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFontFaceRuleAccess().getLeftCurlyBracketKeyword_2()); }
	LeftCurlyBracket
	{ after(grammarAccess.getFontFaceRuleAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FontFaceRule__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FontFaceRule__Group__3__Impl
	rule__FontFaceRule__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FontFaceRule__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFontFaceRuleAccess().getDeclarationsAssignment_3()); }
	(rule__FontFaceRule__DeclarationsAssignment_3)?
	{ after(grammarAccess.getFontFaceRuleAccess().getDeclarationsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FontFaceRule__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FontFaceRule__Group__4__Impl
	rule__FontFaceRule__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__FontFaceRule__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFontFaceRuleAccess().getGroup_4()); }
	(rule__FontFaceRule__Group_4__0)*
	{ after(grammarAccess.getFontFaceRuleAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FontFaceRule__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FontFaceRule__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FontFaceRule__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFontFaceRuleAccess().getRightCurlyBracketKeyword_5()); }
	RightCurlyBracket
	{ after(grammarAccess.getFontFaceRuleAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FontFaceRule__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FontFaceRule__Group_4__0__Impl
	rule__FontFaceRule__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FontFaceRule__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFontFaceRuleAccess().getSemicolonKeyword_4_0()); }
	Semicolon
	{ after(grammarAccess.getFontFaceRuleAccess().getSemicolonKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FontFaceRule__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FontFaceRule__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FontFaceRule__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFontFaceRuleAccess().getDeclarationsAssignment_4_1()); }
	(rule__FontFaceRule__DeclarationsAssignment_4_1)?
	{ after(grammarAccess.getFontFaceRuleAccess().getDeclarationsAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__KeyframesRule__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__KeyframesRule__Group__0__Impl
	rule__KeyframesRule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyframesRule__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getKeyframesRuleAccess().getKeyframesRuleAction_0()); }
	()
	{ after(grammarAccess.getKeyframesRuleAccess().getKeyframesRuleAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyframesRule__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__KeyframesRule__Group__1__Impl
	rule__KeyframesRule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyframesRule__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getKeyframesRuleAccess().getKeyframesKeyword_1()); }
	Keyframes
	{ after(grammarAccess.getKeyframesRuleAccess().getKeyframesKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyframesRule__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__KeyframesRule__Group__2__Impl
	rule__KeyframesRule__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyframesRule__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getKeyframesRuleAccess().getNameAssignment_2()); }
	(rule__KeyframesRule__NameAssignment_2)
	{ after(grammarAccess.getKeyframesRuleAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyframesRule__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__KeyframesRule__Group__3__Impl
	rule__KeyframesRule__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyframesRule__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getKeyframesRuleAccess().getLeftCurlyBracketKeyword_3()); }
	LeftCurlyBracket
	{ after(grammarAccess.getKeyframesRuleAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyframesRule__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__KeyframesRule__Group__4__Impl
	rule__KeyframesRule__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyframesRule__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getKeyframesRuleAccess().getKeyframeselectorsAssignment_4()); }
	(rule__KeyframesRule__KeyframeselectorsAssignment_4)?
	{ after(grammarAccess.getKeyframesRuleAccess().getKeyframeselectorsAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyframesRule__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__KeyframesRule__Group__5__Impl
	rule__KeyframesRule__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyframesRule__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getKeyframesRuleAccess().getGroup_5()); }
	(rule__KeyframesRule__Group_5__0)*
	{ after(grammarAccess.getKeyframesRuleAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyframesRule__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__KeyframesRule__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyframesRule__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getKeyframesRuleAccess().getRightCurlyBracketKeyword_6()); }
	RightCurlyBracket
	{ after(grammarAccess.getKeyframesRuleAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__KeyframesRule__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__KeyframesRule__Group_5__0__Impl
	rule__KeyframesRule__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyframesRule__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getKeyframesRuleAccess().getSemicolonKeyword_5_0()); }
	Semicolon
	{ after(grammarAccess.getKeyframesRuleAccess().getSemicolonKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyframesRule__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__KeyframesRule__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyframesRule__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getKeyframesRuleAccess().getKeyframeselectorsAssignment_5_1()); }
	(rule__KeyframesRule__KeyframeselectorsAssignment_5_1)?
	{ after(grammarAccess.getKeyframesRuleAccess().getKeyframeselectorsAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__KeyframeSelector__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__KeyframeSelector__Group__0__Impl
	rule__KeyframeSelector__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyframeSelector__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getKeyframeSelectorAccess().getAlternatives_0()); }
	(rule__KeyframeSelector__Alternatives_0)
	{ after(grammarAccess.getKeyframeSelectorAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyframeSelector__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__KeyframeSelector__Group__1__Impl
	rule__KeyframeSelector__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyframeSelector__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getKeyframeSelectorAccess().getLeftCurlyBracketKeyword_1()); }
	LeftCurlyBracket
	{ after(grammarAccess.getKeyframeSelectorAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyframeSelector__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__KeyframeSelector__Group__2__Impl
	rule__KeyframeSelector__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyframeSelector__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getKeyframeSelectorAccess().getDeclarationsAssignment_2()); }
	(rule__KeyframeSelector__DeclarationsAssignment_2)?
	{ after(grammarAccess.getKeyframeSelectorAccess().getDeclarationsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyframeSelector__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__KeyframeSelector__Group__3__Impl
	rule__KeyframeSelector__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyframeSelector__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getKeyframeSelectorAccess().getGroup_3()); }
	(rule__KeyframeSelector__Group_3__0)*
	{ after(grammarAccess.getKeyframeSelectorAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyframeSelector__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__KeyframeSelector__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyframeSelector__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getKeyframeSelectorAccess().getRightCurlyBracketKeyword_4()); }
	RightCurlyBracket
	{ after(grammarAccess.getKeyframeSelectorAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__KeyframeSelector__Group_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__KeyframeSelector__Group_0_1__0__Impl
	rule__KeyframeSelector__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyframeSelector__Group_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getKeyframeSelectorAccess().getPercentageAssignment_0_1_0()); }
	(rule__KeyframeSelector__PercentageAssignment_0_1_0)
	{ after(grammarAccess.getKeyframeSelectorAccess().getPercentageAssignment_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyframeSelector__Group_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__KeyframeSelector__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyframeSelector__Group_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getKeyframeSelectorAccess().getPERCENTTerminalRuleCall_0_1_1()); }
	RULE_PERCENT
	{ after(grammarAccess.getKeyframeSelectorAccess().getPERCENTTerminalRuleCall_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__KeyframeSelector__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__KeyframeSelector__Group_3__0__Impl
	rule__KeyframeSelector__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyframeSelector__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getKeyframeSelectorAccess().getSemicolonKeyword_3_0()); }
	Semicolon
	{ after(grammarAccess.getKeyframeSelectorAccess().getSemicolonKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyframeSelector__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__KeyframeSelector__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyframeSelector__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getKeyframeSelectorAccess().getDeclarationsAssignment_3_1()); }
	(rule__KeyframeSelector__DeclarationsAssignment_3_1)?
	{ after(grammarAccess.getKeyframeSelectorAccess().getDeclarationsAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Ruleset__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ruleset__Group__0__Impl
	rule__Ruleset__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ruleset__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRulesetAccess().getSelectorsAssignment_0()); }
	(rule__Ruleset__SelectorsAssignment_0)
	{ after(grammarAccess.getRulesetAccess().getSelectorsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ruleset__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ruleset__Group__1__Impl
	rule__Ruleset__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Ruleset__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRulesetAccess().getGroup_1()); }
	(rule__Ruleset__Group_1__0)*
	{ after(grammarAccess.getRulesetAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ruleset__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ruleset__Group__2__Impl
	rule__Ruleset__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Ruleset__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRulesetAccess().getWSTerminalRuleCall_2()); }
	(RULE_WS)*
	{ after(grammarAccess.getRulesetAccess().getWSTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ruleset__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ruleset__Group__3__Impl
	rule__Ruleset__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Ruleset__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRulesetAccess().getLeftCurlyBracketKeyword_3()); }
	LeftCurlyBracket
	{ after(grammarAccess.getRulesetAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ruleset__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ruleset__Group__4__Impl
	rule__Ruleset__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Ruleset__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRulesetAccess().getGroup_4()); }
	(rule__Ruleset__Group_4__0)?
	{ after(grammarAccess.getRulesetAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ruleset__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ruleset__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ruleset__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRulesetAccess().getRightCurlyBracketKeyword_5()); }
	RightCurlyBracket
	{ after(grammarAccess.getRulesetAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Ruleset__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ruleset__Group_1__0__Impl
	rule__Ruleset__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ruleset__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRulesetAccess().getWSTerminalRuleCall_1_0()); }
	(RULE_WS)*
	{ after(grammarAccess.getRulesetAccess().getWSTerminalRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ruleset__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ruleset__Group_1__1__Impl
	rule__Ruleset__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Ruleset__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRulesetAccess().getCOMMATerminalRuleCall_1_1()); }
	RULE_COMMA
	{ after(grammarAccess.getRulesetAccess().getCOMMATerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ruleset__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ruleset__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ruleset__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRulesetAccess().getSelectorsAssignment_1_2()); }
	(rule__Ruleset__SelectorsAssignment_1_2)
	{ after(grammarAccess.getRulesetAccess().getSelectorsAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Ruleset__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ruleset__Group_4__0__Impl
	rule__Ruleset__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ruleset__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRulesetAccess().getDeclarationsAssignment_4_0()); }
	(rule__Ruleset__DeclarationsAssignment_4_0)
	{ after(grammarAccess.getRulesetAccess().getDeclarationsAssignment_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ruleset__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ruleset__Group_4__1__Impl
	rule__Ruleset__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Ruleset__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRulesetAccess().getGroup_4_1()); }
	(rule__Ruleset__Group_4_1__0)*
	{ after(grammarAccess.getRulesetAccess().getGroup_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ruleset__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ruleset__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ruleset__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRulesetAccess().getSemicolonKeyword_4_2()); }
	(Semicolon)?
	{ after(grammarAccess.getRulesetAccess().getSemicolonKeyword_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Ruleset__Group_4_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ruleset__Group_4_1__0__Impl
	rule__Ruleset__Group_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ruleset__Group_4_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRulesetAccess().getSemicolonKeyword_4_1_0()); }
	Semicolon
	{ after(grammarAccess.getRulesetAccess().getSemicolonKeyword_4_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ruleset__Group_4_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ruleset__Group_4_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ruleset__Group_4_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRulesetAccess().getDeclarationsAssignment_4_1_1()); }
	(rule__Ruleset__DeclarationsAssignment_4_1_1)
	{ after(grammarAccess.getRulesetAccess().getDeclarationsAssignment_4_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CssDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CssDeclaration__Group__0__Impl
	rule__CssDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CssDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCssDeclarationAccess().getPropertyAssignment_0()); }
	(rule__CssDeclaration__PropertyAssignment_0)
	{ after(grammarAccess.getCssDeclarationAccess().getPropertyAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CssDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CssDeclaration__Group__1__Impl
	rule__CssDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CssDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCssDeclarationAccess().getWSTerminalRuleCall_1()); }
	(RULE_WS)*
	{ after(grammarAccess.getCssDeclarationAccess().getWSTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CssDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CssDeclaration__Group__2__Impl
	rule__CssDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CssDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCssDeclarationAccess().getCOLONTerminalRuleCall_2()); }
	RULE_COLON
	{ after(grammarAccess.getCssDeclarationAccess().getCOLONTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CssDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CssDeclaration__Group__3__Impl
	rule__CssDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CssDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getCssDeclarationAccess().getValueTokensAssignment_3()); }
		(rule__CssDeclaration__ValueTokensAssignment_3)
		{ after(grammarAccess.getCssDeclarationAccess().getValueTokensAssignment_3()); }
	)
	(
		{ before(grammarAccess.getCssDeclarationAccess().getValueTokensAssignment_3()); }
		(rule__CssDeclaration__ValueTokensAssignment_3)*
		{ after(grammarAccess.getCssDeclarationAccess().getValueTokensAssignment_3()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CssDeclaration__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CssDeclaration__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CssDeclaration__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCssDeclarationAccess().getImportantAssignment_4()); }
	(rule__CssDeclaration__ImportantAssignment_4)?
	{ after(grammarAccess.getCssDeclarationAccess().getImportantAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Selector__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selector__Group__0__Impl
	rule__Selector__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectorAccess().getSimpleselectorsAssignment_0()); }
	(rule__Selector__SimpleselectorsAssignment_0)
	{ after(grammarAccess.getSelectorAccess().getSimpleselectorsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selector__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectorAccess().getAlternatives_1()); }
	(rule__Selector__Alternatives_1)?
	{ after(grammarAccess.getSelectorAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Selector__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selector__Group_1_0__0__Impl
	rule__Selector__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectorAccess().getCombinatorAssignment_1_0_0()); }
	(rule__Selector__CombinatorAssignment_1_0_0)
	{ after(grammarAccess.getSelectorAccess().getCombinatorAssignment_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selector__Group_1_0__1__Impl
	rule__Selector__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectorAccess().getWSTerminalRuleCall_1_0_1()); }
	(RULE_WS)*
	{ after(grammarAccess.getSelectorAccess().getWSTerminalRuleCall_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selector__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectorAccess().getSelectorAssignment_1_0_2()); }
	(rule__Selector__SelectorAssignment_1_0_2)
	{ after(grammarAccess.getSelectorAccess().getSelectorAssignment_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Selector__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selector__Group_1_1__0__Impl
	rule__Selector__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getSelectorAccess().getWSTerminalRuleCall_1_1_0()); }
		(RULE_WS)
		{ after(grammarAccess.getSelectorAccess().getWSTerminalRuleCall_1_1_0()); }
	)
	(
		{ before(grammarAccess.getSelectorAccess().getWSTerminalRuleCall_1_1_0()); }
		(RULE_WS)*
		{ after(grammarAccess.getSelectorAccess().getWSTerminalRuleCall_1_1_0()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selector__Group_1_1__1__Impl
	rule__Selector__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectorAccess().getGroup_1_1_1()); }
	(rule__Selector__Group_1_1_1__0)?
	{ after(grammarAccess.getSelectorAccess().getGroup_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selector__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectorAccess().getSelectorAssignment_1_1_2()); }
	(rule__Selector__SelectorAssignment_1_1_2)
	{ after(grammarAccess.getSelectorAccess().getSelectorAssignment_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Selector__Group_1_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selector__Group_1_1_1__0__Impl
	rule__Selector__Group_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_1_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectorAccess().getCombinatorAssignment_1_1_1_0()); }
	(rule__Selector__CombinatorAssignment_1_1_1_0)
	{ after(grammarAccess.getSelectorAccess().getCombinatorAssignment_1_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_1_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selector__Group_1_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_1_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectorAccess().getWSTerminalRuleCall_1_1_1_1()); }
	(RULE_WS)*
	{ after(grammarAccess.getSelectorAccess().getWSTerminalRuleCall_1_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleSelectorForNegation__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleSelectorForNegation__Group_0__0__Impl
	rule__SimpleSelectorForNegation__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSelectorForNegation__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleSelectorForNegationAccess().getAlternatives_0_0()); }
	(rule__SimpleSelectorForNegation__Alternatives_0_0)
	{ after(grammarAccess.getSimpleSelectorForNegationAccess().getAlternatives_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSelectorForNegation__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleSelectorForNegation__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSelectorForNegation__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleSelectorForNegationAccess().getSubSelectorsAssignment_0_1()); }
	(rule__SimpleSelectorForNegation__SubSelectorsAssignment_0_1)*
	{ after(grammarAccess.getSimpleSelectorForNegationAccess().getSubSelectorsAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleSelector__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleSelector__Group_0__0__Impl
	rule__SimpleSelector__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSelector__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleSelectorAccess().getAlternatives_0_0()); }
	(rule__SimpleSelector__Alternatives_0_0)
	{ after(grammarAccess.getSimpleSelectorAccess().getAlternatives_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSelector__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleSelector__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSelector__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleSelectorAccess().getSubSelectorsAssignment_0_1()); }
	(rule__SimpleSelector__SubSelectorsAssignment_0_1)*
	{ after(grammarAccess.getSimpleSelectorAccess().getSubSelectorsAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeSelector__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeSelector__Group__0__Impl
	rule__AttributeSelector__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeSelector__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeSelectorAccess().getAttributeSelectorAction_0()); }
	()
	{ after(grammarAccess.getAttributeSelectorAccess().getAttributeSelectorAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeSelector__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeSelector__Group__1__Impl
	rule__AttributeSelector__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeSelector__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeSelectorAccess().getLeftSquareBracketKeyword_1()); }
	LeftSquareBracket
	{ after(grammarAccess.getAttributeSelectorAccess().getLeftSquareBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeSelector__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeSelector__Group__2__Impl
	rule__AttributeSelector__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeSelector__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeSelectorAccess().getNameAssignment_2()); }
	(rule__AttributeSelector__NameAssignment_2)
	{ after(grammarAccess.getAttributeSelectorAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeSelector__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeSelector__Group__3__Impl
	rule__AttributeSelector__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeSelector__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeSelectorAccess().getGroup_3()); }
	(rule__AttributeSelector__Group_3__0)?
	{ after(grammarAccess.getAttributeSelectorAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeSelector__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeSelector__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeSelector__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeSelectorAccess().getRightSquareBracketKeyword_4()); }
	RightSquareBracket
	{ after(grammarAccess.getAttributeSelectorAccess().getRightSquareBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeSelector__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeSelector__Group_3__0__Impl
	rule__AttributeSelector__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeSelector__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeSelectorAccess().getOpAssignment_3_0()); }
	(rule__AttributeSelector__OpAssignment_3_0)
	{ after(grammarAccess.getAttributeSelectorAccess().getOpAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeSelector__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeSelector__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeSelector__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeSelectorAccess().getValueAssignment_3_1()); }
	(rule__AttributeSelector__ValueAssignment_3_1)
	{ after(grammarAccess.getAttributeSelectorAccess().getValueAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ClassSelector__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassSelector__Group__0__Impl
	rule__ClassSelector__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassSelector__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassSelectorAccess().getClassSelectorAction_0()); }
	()
	{ after(grammarAccess.getClassSelectorAccess().getClassSelectorAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassSelector__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassSelector__Group__1__Impl
	rule__ClassSelector__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassSelector__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassSelectorAccess().getFullStopKeyword_1()); }
	FullStop
	{ after(grammarAccess.getClassSelectorAccess().getFullStopKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassSelector__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassSelector__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassSelector__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassSelectorAccess().getNameAssignment_2()); }
	(rule__ClassSelector__NameAssignment_2)
	{ after(grammarAccess.getClassSelectorAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ElementSelector__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElementSelector__Group__0__Impl
	rule__ElementSelector__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementSelector__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementSelectorAccess().getElementSelectorAction_0()); }
	()
	{ after(grammarAccess.getElementSelectorAccess().getElementSelectorAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementSelector__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElementSelector__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementSelector__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementSelectorAccess().getNameAssignment_1()); }
	(rule__ElementSelector__NameAssignment_1)
	{ after(grammarAccess.getElementSelectorAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UniversalSelector__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UniversalSelector__Group__0__Impl
	rule__UniversalSelector__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UniversalSelector__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUniversalSelectorAccess().getUniversalSelectorAction_0()); }
	()
	{ after(grammarAccess.getUniversalSelectorAccess().getUniversalSelectorAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UniversalSelector__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UniversalSelector__Group__1__Impl
	rule__UniversalSelector__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UniversalSelector__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUniversalSelectorAccess().getNamespaceAssignment_1()); }
	(rule__UniversalSelector__NamespaceAssignment_1)?
	{ after(grammarAccess.getUniversalSelectorAccess().getNamespaceAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UniversalSelector__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UniversalSelector__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UniversalSelector__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUniversalSelectorAccess().getAsteriskKeyword_2()); }
	Asterisk
	{ after(grammarAccess.getUniversalSelectorAccess().getAsteriskKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IdSelector__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IdSelector__Group__0__Impl
	rule__IdSelector__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IdSelector__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdSelectorAccess().getIdSelectorAction_0()); }
	()
	{ after(grammarAccess.getIdSelectorAccess().getIdSelectorAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IdSelector__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IdSelector__Group__1__Impl
	rule__IdSelector__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IdSelector__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdSelectorAccess().getHASHMARKTerminalRuleCall_1()); }
	RULE_HASHMARK
	{ after(grammarAccess.getIdSelectorAccess().getHASHMARKTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IdSelector__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IdSelector__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IdSelector__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdSelectorAccess().getNameAssignment_2()); }
	(rule__IdSelector__NameAssignment_2)
	{ after(grammarAccess.getIdSelectorAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CssNamespacePrefix__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CssNamespacePrefix__Group__0__Impl
	rule__CssNamespacePrefix__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CssNamespacePrefix__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCssNamespacePrefixAccess().getAlternatives_0()); }
	(rule__CssNamespacePrefix__Alternatives_0)?
	{ after(grammarAccess.getCssNamespacePrefixAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CssNamespacePrefix__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CssNamespacePrefix__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CssNamespacePrefix__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCssNamespacePrefixAccess().getVerticalLineKeyword_1()); }
	VerticalLine
	{ after(grammarAccess.getCssNamespacePrefixAccess().getVerticalLineKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CssProperty__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CssProperty__Group__0__Impl
	rule__CssProperty__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CssProperty__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCssPropertyAccess().getCssPropertyAction_0()); }
	()
	{ after(grammarAccess.getCssPropertyAccess().getCssPropertyAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CssProperty__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CssProperty__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CssProperty__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCssPropertyAccess().getNameAssignment_1()); }
	(rule__CssProperty__NameAssignment_1)
	{ after(grammarAccess.getCssPropertyAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PseudoClass__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PseudoClass__Group__0__Impl
	rule__PseudoClass__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PseudoClass__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPseudoClassAccess().getCOLONTerminalRuleCall_0()); }
	RULE_COLON
	{ after(grammarAccess.getPseudoClassAccess().getCOLONTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PseudoClass__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PseudoClass__Group__1__Impl
	rule__PseudoClass__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PseudoClass__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPseudoClassAccess().getCOLONTerminalRuleCall_1()); }
	(RULE_COLON)?
	{ after(grammarAccess.getPseudoClassAccess().getCOLONTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PseudoClass__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PseudoClass__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PseudoClass__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPseudoClassAccess().getNameAssignment_2()); }
	(rule__PseudoClass__NameAssignment_2)
	{ after(grammarAccess.getPseudoClassAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PseudoClassFunction__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PseudoClassFunction__Group_0__0__Impl
	rule__PseudoClassFunction__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PseudoClassFunction__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPseudoClassFunctionAccess().getNotAssignment_0_0()); }
	(rule__PseudoClassFunction__NotAssignment_0_0)
	{ after(grammarAccess.getPseudoClassFunctionAccess().getNotAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PseudoClassFunction__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PseudoClassFunction__Group_0__1__Impl
	rule__PseudoClassFunction__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PseudoClassFunction__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPseudoClassFunctionAccess().getParamSelectorAssignment_0_1()); }
	(rule__PseudoClassFunction__ParamSelectorAssignment_0_1)
	{ after(grammarAccess.getPseudoClassFunctionAccess().getParamSelectorAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PseudoClassFunction__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PseudoClassFunction__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PseudoClassFunction__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPseudoClassFunctionAccess().getRightParenthesisKeyword_0_2()); }
	RightParenthesis
	{ after(grammarAccess.getPseudoClassFunctionAccess().getRightParenthesisKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PseudoClassFunction__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PseudoClassFunction__Group_1__0__Impl
	rule__PseudoClassFunction__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PseudoClassFunction__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPseudoClassFunctionAccess().getCOLONTerminalRuleCall_1_0()); }
	RULE_COLON
	{ after(grammarAccess.getPseudoClassFunctionAccess().getCOLONTerminalRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PseudoClassFunction__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PseudoClassFunction__Group_1__1__Impl
	rule__PseudoClassFunction__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PseudoClassFunction__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPseudoClassFunctionAccess().getNameAssignment_1_1()); }
	(rule__PseudoClassFunction__NameAssignment_1_1)
	{ after(grammarAccess.getPseudoClassFunctionAccess().getNameAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PseudoClassFunction__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PseudoClassFunction__Group_1__2__Impl
	rule__PseudoClassFunction__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PseudoClassFunction__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPseudoClassFunctionAccess().getLeftParenthesisKeyword_1_2()); }
	LeftParenthesis
	{ after(grammarAccess.getPseudoClassFunctionAccess().getLeftParenthesisKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PseudoClassFunction__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PseudoClassFunction__Group_1__3__Impl
	rule__PseudoClassFunction__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PseudoClassFunction__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPseudoClassFunctionAccess().getParamsAssignment_1_3()); }
	(rule__PseudoClassFunction__ParamsAssignment_1_3)*
	{ after(grammarAccess.getPseudoClassFunctionAccess().getParamsAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PseudoClassFunction__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PseudoClassFunction__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PseudoClassFunction__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPseudoClassFunctionAccess().getRightParenthesisKeyword_1_4()); }
	RightParenthesis
	{ after(grammarAccess.getPseudoClassFunctionAccess().getRightParenthesisKeyword_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NotFunctionCall__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NotFunctionCall__Group__0__Impl
	rule__NotFunctionCall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NotFunctionCall__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNotFunctionCallAccess().getCOLONTerminalRuleCall_0()); }
	RULE_COLON
	{ after(grammarAccess.getNotFunctionCallAccess().getCOLONTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NotFunctionCall__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NotFunctionCall__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NotFunctionCall__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNotFunctionCallAccess().getNotKeyword_1()); }
	Not_1
	{ after(grammarAccess.getNotFunctionCallAccess().getNotKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SymbolTok__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SymbolTok__Group__0__Impl
	rule__SymbolTok__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolTok__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSymbolTokAccess().getSymbolTokAction_0()); }
	()
	{ after(grammarAccess.getSymbolTokAccess().getSymbolTokAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolTok__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SymbolTok__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolTok__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSymbolTokAccess().getSymbolAssignment_1()); }
	(rule__SymbolTok__SymbolAssignment_1)
	{ after(grammarAccess.getSymbolTokAccess().getSymbolAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__WSTok__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WSTok__Group__0__Impl
	rule__WSTok__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WSTok__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWSTokAccess().getWSTokAction_0()); }
	()
	{ after(grammarAccess.getWSTokAccess().getWSTokAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WSTok__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WSTok__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WSTok__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWSTokAccess().getWSTerminalRuleCall_1()); }
	RULE_WS
	{ after(grammarAccess.getWSTokAccess().getWSTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StringTok__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringTok__Group__0__Impl
	rule__StringTok__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StringTok__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringTokAccess().getStringTokAction_0()); }
	()
	{ after(grammarAccess.getStringTokAccess().getStringTokAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringTok__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringTok__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StringTok__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringTokAccess().getValueAssignment_1()); }
	(rule__StringTok__ValueAssignment_1)
	{ after(grammarAccess.getStringTokAccess().getValueAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NumberTok__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumberTok__Group__0__Impl
	rule__NumberTok__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberTok__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumberTokAccess().getNumberTokAction_0()); }
	()
	{ after(grammarAccess.getNumberTokAccess().getNumberTokAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberTok__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumberTok__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberTok__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumberTokAccess().getValAssignment_1()); }
	(rule__NumberTok__ValAssignment_1)
	{ after(grammarAccess.getNumberTokAccess().getValAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UrlTok__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UrlTok__Group__0__Impl
	rule__UrlTok__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UrlTok__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUrlTokAccess().getUrlTokAction_0()); }
	()
	{ after(grammarAccess.getUrlTokAccess().getUrlTokAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UrlTok__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UrlTok__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UrlTok__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUrlTokAccess().getUrlAssignment_1()); }
	(rule__UrlTok__UrlAssignment_1)
	{ after(grammarAccess.getUrlTokAccess().getUrlAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ColorTok__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColorTok__Group__0__Impl
	rule__ColorTok__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ColorTok__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColorTokAccess().getColorTokAction_0()); }
	()
	{ after(grammarAccess.getColorTokAccess().getColorTokAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColorTok__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColorTok__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ColorTok__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColorTokAccess().getValueAssignment_1()); }
	(rule__ColorTok__ValueAssignment_1)
	{ after(grammarAccess.getColorTokAccess().getValueAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IdentifierOrFuncTok__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IdentifierOrFuncTok__Group__0__Impl
	rule__IdentifierOrFuncTok__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierOrFuncTok__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdentifierOrFuncTokAccess().getIdentifierTokAction_0()); }
	()
	{ after(grammarAccess.getIdentifierOrFuncTokAccess().getIdentifierTokAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierOrFuncTok__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IdentifierOrFuncTok__Group__1__Impl
	rule__IdentifierOrFuncTok__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierOrFuncTok__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdentifierOrFuncTokAccess().getNameAssignment_1()); }
	(rule__IdentifierOrFuncTok__NameAssignment_1)
	{ after(grammarAccess.getIdentifierOrFuncTokAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierOrFuncTok__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IdentifierOrFuncTok__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierOrFuncTok__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdentifierOrFuncTokAccess().getGroup_2()); }
	(rule__IdentifierOrFuncTok__Group_2__0)?
	{ after(grammarAccess.getIdentifierOrFuncTokAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IdentifierOrFuncTok__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IdentifierOrFuncTok__Group_2__0__Impl
	rule__IdentifierOrFuncTok__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierOrFuncTok__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdentifierOrFuncTokAccess().getFuncTokNameAction_2_0()); }
	()
	{ after(grammarAccess.getIdentifierOrFuncTokAccess().getFuncTokNameAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierOrFuncTok__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IdentifierOrFuncTok__Group_2__1__Impl
	rule__IdentifierOrFuncTok__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierOrFuncTok__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdentifierOrFuncTokAccess().getLeftParenthesisKeyword_2_1()); }
	LeftParenthesis
	{ after(grammarAccess.getIdentifierOrFuncTokAccess().getLeftParenthesisKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierOrFuncTok__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IdentifierOrFuncTok__Group_2__2__Impl
	rule__IdentifierOrFuncTok__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierOrFuncTok__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getIdentifierOrFuncTokAccess().getParamsAssignment_2_2()); }
		(rule__IdentifierOrFuncTok__ParamsAssignment_2_2)
		{ after(grammarAccess.getIdentifierOrFuncTokAccess().getParamsAssignment_2_2()); }
	)
	(
		{ before(grammarAccess.getIdentifierOrFuncTokAccess().getParamsAssignment_2_2()); }
		(rule__IdentifierOrFuncTok__ParamsAssignment_2_2)*
		{ after(grammarAccess.getIdentifierOrFuncTokAccess().getParamsAssignment_2_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierOrFuncTok__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IdentifierOrFuncTok__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierOrFuncTok__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdentifierOrFuncTokAccess().getRightParenthesisKeyword_2_3()); }
	RightParenthesis
	{ after(grammarAccess.getIdentifierOrFuncTokAccess().getRightParenthesisKeyword_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__URLType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__URLType__Group__0__Impl
	rule__URLType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__URLType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getURLTypeAccess().getUrlKeyword_0()); }
	Url_1
	{ after(grammarAccess.getURLTypeAccess().getUrlKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__URLType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__URLType__Group__1__Impl
	rule__URLType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__URLType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getURLTypeAccess().getUrlAssignment_1()); }
	(rule__URLType__UrlAssignment_1)
	{ after(grammarAccess.getURLTypeAccess().getUrlAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__URLType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__URLType__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__URLType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getURLTypeAccess().getRightParenthesisKeyword_2()); }
	RightParenthesis
	{ after(grammarAccess.getURLTypeAccess().getRightParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ValidURLSymbol__Group_18__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValidURLSymbol__Group_18__0__Impl
	rule__ValidURLSymbol__Group_18__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValidURLSymbol__Group_18__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValidURLSymbolAccess().getEqualsSignKeyword_18_0()); }
	EqualsSign
	{ after(grammarAccess.getValidURLSymbolAccess().getEqualsSignKeyword_18_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValidURLSymbol__Group_18__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValidURLSymbol__Group_18__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValidURLSymbol__Group_18__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValidURLSymbolAccess().getKeywordHackParserRuleCall_18_1()); }
	ruleKeywordHack
	{ after(grammarAccess.getValidURLSymbolAccess().getKeywordHackParserRuleCall_18_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ValidURL__Group_1_10__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValidURL__Group_1_10__0__Impl
	rule__ValidURL__Group_1_10__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValidURL__Group_1_10__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValidURLAccess().getPERCENTTerminalRuleCall_1_10_0()); }
	RULE_PERCENT
	{ after(grammarAccess.getValidURLAccess().getPERCENTTerminalRuleCall_1_10_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValidURL__Group_1_10__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValidURL__Group_1_10__1__Impl
	rule__ValidURL__Group_1_10__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ValidURL__Group_1_10__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValidURLAccess().getAlternatives_1_10_1()); }
	(rule__ValidURL__Alternatives_1_10_1)
	{ after(grammarAccess.getValidURLAccess().getAlternatives_1_10_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValidURL__Group_1_10__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValidURL__Group_1_10__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValidURL__Group_1_10__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValidURLAccess().getAlternatives_1_10_2()); }
	(rule__ValidURL__Alternatives_1_10_2)
	{ after(grammarAccess.getValidURLAccess().getAlternatives_1_10_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Identifier__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Identifier__Group__0__Impl
	rule__Identifier__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdentifierAccess().getDASHTerminalRuleCall_0()); }
	(RULE_DASH)?
	{ after(grammarAccess.getIdentifierAccess().getDASHTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Identifier__Group__1__Impl
	rule__Identifier__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdentifierAccess().getAlternatives_1()); }
	(rule__Identifier__Alternatives_1)
	{ after(grammarAccess.getIdentifierAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Identifier__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdentifierAccess().getGroup_2()); }
	(rule__Identifier__Group_2__0)*
	{ after(grammarAccess.getIdentifierAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Identifier__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Identifier__Group_2__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdentifierAccess().getAlternatives_2_0()); }
	(rule__Identifier__Alternatives_2_0)
	{ after(grammarAccess.getIdentifierAccess().getAlternatives_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Num__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Num__Group__0__Impl
	rule__Num__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Num__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumAccess().getAlternatives_0()); }
	(rule__Num__Alternatives_0)?
	{ after(grammarAccess.getNumAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Num__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Num__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Num__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumAccess().getAlternatives_1()); }
	(rule__Num__Alternatives_1)
	{ after(grammarAccess.getNumAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Num__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Num__Group_1_0__0__Impl
	rule__Num__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Num__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumAccess().getFullStopKeyword_1_0_0()); }
	FullStop
	{ after(grammarAccess.getNumAccess().getFullStopKeyword_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Num__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Num__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Num__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getNumAccess().getONE_INTTerminalRuleCall_1_0_1()); }
		(RULE_ONE_INT)
		{ after(grammarAccess.getNumAccess().getONE_INTTerminalRuleCall_1_0_1()); }
	)
	(
		{ before(grammarAccess.getNumAccess().getONE_INTTerminalRuleCall_1_0_1()); }
		(RULE_ONE_INT)*
		{ after(grammarAccess.getNumAccess().getONE_INTTerminalRuleCall_1_0_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Num__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Num__Group_1_1__0__Impl
	rule__Num__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Num__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getNumAccess().getONE_INTTerminalRuleCall_1_1_0()); }
		(RULE_ONE_INT)
		{ after(grammarAccess.getNumAccess().getONE_INTTerminalRuleCall_1_1_0()); }
	)
	(
		{ before(grammarAccess.getNumAccess().getONE_INTTerminalRuleCall_1_1_0()); }
		(RULE_ONE_INT)*
		{ after(grammarAccess.getNumAccess().getONE_INTTerminalRuleCall_1_1_0()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Num__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Num__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Num__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumAccess().getGroup_1_1_1()); }
	(rule__Num__Group_1_1_1__0)?
	{ after(grammarAccess.getNumAccess().getGroup_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Num__Group_1_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Num__Group_1_1_1__0__Impl
	rule__Num__Group_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Num__Group_1_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumAccess().getFullStopKeyword_1_1_1_0()); }
	(FullStop)
	{ after(grammarAccess.getNumAccess().getFullStopKeyword_1_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Num__Group_1_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Num__Group_1_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Num__Group_1_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getNumAccess().getONE_INTTerminalRuleCall_1_1_1_1()); }
		(RULE_ONE_INT)
		{ after(grammarAccess.getNumAccess().getONE_INTTerminalRuleCall_1_1_1_1()); }
	)
	(
		{ before(grammarAccess.getNumAccess().getONE_INTTerminalRuleCall_1_1_1_1()); }
		(RULE_ONE_INT)*
		{ after(grammarAccess.getNumAccess().getONE_INTTerminalRuleCall_1_1_1_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Hex__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Hex__Group__0__Impl
	rule__Hex__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Hex__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHexAccess().getHASHMARKTerminalRuleCall_0()); }
	RULE_HASHMARK
	{ after(grammarAccess.getHexAccess().getHASHMARKTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Hex__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Hex__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Hex__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getHexAccess().getGroup_1()); }
		(rule__Hex__Group_1__0)
		{ after(grammarAccess.getHexAccess().getGroup_1()); }
	)
	(
		{ before(grammarAccess.getHexAccess().getGroup_1()); }
		(rule__Hex__Group_1__0)*
		{ after(grammarAccess.getHexAccess().getGroup_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Hex__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Hex__Group_1__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Hex__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHexAccess().getAlternatives_1_0()); }
	(rule__Hex__Alternatives_1_0)
	{ after(grammarAccess.getHexAccess().getAlternatives_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Stylesheet__CharsetAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStylesheetAccess().getCharsetCharsetRuleParserRuleCall_0_0()); }
		ruleCharsetRule
		{ after(grammarAccess.getStylesheetAccess().getCharsetCharsetRuleParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Stylesheet__ImportsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStylesheetAccess().getImportsImportRuleParserRuleCall_1_0()); }
		ruleImportRule
		{ after(grammarAccess.getStylesheetAccess().getImportsImportRuleParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Stylesheet__RulesetAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStylesheetAccess().getRulesetRulesetParserRuleCall_2_0_0()); }
		ruleRuleset
		{ after(grammarAccess.getStylesheetAccess().getRulesetRulesetParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Stylesheet__MediaAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStylesheetAccess().getMediaMediaRuleParserRuleCall_2_1_0()); }
		ruleMediaRule
		{ after(grammarAccess.getStylesheetAccess().getMediaMediaRuleParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Stylesheet__PageAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStylesheetAccess().getPagePageRuleParserRuleCall_2_2_0()); }
		rulePageRule
		{ after(grammarAccess.getStylesheetAccess().getPagePageRuleParserRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Stylesheet__Font_faceAssignment_2_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStylesheetAccess().getFont_faceFontFaceRuleParserRuleCall_2_3_0()); }
		ruleFontFaceRule
		{ after(grammarAccess.getStylesheetAccess().getFont_faceFontFaceRuleParserRuleCall_2_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Stylesheet__KeyframesAssignment_2_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStylesheetAccess().getKeyframesKeyframesRuleParserRuleCall_2_4_0()); }
		ruleKeyframesRule
		{ after(grammarAccess.getStylesheetAccess().getKeyframesKeyframesRuleParserRuleCall_2_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CharsetRule__CharsetAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCharsetRuleAccess().getCharsetCSSSTRINGTerminalRuleCall_1_0()); }
		RULE_CSSSTRING
		{ after(grammarAccess.getCharsetRuleAccess().getCharsetCSSSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportRule__ValueAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportRuleAccess().getValueCSSSTRINGTerminalRuleCall_1_0_0()); }
		RULE_CSSSTRING
		{ after(grammarAccess.getImportRuleAccess().getValueCSSSTRINGTerminalRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportRule__MediaListAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportRuleAccess().getMediaListMediaListParserRuleCall_1_1_1_0()); }
		ruleMediaList
		{ after(grammarAccess.getImportRuleAccess().getMediaListMediaListParserRuleCall_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PageRule__PseudoPageAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPageRuleAccess().getPseudoPagePseudoPageParserRuleCall_2_0()); }
		rulePseudoPage
		{ after(grammarAccess.getPageRuleAccess().getPseudoPagePseudoPageParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PageRule__DeclarationsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPageRuleAccess().getDeclarationsCssDeclarationParserRuleCall_4_0()); }
		ruleCssDeclaration
		{ after(grammarAccess.getPageRuleAccess().getDeclarationsCssDeclarationParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PageRule__DeclarationsAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPageRuleAccess().getDeclarationsCssDeclarationParserRuleCall_5_1_0()); }
		ruleCssDeclaration
		{ after(grammarAccess.getPageRuleAccess().getDeclarationsCssDeclarationParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MediaRule__MedialistAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMediaRuleAccess().getMedialistMediaListParserRuleCall_1_0()); }
		ruleMediaList
		{ after(grammarAccess.getMediaRuleAccess().getMedialistMediaListParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MediaRule__RulesetsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMediaRuleAccess().getRulesetsRulesetParserRuleCall_3_0()); }
		ruleRuleset
		{ after(grammarAccess.getMediaRuleAccess().getRulesetsRulesetParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MediaList__EntryAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMediaListAccess().getEntryMediaParserRuleCall_0_0()); }
		ruleMedia
		{ after(grammarAccess.getMediaListAccess().getEntryMediaParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MediaList__EntryAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMediaListAccess().getEntryMediaParserRuleCall_1_1_0()); }
		ruleMedia
		{ after(grammarAccess.getMediaListAccess().getEntryMediaParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Media__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMediaAccess().getNameIdentifierParserRuleCall_0()); }
		ruleIdentifier
		{ after(grammarAccess.getMediaAccess().getNameIdentifierParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FontFaceRule__DeclarationsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFontFaceRuleAccess().getDeclarationsCssDeclarationParserRuleCall_3_0()); }
		ruleCssDeclaration
		{ after(grammarAccess.getFontFaceRuleAccess().getDeclarationsCssDeclarationParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FontFaceRule__DeclarationsAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFontFaceRuleAccess().getDeclarationsCssDeclarationParserRuleCall_4_1_0()); }
		ruleCssDeclaration
		{ after(grammarAccess.getFontFaceRuleAccess().getDeclarationsCssDeclarationParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyframesRule__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getKeyframesRuleAccess().getNameIdentifierParserRuleCall_2_0()); }
		ruleIdentifier
		{ after(grammarAccess.getKeyframesRuleAccess().getNameIdentifierParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyframesRule__KeyframeselectorsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getKeyframesRuleAccess().getKeyframeselectorsKeyframeSelectorParserRuleCall_4_0()); }
		ruleKeyframeSelector
		{ after(grammarAccess.getKeyframesRuleAccess().getKeyframeselectorsKeyframeSelectorParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyframesRule__KeyframeselectorsAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getKeyframesRuleAccess().getKeyframeselectorsKeyframeSelectorParserRuleCall_5_1_0()); }
		ruleKeyframeSelector
		{ after(grammarAccess.getKeyframesRuleAccess().getKeyframeselectorsKeyframeSelectorParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyframeSelector__TypeAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getKeyframeSelectorAccess().getTypeIdentifierParserRuleCall_0_0_0()); }
		ruleIdentifier
		{ after(grammarAccess.getKeyframeSelectorAccess().getTypeIdentifierParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyframeSelector__PercentageAssignment_0_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getKeyframeSelectorAccess().getPercentageNumParserRuleCall_0_1_0_0()); }
		ruleNum
		{ after(grammarAccess.getKeyframeSelectorAccess().getPercentageNumParserRuleCall_0_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyframeSelector__DeclarationsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getKeyframeSelectorAccess().getDeclarationsCssDeclarationParserRuleCall_2_0()); }
		ruleCssDeclaration
		{ after(grammarAccess.getKeyframeSelectorAccess().getDeclarationsCssDeclarationParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyframeSelector__DeclarationsAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getKeyframeSelectorAccess().getDeclarationsCssDeclarationParserRuleCall_3_1_0()); }
		ruleCssDeclaration
		{ after(grammarAccess.getKeyframeSelectorAccess().getDeclarationsCssDeclarationParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ruleset__SelectorsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRulesetAccess().getSelectorsSelectorParserRuleCall_0_0()); }
		ruleSelector
		{ after(grammarAccess.getRulesetAccess().getSelectorsSelectorParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ruleset__SelectorsAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRulesetAccess().getSelectorsSelectorParserRuleCall_1_2_0()); }
		ruleSelector
		{ after(grammarAccess.getRulesetAccess().getSelectorsSelectorParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ruleset__DeclarationsAssignment_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRulesetAccess().getDeclarationsCssDeclarationParserRuleCall_4_0_0()); }
		ruleCssDeclaration
		{ after(grammarAccess.getRulesetAccess().getDeclarationsCssDeclarationParserRuleCall_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ruleset__DeclarationsAssignment_4_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRulesetAccess().getDeclarationsCssDeclarationParserRuleCall_4_1_1_0()); }
		ruleCssDeclaration
		{ after(grammarAccess.getRulesetAccess().getDeclarationsCssDeclarationParserRuleCall_4_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CssDeclaration__PropertyAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCssDeclarationAccess().getPropertyCssPropertyParserRuleCall_0_0()); }
		ruleCssProperty
		{ after(grammarAccess.getCssDeclarationAccess().getPropertyCssPropertyParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CssDeclaration__ValueTokensAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCssDeclarationAccess().getValueTokensCssTokParserRuleCall_3_0()); }
		ruleCssTok
		{ after(grammarAccess.getCssDeclarationAccess().getValueTokensCssTokParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CssDeclaration__ImportantAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCssDeclarationAccess().getImportantIMPORTANT_SYMTerminalRuleCall_4_0()); }
		RULE_IMPORTANT_SYM
		{ after(grammarAccess.getCssDeclarationAccess().getImportantIMPORTANT_SYMTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__SimpleselectorsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectorAccess().getSimpleselectorsSimpleSelectorParserRuleCall_0_0()); }
		ruleSimpleSelector
		{ after(grammarAccess.getSelectorAccess().getSimpleselectorsSimpleSelectorParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__CombinatorAssignment_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectorAccess().getCombinatorCombinatorParserRuleCall_1_0_0_0()); }
		ruleCombinator
		{ after(grammarAccess.getSelectorAccess().getCombinatorCombinatorParserRuleCall_1_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__SelectorAssignment_1_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectorAccess().getSelectorSelectorParserRuleCall_1_0_2_0()); }
		ruleSelector
		{ after(grammarAccess.getSelectorAccess().getSelectorSelectorParserRuleCall_1_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__CombinatorAssignment_1_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectorAccess().getCombinatorCombinatorParserRuleCall_1_1_1_0_0()); }
		ruleCombinator
		{ after(grammarAccess.getSelectorAccess().getCombinatorCombinatorParserRuleCall_1_1_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__SelectorAssignment_1_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectorAccess().getSelectorSelectorParserRuleCall_1_1_2_0()); }
		ruleSelector
		{ after(grammarAccess.getSelectorAccess().getSelectorSelectorParserRuleCall_1_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSelectorForNegation__ElementAssignment_0_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleSelectorForNegationAccess().getElementElementSelectorParserRuleCall_0_0_0_0()); }
		ruleElementSelector
		{ after(grammarAccess.getSimpleSelectorForNegationAccess().getElementElementSelectorParserRuleCall_0_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSelectorForNegation__UniversalAssignment_0_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleSelectorForNegationAccess().getUniversalUniversalSelectorParserRuleCall_0_0_1_0()); }
		ruleUniversalSelector
		{ after(grammarAccess.getSimpleSelectorForNegationAccess().getUniversalUniversalSelectorParserRuleCall_0_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSelectorForNegation__SubSelectorsAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleSelectorForNegationAccess().getSubSelectorsSubSelectorForNegationParserRuleCall_0_1_0()); }
		ruleSubSelectorForNegation
		{ after(grammarAccess.getSimpleSelectorForNegationAccess().getSubSelectorsSubSelectorForNegationParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSelectorForNegation__SubSelectorsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleSelectorForNegationAccess().getSubSelectorsSubSelectorForNegationParserRuleCall_1_0()); }
		ruleSubSelectorForNegation
		{ after(grammarAccess.getSimpleSelectorForNegationAccess().getSubSelectorsSubSelectorForNegationParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSelector__ElementAssignment_0_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleSelectorAccess().getElementElementSelectorParserRuleCall_0_0_0_0()); }
		ruleElementSelector
		{ after(grammarAccess.getSimpleSelectorAccess().getElementElementSelectorParserRuleCall_0_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSelector__UniversalAssignment_0_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleSelectorAccess().getUniversalUniversalSelectorParserRuleCall_0_0_1_0()); }
		ruleUniversalSelector
		{ after(grammarAccess.getSimpleSelectorAccess().getUniversalUniversalSelectorParserRuleCall_0_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSelector__SubSelectorsAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleSelectorAccess().getSubSelectorsSubSelectorParserRuleCall_0_1_0()); }
		ruleSubSelector
		{ after(grammarAccess.getSimpleSelectorAccess().getSubSelectorsSubSelectorParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSelector__SubSelectorsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleSelectorAccess().getSubSelectorsSubSelectorParserRuleCall_1_0()); }
		ruleSubSelector
		{ after(grammarAccess.getSimpleSelectorAccess().getSubSelectorsSubSelectorParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeSelector__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeSelectorAccess().getNameIdentifierParserRuleCall_2_0()); }
		ruleIdentifier
		{ after(grammarAccess.getAttributeSelectorAccess().getNameIdentifierParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeSelector__OpAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeSelectorAccess().getOpAlternatives_3_0_0()); }
		(rule__AttributeSelector__OpAlternatives_3_0_0)
		{ after(grammarAccess.getAttributeSelectorAccess().getOpAlternatives_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeSelector__ValueAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeSelectorAccess().getValueAlternatives_3_1_0()); }
		(rule__AttributeSelector__ValueAlternatives_3_1_0)
		{ after(grammarAccess.getAttributeSelectorAccess().getValueAlternatives_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassSelector__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassSelectorAccess().getNameIdentifierParserRuleCall_2_0()); }
		ruleIdentifier
		{ after(grammarAccess.getClassSelectorAccess().getNameIdentifierParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementSelector__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementSelectorAccess().getNameIdentifierParserRuleCall_1_0()); }
		ruleIdentifier
		{ after(grammarAccess.getElementSelectorAccess().getNameIdentifierParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UniversalSelector__NamespaceAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUniversalSelectorAccess().getNamespaceCssNamespacePrefixParserRuleCall_1_0()); }
		ruleCssNamespacePrefix
		{ after(grammarAccess.getUniversalSelectorAccess().getNamespaceCssNamespacePrefixParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IdSelector__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIdSelectorAccess().getNameIdentifierParserRuleCall_2_0()); }
		ruleIdentifier
		{ after(grammarAccess.getIdSelectorAccess().getNameIdentifierParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CssProperty__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCssPropertyAccess().getNameValidPropertyIdentParserRuleCall_1_0()); }
		ruleValidPropertyIdent
		{ after(grammarAccess.getCssPropertyAccess().getNameValidPropertyIdentParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PseudoClass__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPseudoClassAccess().getNamePseudoClassNameParserRuleCall_2_0()); }
		rulePseudoClassName
		{ after(grammarAccess.getPseudoClassAccess().getNamePseudoClassNameParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PseudoClassFunction__NotAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPseudoClassFunctionAccess().getNotNotFunctionCallParserRuleCall_0_0_0()); }
		ruleNotFunctionCall
		{ after(grammarAccess.getPseudoClassFunctionAccess().getNotNotFunctionCallParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PseudoClassFunction__ParamSelectorAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPseudoClassFunctionAccess().getParamSelectorSimpleSelectorForNegationParserRuleCall_0_1_0()); }
		ruleSimpleSelectorForNegation
		{ after(grammarAccess.getPseudoClassFunctionAccess().getParamSelectorSimpleSelectorForNegationParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PseudoClassFunction__NameAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPseudoClassFunctionAccess().getNameIdentifierParserRuleCall_1_1_0()); }
		ruleIdentifier
		{ after(grammarAccess.getPseudoClassFunctionAccess().getNameIdentifierParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PseudoClassFunction__ParamsAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPseudoClassFunctionAccess().getParamsCssTokParserRuleCall_1_3_0()); }
		ruleCssTok
		{ after(grammarAccess.getPseudoClassFunctionAccess().getParamsCssTokParserRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolTok__SymbolAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSymbolTokAccess().getSymbolAlternatives_1_0()); }
		(rule__SymbolTok__SymbolAlternatives_1_0)
		{ after(grammarAccess.getSymbolTokAccess().getSymbolAlternatives_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringTok__ValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringTokAccess().getValueCSSSTRINGTerminalRuleCall_1_0()); }
		RULE_CSSSTRING
		{ after(grammarAccess.getStringTokAccess().getValueCSSSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberTok__ValAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumberTokAccess().getValNumParserRuleCall_1_0()); }
		ruleNum
		{ after(grammarAccess.getNumberTokAccess().getValNumParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UrlTok__UrlAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUrlTokAccess().getUrlURLTypeParserRuleCall_1_0()); }
		ruleURLType
		{ after(grammarAccess.getUrlTokAccess().getUrlURLTypeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColorTok__ValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColorTokAccess().getValueHexParserRuleCall_1_0()); }
		ruleHex
		{ after(grammarAccess.getColorTokAccess().getValueHexParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierOrFuncTok__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIdentifierOrFuncTokAccess().getNameIdentifierParserRuleCall_1_0()); }
		ruleIdentifier
		{ after(grammarAccess.getIdentifierOrFuncTokAccess().getNameIdentifierParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierOrFuncTok__ParamsAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIdentifierOrFuncTokAccess().getParamsCssTokParserRuleCall_2_2_0()); }
		ruleCssTok
		{ after(grammarAccess.getIdentifierOrFuncTokAccess().getParamsCssTokParserRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__URLType__UrlAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getURLTypeAccess().getUrlValidURLParserRuleCall_1_0()); }
		ruleValidURL
		{ after(grammarAccess.getURLTypeAccess().getUrlValidURLParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}
