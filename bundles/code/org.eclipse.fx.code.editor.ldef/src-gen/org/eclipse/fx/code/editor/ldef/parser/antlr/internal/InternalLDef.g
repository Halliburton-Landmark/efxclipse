/*
 * generated by Xtext
 */
grammar InternalLDef;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package org.eclipse.fx.code.editor.ldef.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.eclipse.fx.code.editor.ldef.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.eclipse.fx.code.editor.ldef.services.LDefGrammarAccess;

}

@parser::members {

 	private LDefGrammarAccess grammarAccess;
 	
    public InternalLDefParser(TokenStream input, LDefGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Root";	
   	}
   	
   	@Override
   	protected LDefGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleRoot
entryRuleRoot returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRootRule()); }
	 iv_ruleRoot=ruleRoot 
	 { $current=$iv_ruleRoot.current; } 
	 EOF 
;

// Rule Root
ruleRoot returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='package' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRootAccess().getPackageKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRootAccess().getNameQualifiedNameParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleQualifiedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRootRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"QualifiedName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getRootAccess().getImportsImportParserRuleCall_2_0()); 
	    }
		lv_imports_2_0=ruleImport		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRootRule());
	        }
       		add(
       			$current, 
       			"imports",
        		lv_imports_2_0, 
        		"Import");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getRootAccess().getLanguageDefinitionLanguageDefParserRuleCall_3_0()); 
	    }
		lv_languageDefinition_3_0=ruleLanguageDef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRootRule());
	        }
       		set(
       			$current, 
       			"languageDefinition",
        		lv_languageDefinition_3_0, 
        		"LanguageDef");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleValidID
entryRuleValidID returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getValidIDRule()); } 
	 iv_ruleValidID=ruleValidID 
	 { $current=$iv_ruleValidID.current.getText(); }  
	 EOF 
;

// Rule ValidID
ruleValidID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getValidIDAccess().getIDTerminalRuleCall()); 
    }

    ;





// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); } 
	 iv_ruleQualifiedName=ruleQualifiedName 
	 { $current=$iv_ruleQualifiedName.current.getText(); }  
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getQualifiedNameAccess().getValidIDParserRuleCall_0()); 
    }
    this_ValidID_0=ruleValidID    {
		$current.merge(this_ValidID_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }
(((
	'.' 
)=>
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); 
    }
)
    { 
        newCompositeNode(grammarAccess.getQualifiedNameAccess().getValidIDParserRuleCall_1_1()); 
    }
    this_ValidID_2=ruleValidID    {
		$current.merge(this_ValidID_2);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)*)
    ;





// Entry rule entryRuleQualifiedNameWithWildCard
entryRuleQualifiedNameWithWildCard returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getQualifiedNameWithWildCardRule()); } 
	 iv_ruleQualifiedNameWithWildCard=ruleQualifiedNameWithWildCard 
	 { $current=$iv_ruleQualifiedNameWithWildCard.current.getText(); }  
	 EOF 
;

// Rule QualifiedNameWithWildCard
ruleQualifiedNameWithWildCard returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getQualifiedNameWithWildCardAccess().getQualifiedNameParserRuleCall_0()); 
    }
    this_QualifiedName_0=ruleQualifiedName    {
		$current.merge(this_QualifiedName_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }
(
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQualifiedNameWithWildCardAccess().getFullStopKeyword_1_0()); 
    }

	kw='*' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQualifiedNameWithWildCardAccess().getAsteriskKeyword_1_1()); 
    }
)?)
    ;





// Entry rule entryRuleImport
entryRuleImport returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getImportRule()); }
	 iv_ruleImport=ruleImport 
	 { $current=$iv_ruleImport.current; } 
	 EOF 
;

// Rule Import
ruleImport returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='import' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getImportAccess().getImportKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getImportAccess().getImportedNamespaceQualifiedNameWithWildCardParserRuleCall_1_0()); 
	    }
		lv_importedNamespace_1_0=ruleQualifiedNameWithWildCard		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getImportRule());
	        }
       		set(
       			$current, 
       			"importedNamespace",
        		lv_importedNamespace_1_0, 
        		"QualifiedNameWithWildCard");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleLanguageDef
entryRuleLanguageDef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLanguageDefRule()); }
	 iv_ruleLanguageDef=ruleLanguageDef 
	 { $current=$iv_ruleLanguageDef.current; } 
	 EOF 
;

// Rule LanguageDef
ruleLanguageDef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getLanguageDefAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLanguageDefRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getLanguageDefAccess().getLeftCurlyBracketKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLanguageDefAccess().getParitioningParitioningParserRuleCall_2_0()); 
	    }
		lv_paritioning_2_0=ruleParitioning		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLanguageDefRule());
	        }
       		set(
       			$current, 
       			"paritioning",
        		lv_paritioning_2_0, 
        		"Paritioning");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getLanguageDefAccess().getLexicalHighlightingLexicalHighlightingParserRuleCall_3_0()); 
	    }
		lv_lexicalHighlighting_3_0=ruleLexicalHighlighting		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLanguageDefRule());
	        }
       		set(
       			$current, 
       			"lexicalHighlighting",
        		lv_lexicalHighlighting_3_0, 
        		"LexicalHighlighting");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getLanguageDefAccess().getIntegrationIntegrationParserRuleCall_4_0()); 
	    }
		lv_integration_4_0=ruleIntegration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLanguageDefRule());
	        }
       		set(
       			$current, 
       			"integration",
        		lv_integration_4_0, 
        		"Integration");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getLanguageDefAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleIntegration
entryRuleIntegration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIntegrationRule()); }
	 iv_ruleIntegration=ruleIntegration 
	 { $current=$iv_ruleIntegration.current; } 
	 EOF 
;

// Rule Integration
ruleIntegration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='integration' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getIntegrationAccess().getIntegrationKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getIntegrationAccess().getLeftCurlyBracketKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntegrationAccess().getCodeIntegrationListCodeIntegrationParserRuleCall_2_0()); 
	    }
		lv_codeIntegrationList_2_0=ruleCodeIntegration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntegrationRule());
	        }
       		add(
       			$current, 
       			"codeIntegrationList",
        		lv_codeIntegrationList_2_0, 
        		"CodeIntegration");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_3='}' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getIntegrationAccess().getRightCurlyBracketKeyword_3());
    }
)
;





// Entry rule entryRuleCodeIntegration
entryRuleCodeIntegration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCodeIntegrationRule()); }
	 iv_ruleCodeIntegration=ruleCodeIntegration 
	 { $current=$iv_ruleCodeIntegration.current; } 
	 EOF 
;

// Rule CodeIntegration
ruleCodeIntegration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getCodeIntegrationAccess().getJavaFXIntegrationParserRuleCall()); 
    }
    this_JavaFXIntegration_0=ruleJavaFXIntegration
    { 
        $current = $this_JavaFXIntegration_0.current; 
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRuleJavaFXIntegration
entryRuleJavaFXIntegration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getJavaFXIntegrationRule()); }
	 iv_ruleJavaFXIntegration=ruleJavaFXIntegration 
	 { $current=$iv_ruleJavaFXIntegration.current; } 
	 EOF 
;

// Rule JavaFXIntegration
ruleJavaFXIntegration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='javafx' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getJavaFXIntegrationAccess().getJavafxKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getJavaFXIntegrationAccess().getLeftCurlyBracketKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getJavaFXIntegrationAccess().getCodegenerationListCodegenerationParserRuleCall_2_0()); 
	    }
		lv_codegenerationList_2_0=ruleCodegeneration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJavaFXIntegrationRule());
	        }
       		add(
       			$current, 
       			"codegenerationList",
        		lv_codegenerationList_2_0, 
        		"Codegeneration");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_3='}' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getJavaFXIntegrationAccess().getRightCurlyBracketKeyword_3());
    }
)
;





// Entry rule entryRuleCodegeneration
entryRuleCodegeneration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCodegenerationRule()); }
	 iv_ruleCodegeneration=ruleCodegeneration 
	 { $current=$iv_ruleCodegeneration.current; } 
	 EOF 
;

// Rule Codegeneration
ruleCodegeneration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getCodegenerationAccess().getJavaCodeGenerationParserRuleCall_0()); 
    }
    this_JavaCodeGeneration_0=ruleJavaCodeGeneration
    { 
        $current = $this_JavaCodeGeneration_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getCodegenerationAccess().getE4CodeGenerationParserRuleCall_1()); 
    }
    this_E4CodeGeneration_1=ruleE4CodeGeneration
    { 
        $current = $this_E4CodeGeneration_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleJavaCodeGeneration
entryRuleJavaCodeGeneration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getJavaCodeGenerationRule()); }
	 iv_ruleJavaCodeGeneration=ruleJavaCodeGeneration 
	 { $current=$iv_ruleJavaCodeGeneration.current; } 
	 EOF 
;

// Rule JavaCodeGeneration
ruleJavaCodeGeneration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='java' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getJavaCodeGenerationAccess().getJavaKeyword_0());
    }
(
(
		lv_name_1_0=RULE_STRING
		{
			newLeafNode(lv_name_1_0, grammarAccess.getJavaCodeGenerationAccess().getNameSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getJavaCodeGenerationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleE4CodeGeneration
entryRuleE4CodeGeneration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getE4CodeGenerationRule()); }
	 iv_ruleE4CodeGeneration=ruleE4CodeGeneration 
	 { $current=$iv_ruleE4CodeGeneration.current; } 
	 EOF 
;

// Rule E4CodeGeneration
ruleE4CodeGeneration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getE4CodeGenerationAccess().getE4CodeGenerationAction_0(),
            $current);
    }
)	otherlv_1='e4' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getE4CodeGenerationAccess().getE4Keyword_1());
    }
(
(
		lv_name_2_0=RULE_STRING
		{
			newLeafNode(lv_name_2_0, grammarAccess.getE4CodeGenerationAccess().getNameSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getE4CodeGenerationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleParitioning
entryRuleParitioning returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getParitioningRule()); }
	 iv_ruleParitioning=ruleParitioning 
	 { $current=$iv_ruleParitioning.current; } 
	 EOF 
;

// Rule Paritioning
ruleParitioning returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='partitioning' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getParitioningAccess().getPartitioningKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getParitioningAccess().getLeftCurlyBracketKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getParitioningAccess().getPartitionsPartitionParserRuleCall_2_0()); 
	    }
		lv_partitions_2_0=rulePartition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParitioningRule());
	        }
       		add(
       			$current, 
       			"partitions",
        		lv_partitions_2_0, 
        		"Partition");
	        afterParserOrEnumRuleCall();
	    }

)
)+(
(
		{ 
	        newCompositeNode(grammarAccess.getParitioningAccess().getPartitionerPartitionerParserRuleCall_3_0()); 
	    }
		lv_partitioner_3_0=rulePartitioner		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParitioningRule());
	        }
       		set(
       			$current, 
       			"partitioner",
        		lv_partitioner_3_0, 
        		"Partitioner");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getParitioningAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRulePartition
entryRulePartition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPartitionRule()); }
	 iv_rulePartition=rulePartition 
	 { $current=$iv_rulePartition.current; } 
	 EOF 
;

// Rule Partition
rulePartition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='partition' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPartitionAccess().getPartitionKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getPartitionAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPartitionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRulePartitioner
entryRulePartitioner returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPartitionerRule()); }
	 iv_rulePartitioner=rulePartitioner 
	 { $current=$iv_rulePartitioner.current; } 
	 EOF 
;

// Rule Partitioner
rulePartitioner returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getPartitionerAccess().getPartitioner_RuleParserRuleCall_0()); 
    }
    this_Partitioner_Rule_0=rulePartitioner_Rule
    { 
        $current = $this_Partitioner_Rule_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPartitionerAccess().getParitioner_JSParserRuleCall_1()); 
    }
    this_Paritioner_JS_1=ruleParitioner_JS
    { 
        $current = $this_Paritioner_JS_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleParitioner_JS
entryRuleParitioner_JS returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getParitioner_JSRule()); }
	 iv_ruleParitioner_JS=ruleParitioner_JS 
	 { $current=$iv_ruleParitioner_JS.current; } 
	 EOF 
;

// Rule Paritioner_JS
ruleParitioner_JS returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='script' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getParitioner_JSAccess().getScriptKeyword_0());
    }
(
(
		lv_scriptURI_1_0=RULE_STRING
		{
			newLeafNode(lv_scriptURI_1_0, grammarAccess.getParitioner_JSAccess().getScriptURISTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getParitioner_JSRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"scriptURI",
        		lv_scriptURI_1_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRulePartitioner_Rule
entryRulePartitioner_Rule returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPartitioner_RuleRule()); }
	 iv_rulePartitioner_Rule=rulePartitioner_Rule 
	 { $current=$iv_rulePartitioner_Rule.current; } 
	 EOF 
;

// Rule Partitioner_Rule
rulePartitioner_Rule returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='rule' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPartitioner_RuleAccess().getRuleKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPartitioner_RuleAccess().getLeftCurlyBracketKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPartitioner_RuleAccess().getRuleListPartition_RuleParserRuleCall_2_0()); 
	    }
		lv_ruleList_2_0=rulePartition_Rule		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPartitioner_RuleRule());
	        }
       		add(
       			$current, 
       			"ruleList",
        		lv_ruleList_2_0, 
        		"Partition_Rule");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_3='}' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getPartitioner_RuleAccess().getRightCurlyBracketKeyword_3());
    }
)
;





// Entry rule entryRulePartition_Rule
entryRulePartition_Rule returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPartition_RuleRule()); }
	 iv_rulePartition_Rule=rulePartition_Rule 
	 { $current=$iv_rulePartition_Rule.current; } 
	 EOF 
;

// Rule Partition_Rule
rulePartition_Rule returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getPartition_RuleAccess().getPartition_SingleLineRuleParserRuleCall_0()); 
    }
    this_Partition_SingleLineRule_0=rulePartition_SingleLineRule
    { 
        $current = $this_Partition_SingleLineRule_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPartition_RuleAccess().getPartition_MultiLineRuleParserRuleCall_1()); 
    }
    this_Partition_MultiLineRule_1=rulePartition_MultiLineRule
    { 
        $current = $this_Partition_MultiLineRule_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRulePartition_SingleLineRule
entryRulePartition_SingleLineRule returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPartition_SingleLineRuleRule()); }
	 iv_rulePartition_SingleLineRule=rulePartition_SingleLineRule 
	 { $current=$iv_rulePartition_SingleLineRule.current; } 
	 EOF 
;

// Rule Partition_SingleLineRule
rulePartition_SingleLineRule returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='single_line' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPartition_SingleLineRuleAccess().getSingle_lineKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getPartition_SingleLineRuleRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getPartition_SingleLineRuleAccess().getParitionPartitionCrossReference_1_0()); 
	}

)
)(
(
		lv_startSeq_2_0=RULE_STRING
		{
			newLeafNode(lv_startSeq_2_0, grammarAccess.getPartition_SingleLineRuleAccess().getStartSeqSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPartition_SingleLineRuleRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"startSeq",
        		lv_startSeq_2_0, 
        		"STRING");
	    }

)
)	otherlv_3='=>' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getPartition_SingleLineRuleAccess().getEqualsSignGreaterThanSignKeyword_3());
    }
(
(
		lv_endSeq_4_0=RULE_STRING
		{
			newLeafNode(lv_endSeq_4_0, grammarAccess.getPartition_SingleLineRuleAccess().getEndSeqSTRINGTerminalRuleCall_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPartition_SingleLineRuleRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"endSeq",
        		lv_endSeq_4_0, 
        		"STRING");
	    }

)
)?(	otherlv_5='escaped' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getPartition_SingleLineRuleAccess().getEscapedKeyword_5_0());
    }
	otherlv_6='by' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getPartition_SingleLineRuleAccess().getByKeyword_5_1());
    }
(
(
		lv_escapeSeq_7_0=RULE_STRING
		{
			newLeafNode(lv_escapeSeq_7_0, grammarAccess.getPartition_SingleLineRuleAccess().getEscapeSeqSTRINGTerminalRuleCall_5_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPartition_SingleLineRuleRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"escapeSeq",
        		lv_escapeSeq_7_0, 
        		"STRING");
	    }

)
))?)
;





// Entry rule entryRulePartition_MultiLineRule
entryRulePartition_MultiLineRule returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPartition_MultiLineRuleRule()); }
	 iv_rulePartition_MultiLineRule=rulePartition_MultiLineRule 
	 { $current=$iv_rulePartition_MultiLineRule.current; } 
	 EOF 
;

// Rule Partition_MultiLineRule
rulePartition_MultiLineRule returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='multi_line' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPartition_MultiLineRuleAccess().getMulti_lineKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getPartition_MultiLineRuleRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getPartition_MultiLineRuleAccess().getParitionPartitionCrossReference_1_0()); 
	}

)
)(
(
		lv_startSeq_2_0=RULE_STRING
		{
			newLeafNode(lv_startSeq_2_0, grammarAccess.getPartition_MultiLineRuleAccess().getStartSeqSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPartition_MultiLineRuleRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"startSeq",
        		lv_startSeq_2_0, 
        		"STRING");
	    }

)
)	otherlv_3='=>' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getPartition_MultiLineRuleAccess().getEqualsSignGreaterThanSignKeyword_3());
    }
(
(
		lv_endSeq_4_0=RULE_STRING
		{
			newLeafNode(lv_endSeq_4_0, grammarAccess.getPartition_MultiLineRuleAccess().getEndSeqSTRINGTerminalRuleCall_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPartition_MultiLineRuleRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"endSeq",
        		lv_endSeq_4_0, 
        		"STRING");
	    }

)
)(	otherlv_5='escaped' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getPartition_MultiLineRuleAccess().getEscapedKeyword_5_0());
    }
	otherlv_6='by' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getPartition_MultiLineRuleAccess().getByKeyword_5_1());
    }
(
(
		lv_escapeSeq_7_0=RULE_STRING
		{
			newLeafNode(lv_escapeSeq_7_0, grammarAccess.getPartition_MultiLineRuleAccess().getEscapeSeqSTRINGTerminalRuleCall_5_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPartition_MultiLineRuleRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"escapeSeq",
        		lv_escapeSeq_7_0, 
        		"STRING");
	    }

)
))?)
;





// Entry rule entryRuleLexicalHighlighting
entryRuleLexicalHighlighting returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLexicalHighlightingRule()); }
	 iv_ruleLexicalHighlighting=ruleLexicalHighlighting 
	 { $current=$iv_ruleLexicalHighlighting.current; } 
	 EOF 
;

// Rule LexicalHighlighting
ruleLexicalHighlighting returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='lexical_highlighting' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getLexicalHighlightingAccess().getLexical_highlightingKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getLexicalHighlightingAccess().getLeftCurlyBracketKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLexicalHighlightingAccess().getListLexicalPartitionHighlightingParserRuleCall_2_0()); 
	    }
		lv_list_2_0=ruleLexicalPartitionHighlighting		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLexicalHighlightingRule());
	        }
       		add(
       			$current, 
       			"list",
        		lv_list_2_0, 
        		"LexicalPartitionHighlighting");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_3='}' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getLexicalHighlightingAccess().getRightCurlyBracketKeyword_3());
    }
)
;





// Entry rule entryRuleLexicalPartitionHighlighting
entryRuleLexicalPartitionHighlighting returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLexicalPartitionHighlightingRule()); }
	 iv_ruleLexicalPartitionHighlighting=ruleLexicalPartitionHighlighting 
	 { $current=$iv_ruleLexicalPartitionHighlighting.current; } 
	 EOF 
;

// Rule LexicalPartitionHighlighting
ruleLexicalPartitionHighlighting returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getLexicalPartitionHighlightingAccess().getLexicalPartitionHighlighting_RuleParserRuleCall_0()); 
    }
    this_LexicalPartitionHighlighting_Rule_0=ruleLexicalPartitionHighlighting_Rule
    { 
        $current = $this_LexicalPartitionHighlighting_Rule_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getLexicalPartitionHighlightingAccess().getLexicalPartitionHighlighting_JSParserRuleCall_1()); 
    }
    this_LexicalPartitionHighlighting_JS_1=ruleLexicalPartitionHighlighting_JS
    { 
        $current = $this_LexicalPartitionHighlighting_JS_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleLexicalPartitionHighlighting_JS
entryRuleLexicalPartitionHighlighting_JS returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLexicalPartitionHighlighting_JSRule()); }
	 iv_ruleLexicalPartitionHighlighting_JS=ruleLexicalPartitionHighlighting_JS 
	 { $current=$iv_ruleLexicalPartitionHighlighting_JS.current; } 
	 EOF 
;

// Rule LexicalPartitionHighlighting_JS
ruleLexicalPartitionHighlighting_JS returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='script' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getLexicalPartitionHighlighting_JSAccess().getScriptKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getLexicalPartitionHighlighting_JSRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getLexicalPartitionHighlighting_JSAccess().getPartitionPartitionCrossReference_1_0()); 
	}

)
)(
(
		lv_scriptURI_2_0=RULE_STRING
		{
			newLeafNode(lv_scriptURI_2_0, grammarAccess.getLexicalPartitionHighlighting_JSAccess().getScriptURISTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLexicalPartitionHighlighting_JSRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"scriptURI",
        		lv_scriptURI_2_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleLexicalPartitionHighlighting_Rule
entryRuleLexicalPartitionHighlighting_Rule returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLexicalPartitionHighlighting_RuleRule()); }
	 iv_ruleLexicalPartitionHighlighting_Rule=ruleLexicalPartitionHighlighting_Rule 
	 { $current=$iv_ruleLexicalPartitionHighlighting_Rule.current; } 
	 EOF 
;

// Rule LexicalPartitionHighlighting_Rule
ruleLexicalPartitionHighlighting_Rule returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='rule' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getLexicalPartitionHighlighting_RuleAccess().getRuleKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getLexicalPartitionHighlighting_RuleRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getLexicalPartitionHighlighting_RuleAccess().getPartitionPartitionCrossReference_1_0()); 
	}

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getLexicalPartitionHighlighting_RuleAccess().getWhitespaceWhitespaceRuleParserRuleCall_2_0()); 
	    }
		lv_whitespace_2_0=ruleWhitespaceRule		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLexicalPartitionHighlighting_RuleRule());
	        }
       		set(
       			$current, 
       			"whitespace",
        		lv_whitespace_2_0, 
        		"WhitespaceRule");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getLexicalPartitionHighlighting_RuleAccess().getLeftCurlyBracketKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLexicalPartitionHighlighting_RuleAccess().getTokenListTokenParserRuleCall_4_0()); 
	    }
		lv_tokenList_4_0=ruleToken		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLexicalPartitionHighlighting_RuleRule());
	        }
       		add(
       			$current, 
       			"tokenList",
        		lv_tokenList_4_0, 
        		"Token");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getLexicalPartitionHighlighting_RuleAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleToken
entryRuleToken returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTokenRule()); }
	 iv_ruleToken=ruleToken 
	 { $current=$iv_ruleToken.current; } 
	 EOF 
;

// Rule Token
ruleToken returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_default_0_0=	'default' 
    {
        newLeafNode(lv_default_0_0, grammarAccess.getTokenAccess().getDefaultDefaultKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTokenRule());
	        }
       		setWithLastConsumed($current, "default", true, "default");
	    }

)
)?(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getTokenAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTokenRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getTokenAccess().getLeftCurlyBracketKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTokenAccess().getScannerListScannerParserRuleCall_2_1_0()); 
	    }
		lv_scannerList_3_0=ruleScanner		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTokenRule());
	        }
       		add(
       			$current, 
       			"scannerList",
        		lv_scannerList_3_0, 
        		"Scanner");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getTokenAccess().getRightCurlyBracketKeyword_2_2());
    }
)?)
;





// Entry rule entryRuleScanner
entryRuleScanner returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getScannerRule()); }
	 iv_ruleScanner=ruleScanner 
	 { $current=$iv_ruleScanner.current; } 
	 EOF 
;

// Rule Scanner
ruleScanner returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getScannerAccess().getScanner_KeywordParserRuleCall_0()); 
    }
    this_Scanner_Keyword_0=ruleScanner_Keyword
    { 
        $current = $this_Scanner_Keyword_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getScannerAccess().getScanner_RuleParserRuleCall_1()); 
    }
    this_Scanner_Rule_1=ruleScanner_Rule
    { 
        $current = $this_Scanner_Rule_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleScanner_Keyword
entryRuleScanner_Keyword returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getScanner_KeywordRule()); }
	 iv_ruleScanner_Keyword=ruleScanner_Keyword 
	 { $current=$iv_ruleScanner_Keyword.current; } 
	 EOF 
;

// Rule Scanner_Keyword
ruleScanner_Keyword returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='keywords' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getScanner_KeywordAccess().getKeywordsKeyword_0());
    }
	otherlv_1='[' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getScanner_KeywordAccess().getLeftSquareBracketKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getScanner_KeywordAccess().getKeywordsKeywordParserRuleCall_2_0()); 
	    }
		lv_keywords_2_0=ruleKeyword		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getScanner_KeywordRule());
	        }
       		add(
       			$current, 
       			"keywords",
        		lv_keywords_2_0, 
        		"Keyword");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getScanner_KeywordAccess().getCommaKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getScanner_KeywordAccess().getKeywordsKeywordParserRuleCall_3_1_0()); 
	    }
		lv_keywords_4_0=ruleKeyword		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getScanner_KeywordRule());
	        }
       		add(
       			$current, 
       			"keywords",
        		lv_keywords_4_0, 
        		"Keyword");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_5=']' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getScanner_KeywordAccess().getRightSquareBracketKeyword_4());
    }
)
;





// Entry rule entryRuleKeyword
entryRuleKeyword returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getKeywordRule()); }
	 iv_ruleKeyword=ruleKeyword 
	 { $current=$iv_ruleKeyword.current; } 
	 EOF 
;

// Rule Keyword
ruleKeyword returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_STRING
		{
			newLeafNode(lv_name_0_0, grammarAccess.getKeywordAccess().getNameSTRINGTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getKeywordRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"STRING");
	    }

)
)(	otherlv_1='since' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getKeywordAccess().getSinceKeyword_1_0());
    }
(
(
		lv_version_2_0=RULE_STRING
		{
			newLeafNode(lv_version_2_0, grammarAccess.getKeywordAccess().getVersionSTRINGTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getKeywordRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"version",
        		lv_version_2_0, 
        		"STRING");
	    }

)
))?)
;





// Entry rule entryRuleScanner_Rule
entryRuleScanner_Rule returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getScanner_RuleRule()); }
	 iv_ruleScanner_Rule=ruleScanner_Rule 
	 { $current=$iv_ruleScanner_Rule.current; } 
	 EOF 
;

// Rule Scanner_Rule
ruleScanner_Rule returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getScanner_RuleAccess().getScanner_SingleLineRuleParserRuleCall_0()); 
    }
    this_Scanner_SingleLineRule_0=ruleScanner_SingleLineRule
    { 
        $current = $this_Scanner_SingleLineRule_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getScanner_RuleAccess().getScanner_MultiLineRuleParserRuleCall_1()); 
    }
    this_Scanner_MultiLineRule_1=ruleScanner_MultiLineRule
    { 
        $current = $this_Scanner_MultiLineRule_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getScanner_RuleAccess().getScanner_CharacterRuleParserRuleCall_2()); 
    }
    this_Scanner_CharacterRule_2=ruleScanner_CharacterRule
    { 
        $current = $this_Scanner_CharacterRule_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getScanner_RuleAccess().getScanner_JSRuleParserRuleCall_3()); 
    }
    this_Scanner_JSRule_3=ruleScanner_JSRule
    { 
        $current = $this_Scanner_JSRule_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleScanner_SingleLineRule
entryRuleScanner_SingleLineRule returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getScanner_SingleLineRuleRule()); }
	 iv_ruleScanner_SingleLineRule=ruleScanner_SingleLineRule 
	 { $current=$iv_ruleScanner_SingleLineRule.current; } 
	 EOF 
;

// Rule Scanner_SingleLineRule
ruleScanner_SingleLineRule returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='single_line' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getScanner_SingleLineRuleAccess().getSingle_lineKeyword_0());
    }
(
(
		lv_startSeq_1_0=RULE_STRING
		{
			newLeafNode(lv_startSeq_1_0, grammarAccess.getScanner_SingleLineRuleAccess().getStartSeqSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getScanner_SingleLineRuleRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"startSeq",
        		lv_startSeq_1_0, 
        		"STRING");
	    }

)
)	otherlv_2='=>' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getScanner_SingleLineRuleAccess().getEqualsSignGreaterThanSignKeyword_2());
    }
(
(
		lv_endSeq_3_0=RULE_STRING
		{
			newLeafNode(lv_endSeq_3_0, grammarAccess.getScanner_SingleLineRuleAccess().getEndSeqSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getScanner_SingleLineRuleRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"endSeq",
        		lv_endSeq_3_0, 
        		"STRING");
	    }

)
)?(	otherlv_4='escaped' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getScanner_SingleLineRuleAccess().getEscapedKeyword_4_0());
    }
	otherlv_5='by' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getScanner_SingleLineRuleAccess().getByKeyword_4_1());
    }
(
(
		lv_escapeSeq_6_0=RULE_STRING
		{
			newLeafNode(lv_escapeSeq_6_0, grammarAccess.getScanner_SingleLineRuleAccess().getEscapeSeqSTRINGTerminalRuleCall_4_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getScanner_SingleLineRuleRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"escapeSeq",
        		lv_escapeSeq_6_0, 
        		"STRING");
	    }

)
))?)
;





// Entry rule entryRuleScanner_MultiLineRule
entryRuleScanner_MultiLineRule returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getScanner_MultiLineRuleRule()); }
	 iv_ruleScanner_MultiLineRule=ruleScanner_MultiLineRule 
	 { $current=$iv_ruleScanner_MultiLineRule.current; } 
	 EOF 
;

// Rule Scanner_MultiLineRule
ruleScanner_MultiLineRule returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='multi_line' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getScanner_MultiLineRuleAccess().getMulti_lineKeyword_0());
    }
(
(
		lv_startSeq_1_0=RULE_STRING
		{
			newLeafNode(lv_startSeq_1_0, grammarAccess.getScanner_MultiLineRuleAccess().getStartSeqSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getScanner_MultiLineRuleRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"startSeq",
        		lv_startSeq_1_0, 
        		"STRING");
	    }

)
)	otherlv_2='=>' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getScanner_MultiLineRuleAccess().getEqualsSignGreaterThanSignKeyword_2());
    }
(
(
		lv_endSeq_3_0=RULE_STRING
		{
			newLeafNode(lv_endSeq_3_0, grammarAccess.getScanner_MultiLineRuleAccess().getEndSeqSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getScanner_MultiLineRuleRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"endSeq",
        		lv_endSeq_3_0, 
        		"STRING");
	    }

)
)(	otherlv_4='escaped' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getScanner_MultiLineRuleAccess().getEscapedKeyword_4_0());
    }
	otherlv_5='by' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getScanner_MultiLineRuleAccess().getByKeyword_4_1());
    }
(
(
		lv_escapeSeq_6_0=RULE_STRING
		{
			newLeafNode(lv_escapeSeq_6_0, grammarAccess.getScanner_MultiLineRuleAccess().getEscapeSeqSTRINGTerminalRuleCall_4_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getScanner_MultiLineRuleRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"escapeSeq",
        		lv_escapeSeq_6_0, 
        		"STRING");
	    }

)
))?)
;





// Entry rule entryRuleScanner_CharacterRule
entryRuleScanner_CharacterRule returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getScanner_CharacterRuleRule()); }
	 iv_ruleScanner_CharacterRule=ruleScanner_CharacterRule 
	 { $current=$iv_ruleScanner_CharacterRule.current; } 
	 EOF 
;

// Rule Scanner_CharacterRule
ruleScanner_CharacterRule returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='character' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getScanner_CharacterRuleAccess().getCharacterKeyword_0());
    }
	otherlv_1='[' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getScanner_CharacterRuleAccess().getLeftSquareBracketKeyword_1());
    }
(
(
		lv_characters_2_0=RULE_STRING
		{
			newLeafNode(lv_characters_2_0, grammarAccess.getScanner_CharacterRuleAccess().getCharactersSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getScanner_CharacterRuleRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"characters",
        		lv_characters_2_0, 
        		"STRING");
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getScanner_CharacterRuleAccess().getCommaKeyword_3_0());
    }
(
(
		lv_characters_4_0=RULE_STRING
		{
			newLeafNode(lv_characters_4_0, grammarAccess.getScanner_CharacterRuleAccess().getCharactersSTRINGTerminalRuleCall_3_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getScanner_CharacterRuleRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"characters",
        		lv_characters_4_0, 
        		"STRING");
	    }

)
))*	otherlv_5=']' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getScanner_CharacterRuleAccess().getRightSquareBracketKeyword_4());
    }
)
;





// Entry rule entryRuleScanner_JSRule
entryRuleScanner_JSRule returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getScanner_JSRuleRule()); }
	 iv_ruleScanner_JSRule=ruleScanner_JSRule 
	 { $current=$iv_ruleScanner_JSRule.current; } 
	 EOF 
;

// Rule Scanner_JSRule
ruleScanner_JSRule returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='script' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getScanner_JSRuleAccess().getScriptKeyword_0());
    }
(
(
		lv_fileURI_1_0=RULE_STRING
		{
			newLeafNode(lv_fileURI_1_0, grammarAccess.getScanner_JSRuleAccess().getFileURISTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getScanner_JSRuleRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"fileURI",
        		lv_fileURI_1_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleWhitespaceRule
entryRuleWhitespaceRule returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getWhitespaceRuleRule()); }
	 iv_ruleWhitespaceRule=ruleWhitespaceRule 
	 { $current=$iv_ruleWhitespaceRule.current; } 
	 EOF 
;

// Rule WhitespaceRule
ruleWhitespaceRule returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='whitespace' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getWhitespaceRuleAccess().getWhitespaceKeyword_0());
    }
((	otherlv_1='[' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getWhitespaceRuleAccess().getLeftSquareBracketKeyword_1_0_0());
    }
(
(
		lv_characters_2_0=RULE_STRING
		{
			newLeafNode(lv_characters_2_0, grammarAccess.getWhitespaceRuleAccess().getCharactersSTRINGTerminalRuleCall_1_0_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getWhitespaceRuleRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"characters",
        		lv_characters_2_0, 
        		"STRING");
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getWhitespaceRuleAccess().getCommaKeyword_1_0_2_0());
    }
(
(
		lv_characters_4_0=RULE_STRING
		{
			newLeafNode(lv_characters_4_0, grammarAccess.getWhitespaceRuleAccess().getCharactersSTRINGTerminalRuleCall_1_0_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getWhitespaceRuleRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"characters",
        		lv_characters_4_0, 
        		"STRING");
	    }

)
))*	otherlv_5=']' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getWhitespaceRuleAccess().getRightSquareBracketKeyword_1_0_3());
    }
)
    |(
(
		lv_javawhitespace_6_0=	'javawhitespace' 
    {
        newLeafNode(lv_javawhitespace_6_0, grammarAccess.getWhitespaceRuleAccess().getJavawhitespaceJavawhitespaceKeyword_1_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getWhitespaceRuleRule());
	        }
       		setWithLastConsumed($current, "javawhitespace", true, "javawhitespace");
	    }

)
)
    |(
(
		lv_fileURI_7_0=RULE_STRING
		{
			newLeafNode(lv_fileURI_7_0, grammarAccess.getWhitespaceRuleAccess().getFileURISTRINGTerminalRuleCall_1_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getWhitespaceRuleRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"fileURI",
        		lv_fileURI_7_0, 
        		"STRING");
	    }

)
)))
;





RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


