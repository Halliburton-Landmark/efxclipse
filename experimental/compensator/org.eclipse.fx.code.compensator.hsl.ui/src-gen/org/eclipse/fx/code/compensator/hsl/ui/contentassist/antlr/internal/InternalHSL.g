/*
* generated by Xtext
*/
grammar InternalHSL;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package org.eclipse.fx.code.compensator.hsl.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.eclipse.fx.code.compensator.hsl.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.eclipse.fx.code.compensator.hsl.services.HSLGrammarAccess;

}

@parser::members {
 
 	private HSLGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(HSLGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleModel
entryRuleModel 
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelAccess().getGroup()); }
(rule__Model__Group__0)
{ after(grammarAccess.getModelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePartition
entryRulePartition 
:
{ before(grammarAccess.getPartitionRule()); }
	 rulePartition
{ after(grammarAccess.getPartitionRule()); } 
	 EOF 
;

// Rule Partition
rulePartition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPartitionAccess().getGroup()); }
(rule__Partition__Group__0)
{ after(grammarAccess.getPartitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePartitioner
entryRulePartitioner 
:
{ before(grammarAccess.getPartitionerRule()); }
	 rulePartitioner
{ after(grammarAccess.getPartitionerRule()); } 
	 EOF 
;

// Rule Partitioner
rulePartitioner
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPartitionerAccess().getAlternatives()); }
(rule__Partitioner__Alternatives)
{ after(grammarAccess.getPartitionerAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRulePartitioner
entryRuleRulePartitioner 
:
{ before(grammarAccess.getRulePartitionerRule()); }
	 ruleRulePartitioner
{ after(grammarAccess.getRulePartitionerRule()); } 
	 EOF 
;

// Rule RulePartitioner
ruleRulePartitioner
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRulePartitionerAccess().getGroup()); }
(rule__RulePartitioner__Group__0)
{ after(grammarAccess.getRulePartitionerAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleJSParitioner
entryRuleJSParitioner 
:
{ before(grammarAccess.getJSParitionerRule()); }
	 ruleJSParitioner
{ after(grammarAccess.getJSParitionerRule()); } 
	 EOF 
;

// Rule JSParitioner
ruleJSParitioner
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJSParitionerAccess().getGroup()); }
(rule__JSParitioner__Group__0)
{ after(grammarAccess.getJSParitionerAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleScanner
entryRuleScanner 
:
{ before(grammarAccess.getScannerRule()); }
	 ruleScanner
{ after(grammarAccess.getScannerRule()); } 
	 EOF 
;

// Rule Scanner
ruleScanner
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getScannerAccess().getGroup()); }
(rule__Scanner__Group__0)
{ after(grammarAccess.getScannerAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleScannerToken
entryRuleScannerToken 
:
{ before(grammarAccess.getScannerTokenRule()); }
	 ruleScannerToken
{ after(grammarAccess.getScannerTokenRule()); } 
	 EOF 
;

// Rule ScannerToken
ruleScannerToken
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getScannerTokenAccess().getGroup()); }
(rule__ScannerToken__Group__0)
{ after(grammarAccess.getScannerTokenAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleKeywordGroup
entryRuleKeywordGroup 
:
{ before(grammarAccess.getKeywordGroupRule()); }
	 ruleKeywordGroup
{ after(grammarAccess.getKeywordGroupRule()); } 
	 EOF 
;

// Rule KeywordGroup
ruleKeywordGroup
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getKeywordGroupAccess().getGroup()); }
(rule__KeywordGroup__Group__0)
{ after(grammarAccess.getKeywordGroupAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleKeyword
entryRuleKeyword 
:
{ before(grammarAccess.getKeywordRule()); }
	 ruleKeyword
{ after(grammarAccess.getKeywordRule()); } 
	 EOF 
;

// Rule Keyword
ruleKeyword
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getKeywordAccess().getGroup()); }
(rule__Keyword__Group__0)
{ after(grammarAccess.getKeywordAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleScannerRule
entryRuleScannerRule 
:
{ before(grammarAccess.getScannerRuleRule()); }
	 ruleScannerRule
{ after(grammarAccess.getScannerRuleRule()); } 
	 EOF 
;

// Rule ScannerRule
ruleScannerRule
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getScannerRuleAccess().getAlternatives()); }
(rule__ScannerRule__Alternatives)
{ after(grammarAccess.getScannerRuleAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParitionRule
entryRuleParitionRule 
:
{ before(grammarAccess.getParitionRuleRule()); }
	 ruleParitionRule
{ after(grammarAccess.getParitionRuleRule()); } 
	 EOF 
;

// Rule ParitionRule
ruleParitionRule
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParitionRuleAccess().getAlternatives()); }
(rule__ParitionRule__Alternatives)
{ after(grammarAccess.getParitionRuleAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleScannerSingleLineRule
entryRuleScannerSingleLineRule 
:
{ before(grammarAccess.getScannerSingleLineRuleRule()); }
	 ruleScannerSingleLineRule
{ after(grammarAccess.getScannerSingleLineRuleRule()); } 
	 EOF 
;

// Rule ScannerSingleLineRule
ruleScannerSingleLineRule
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getScannerSingleLineRuleAccess().getGroup()); }
(rule__ScannerSingleLineRule__Group__0)
{ after(grammarAccess.getScannerSingleLineRuleAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePartitionSingleLineRule
entryRulePartitionSingleLineRule 
:
{ before(grammarAccess.getPartitionSingleLineRuleRule()); }
	 rulePartitionSingleLineRule
{ after(grammarAccess.getPartitionSingleLineRuleRule()); } 
	 EOF 
;

// Rule PartitionSingleLineRule
rulePartitionSingleLineRule
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPartitionSingleLineRuleAccess().getGroup()); }
(rule__PartitionSingleLineRule__Group__0)
{ after(grammarAccess.getPartitionSingleLineRuleAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleScannerMultiLineRule
entryRuleScannerMultiLineRule 
:
{ before(grammarAccess.getScannerMultiLineRuleRule()); }
	 ruleScannerMultiLineRule
{ after(grammarAccess.getScannerMultiLineRuleRule()); } 
	 EOF 
;

// Rule ScannerMultiLineRule
ruleScannerMultiLineRule
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getScannerMultiLineRuleAccess().getGroup()); }
(rule__ScannerMultiLineRule__Group__0)
{ after(grammarAccess.getScannerMultiLineRuleAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePartitionMultiLineRule
entryRulePartitionMultiLineRule 
:
{ before(grammarAccess.getPartitionMultiLineRuleRule()); }
	 rulePartitionMultiLineRule
{ after(grammarAccess.getPartitionMultiLineRuleRule()); } 
	 EOF 
;

// Rule PartitionMultiLineRule
rulePartitionMultiLineRule
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPartitionMultiLineRuleAccess().getGroup()); }
(rule__PartitionMultiLineRule__Group__0)
{ after(grammarAccess.getPartitionMultiLineRuleAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleScannerCharacterRule
entryRuleScannerCharacterRule 
:
{ before(grammarAccess.getScannerCharacterRuleRule()); }
	 ruleScannerCharacterRule
{ after(grammarAccess.getScannerCharacterRuleRule()); } 
	 EOF 
;

// Rule ScannerCharacterRule
ruleScannerCharacterRule
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getScannerCharacterRuleAccess().getGroup()); }
(rule__ScannerCharacterRule__Group__0)
{ after(grammarAccess.getScannerCharacterRuleAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleScannerJSRule
entryRuleScannerJSRule 
:
{ before(grammarAccess.getScannerJSRuleRule()); }
	 ruleScannerJSRule
{ after(grammarAccess.getScannerJSRuleRule()); } 
	 EOF 
;

// Rule ScannerJSRule
ruleScannerJSRule
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getScannerJSRuleAccess().getGroup()); }
(rule__ScannerJSRule__Group__0)
{ after(grammarAccess.getScannerJSRuleAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePartitionJSRule
entryRulePartitionJSRule 
:
{ before(grammarAccess.getPartitionJSRuleRule()); }
	 rulePartitionJSRule
{ after(grammarAccess.getPartitionJSRuleRule()); } 
	 EOF 
;

// Rule PartitionJSRule
rulePartitionJSRule
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPartitionJSRuleAccess().getGroup()); }
(rule__PartitionJSRule__Group__0)
{ after(grammarAccess.getPartitionJSRuleAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleScannerWhitespaceRule
entryRuleScannerWhitespaceRule 
:
{ before(grammarAccess.getScannerWhitespaceRuleRule()); }
	 ruleScannerWhitespaceRule
{ after(grammarAccess.getScannerWhitespaceRuleRule()); } 
	 EOF 
;

// Rule ScannerWhitespaceRule
ruleScannerWhitespaceRule
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getScannerWhitespaceRuleAccess().getAlternatives()); }
(rule__ScannerWhitespaceRule__Alternatives)
{ after(grammarAccess.getScannerWhitespaceRuleAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleColor
entryRuleColor 
:
{ before(grammarAccess.getColorRule()); }
	 ruleColor
{ after(grammarAccess.getColorRule()); } 
	 EOF 
;

// Rule Color
ruleColor
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getColorAccess().getRGBColorParserRuleCall()); }
	ruleRGBColor
{ after(grammarAccess.getColorAccess().getRGBColorParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRGBColor
entryRuleRGBColor 
:
{ before(grammarAccess.getRGBColorRule()); }
	 ruleRGBColor
{ after(grammarAccess.getRGBColorRule()); } 
	 EOF 
;

// Rule RGBColor
ruleRGBColor
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRGBColorAccess().getGroup()); }
(rule__RGBColor__Group__0)
{ after(grammarAccess.getRGBColorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFont
entryRuleFont 
:
{ before(grammarAccess.getFontRule()); }
	 ruleFont
{ after(grammarAccess.getFontRule()); } 
	 EOF 
;

// Rule Font
ruleFont
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFontAccess().getGroup()); }
(rule__Font__Group__0)
{ after(grammarAccess.getFontAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




// Rule FontType
ruleFontType
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFontTypeAccess().getAlternatives()); }
(rule__FontType__Alternatives)
{ after(grammarAccess.getFontTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Partitioner__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPartitionerAccess().getRulePartitionerParserRuleCall_0()); }
	ruleRulePartitioner
{ after(grammarAccess.getPartitionerAccess().getRulePartitionerParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getPartitionerAccess().getJSParitionerParserRuleCall_1()); }
	ruleJSParitioner
{ after(grammarAccess.getPartitionerAccess().getJSParitionerParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ScannerRule__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScannerRuleAccess().getScannerSingleLineRuleParserRuleCall_0()); }
	ruleScannerSingleLineRule
{ after(grammarAccess.getScannerRuleAccess().getScannerSingleLineRuleParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getScannerRuleAccess().getScannerMultiLineRuleParserRuleCall_1()); }
	ruleScannerMultiLineRule
{ after(grammarAccess.getScannerRuleAccess().getScannerMultiLineRuleParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getScannerRuleAccess().getScannerCharacterRuleParserRuleCall_2()); }
	ruleScannerCharacterRule
{ after(grammarAccess.getScannerRuleAccess().getScannerCharacterRuleParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getScannerRuleAccess().getScannerJSRuleParserRuleCall_3()); }
	ruleScannerJSRule
{ after(grammarAccess.getScannerRuleAccess().getScannerJSRuleParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getScannerRuleAccess().getScannerWhitespaceRuleParserRuleCall_4()); }
	ruleScannerWhitespaceRule
{ after(grammarAccess.getScannerRuleAccess().getScannerWhitespaceRuleParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParitionRule__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParitionRuleAccess().getPartitionSingleLineRuleParserRuleCall_0()); }
	rulePartitionSingleLineRule
{ after(grammarAccess.getParitionRuleAccess().getPartitionSingleLineRuleParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getParitionRuleAccess().getPartitionMultiLineRuleParserRuleCall_1()); }
	rulePartitionMultiLineRule
{ after(grammarAccess.getParitionRuleAccess().getPartitionMultiLineRuleParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getParitionRuleAccess().getPartitionJSRuleParserRuleCall_2()); }
	rulePartitionJSRule
{ after(grammarAccess.getParitionRuleAccess().getPartitionJSRuleParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ScannerWhitespaceRule__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScannerWhitespaceRuleAccess().getGroup_0()); }
(rule__ScannerWhitespaceRule__Group_0__0)
{ after(grammarAccess.getScannerWhitespaceRuleAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getScannerWhitespaceRuleAccess().getGroup_1()); }
(rule__ScannerWhitespaceRule__Group_1__0)
{ after(grammarAccess.getScannerWhitespaceRuleAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FontType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFontTypeAccess().getBoldEnumLiteralDeclaration_0()); }
(	'bold' 
)
{ after(grammarAccess.getFontTypeAccess().getBoldEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getFontTypeAccess().getItalicEnumLiteralDeclaration_1()); }
(	'italic' 
)
{ after(grammarAccess.getFontTypeAccess().getItalicEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getFontTypeAccess().getUnderlineEnumLiteralDeclaration_2()); }
(	'underline' 
)
{ after(grammarAccess.getFontTypeAccess().getUnderlineEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getFontTypeAccess().getStrike_throughEnumLiteralDeclaration_3()); }
(	'strike-through' 
)
{ after(grammarAccess.getFontTypeAccess().getStrike_throughEnumLiteralDeclaration_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Model__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getNameAssignment_0()); }
(rule__Model__NameAssignment_0)
{ after(grammarAccess.getModelAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__1__Impl
	rule__Model__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getModelAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__2__Impl
	rule__Model__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getModelAccess().getPartitionsAssignment_2()); }
(rule__Model__PartitionsAssignment_2)
{ after(grammarAccess.getModelAccess().getPartitionsAssignment_2()); }
)
(
{ before(grammarAccess.getModelAccess().getPartitionsAssignment_2()); }
(rule__Model__PartitionsAssignment_2)*
{ after(grammarAccess.getModelAccess().getPartitionsAssignment_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__3__Impl
	rule__Model__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getModelAccess().getScannerAssignment_3()); }
(rule__Model__ScannerAssignment_3)
{ after(grammarAccess.getModelAccess().getScannerAssignment_3()); }
)
(
{ before(grammarAccess.getModelAccess().getScannerAssignment_3()); }
(rule__Model__ScannerAssignment_3)*
{ after(grammarAccess.getModelAccess().getScannerAssignment_3()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__4__Impl
	rule__Model__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getPartitionerAssignment_4()); }
(rule__Model__PartitionerAssignment_4)
{ after(grammarAccess.getModelAccess().getPartitionerAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getModelAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Partition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Partition__Group__0__Impl
	rule__Partition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Partition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPartitionAccess().getPartitionKeyword_0()); }

	'partition' 

{ after(grammarAccess.getPartitionAccess().getPartitionKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Partition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Partition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Partition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPartitionAccess().getNameAssignment_1()); }
(rule__Partition__NameAssignment_1)
{ after(grammarAccess.getPartitionAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RulePartitioner__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RulePartitioner__Group__0__Impl
	rule__RulePartitioner__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RulePartitioner__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRulePartitionerAccess().getRulePartitionerKeyword_0()); }

	'rule-partitioner' 

{ after(grammarAccess.getRulePartitionerAccess().getRulePartitionerKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RulePartitioner__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RulePartitioner__Group__1__Impl
	rule__RulePartitioner__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RulePartitioner__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRulePartitionerAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getRulePartitionerAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RulePartitioner__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RulePartitioner__Group__2__Impl
	rule__RulePartitioner__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RulePartitioner__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getRulePartitionerAccess().getRulesAssignment_2()); }
(rule__RulePartitioner__RulesAssignment_2)
{ after(grammarAccess.getRulePartitionerAccess().getRulesAssignment_2()); }
)
(
{ before(grammarAccess.getRulePartitionerAccess().getRulesAssignment_2()); }
(rule__RulePartitioner__RulesAssignment_2)*
{ after(grammarAccess.getRulePartitionerAccess().getRulesAssignment_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RulePartitioner__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RulePartitioner__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RulePartitioner__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRulePartitionerAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getRulePartitionerAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__JSParitioner__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JSParitioner__Group__0__Impl
	rule__JSParitioner__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JSParitioner__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJSParitionerAccess().getJsPartitionerKeyword_0()); }

	'js-partitioner' 

{ after(grammarAccess.getJSParitionerAccess().getJsPartitionerKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JSParitioner__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JSParitioner__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JSParitioner__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJSParitionerAccess().getFileURIAssignment_1()); }
(rule__JSParitioner__FileURIAssignment_1)
{ after(grammarAccess.getJSParitionerAccess().getFileURIAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Scanner__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Scanner__Group__0__Impl
	rule__Scanner__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Scanner__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScannerAccess().getScannerKeyword_0()); }

	'scanner' 

{ after(grammarAccess.getScannerAccess().getScannerKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Scanner__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Scanner__Group__1__Impl
	rule__Scanner__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Scanner__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScannerAccess().getPartitionAssignment_1()); }
(rule__Scanner__PartitionAssignment_1)
{ after(grammarAccess.getScannerAccess().getPartitionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Scanner__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Scanner__Group__2__Impl
	rule__Scanner__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Scanner__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScannerAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getScannerAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Scanner__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Scanner__Group__3__Impl
	rule__Scanner__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Scanner__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScannerAccess().getTokensAssignment_3()); }
(rule__Scanner__TokensAssignment_3)*
{ after(grammarAccess.getScannerAccess().getTokensAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Scanner__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Scanner__Group__4__Impl
	rule__Scanner__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Scanner__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScannerAccess().getKeywordGroupsAssignment_4()); }
(rule__Scanner__KeywordGroupsAssignment_4)*
{ after(grammarAccess.getScannerAccess().getKeywordGroupsAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Scanner__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Scanner__Group__5__Impl
	rule__Scanner__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Scanner__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getScannerAccess().getRulesAssignment_5()); }
(rule__Scanner__RulesAssignment_5)
{ after(grammarAccess.getScannerAccess().getRulesAssignment_5()); }
)
(
{ before(grammarAccess.getScannerAccess().getRulesAssignment_5()); }
(rule__Scanner__RulesAssignment_5)*
{ after(grammarAccess.getScannerAccess().getRulesAssignment_5()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Scanner__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Scanner__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Scanner__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScannerAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getScannerAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__ScannerToken__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScannerToken__Group__0__Impl
	rule__ScannerToken__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ScannerToken__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScannerTokenAccess().getDefaultAssignment_0()); }
(rule__ScannerToken__DefaultAssignment_0)?
{ after(grammarAccess.getScannerTokenAccess().getDefaultAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ScannerToken__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScannerToken__Group__1__Impl
	rule__ScannerToken__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ScannerToken__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScannerTokenAccess().getTokenKeyword_1()); }

	'token' 

{ after(grammarAccess.getScannerTokenAccess().getTokenKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ScannerToken__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScannerToken__Group__2__Impl
	rule__ScannerToken__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ScannerToken__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScannerTokenAccess().getNameAssignment_2()); }
(rule__ScannerToken__NameAssignment_2)
{ after(grammarAccess.getScannerTokenAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ScannerToken__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScannerToken__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ScannerToken__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScannerTokenAccess().getGroup_3()); }
(rule__ScannerToken__Group_3__0)?
{ after(grammarAccess.getScannerTokenAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ScannerToken__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScannerToken__Group_3__0__Impl
	rule__ScannerToken__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ScannerToken__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScannerTokenAccess().getLeftCurlyBracketKeyword_3_0()); }

	'{' 

{ after(grammarAccess.getScannerTokenAccess().getLeftCurlyBracketKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ScannerToken__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScannerToken__Group_3__1__Impl
	rule__ScannerToken__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ScannerToken__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScannerTokenAccess().getGroup_3_1()); }
(rule__ScannerToken__Group_3_1__0)?
{ after(grammarAccess.getScannerTokenAccess().getGroup_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ScannerToken__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScannerToken__Group_3__2__Impl
	rule__ScannerToken__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ScannerToken__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScannerTokenAccess().getGroup_3_2()); }
(rule__ScannerToken__Group_3_2__0)?
{ after(grammarAccess.getScannerTokenAccess().getGroup_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ScannerToken__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScannerToken__Group_3__3__Impl
	rule__ScannerToken__Group_3__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ScannerToken__Group_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScannerTokenAccess().getGroup_3_3()); }
(rule__ScannerToken__Group_3_3__0)?
{ after(grammarAccess.getScannerTokenAccess().getGroup_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ScannerToken__Group_3__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScannerToken__Group_3__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ScannerToken__Group_3__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScannerTokenAccess().getRightCurlyBracketKeyword_3_4()); }

	'}' 

{ after(grammarAccess.getScannerTokenAccess().getRightCurlyBracketKeyword_3_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ScannerToken__Group_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScannerToken__Group_3_1__0__Impl
	rule__ScannerToken__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ScannerToken__Group_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScannerTokenAccess().getFgcolorKeyword_3_1_0()); }

	'fgcolor' 

{ after(grammarAccess.getScannerTokenAccess().getFgcolorKeyword_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ScannerToken__Group_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScannerToken__Group_3_1__1__Impl
	rule__ScannerToken__Group_3_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ScannerToken__Group_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScannerTokenAccess().getColonKeyword_3_1_1()); }

	':' 

{ after(grammarAccess.getScannerTokenAccess().getColonKeyword_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ScannerToken__Group_3_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScannerToken__Group_3_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ScannerToken__Group_3_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScannerTokenAccess().getFgColorAssignment_3_1_2()); }
(rule__ScannerToken__FgColorAssignment_3_1_2)
{ after(grammarAccess.getScannerTokenAccess().getFgColorAssignment_3_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ScannerToken__Group_3_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScannerToken__Group_3_2__0__Impl
	rule__ScannerToken__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ScannerToken__Group_3_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScannerTokenAccess().getBgcolorKeyword_3_2_0()); }

	'bgcolor' 

{ after(grammarAccess.getScannerTokenAccess().getBgcolorKeyword_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ScannerToken__Group_3_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScannerToken__Group_3_2__1__Impl
	rule__ScannerToken__Group_3_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ScannerToken__Group_3_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScannerTokenAccess().getColonKeyword_3_2_1()); }

	':' 

{ after(grammarAccess.getScannerTokenAccess().getColonKeyword_3_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ScannerToken__Group_3_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScannerToken__Group_3_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ScannerToken__Group_3_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScannerTokenAccess().getBgColorAssignment_3_2_2()); }
(rule__ScannerToken__BgColorAssignment_3_2_2)
{ after(grammarAccess.getScannerTokenAccess().getBgColorAssignment_3_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ScannerToken__Group_3_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScannerToken__Group_3_3__0__Impl
	rule__ScannerToken__Group_3_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ScannerToken__Group_3_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScannerTokenAccess().getFontKeyword_3_3_0()); }

	'font' 

{ after(grammarAccess.getScannerTokenAccess().getFontKeyword_3_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ScannerToken__Group_3_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScannerToken__Group_3_3__1__Impl
	rule__ScannerToken__Group_3_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ScannerToken__Group_3_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScannerTokenAccess().getColonKeyword_3_3_1()); }

	':' 

{ after(grammarAccess.getScannerTokenAccess().getColonKeyword_3_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ScannerToken__Group_3_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScannerToken__Group_3_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ScannerToken__Group_3_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScannerTokenAccess().getFontAssignment_3_3_2()); }
(rule__ScannerToken__FontAssignment_3_3_2)
{ after(grammarAccess.getScannerTokenAccess().getFontAssignment_3_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__KeywordGroup__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeywordGroup__Group__0__Impl
	rule__KeywordGroup__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__KeywordGroup__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeywordGroupAccess().getKeywordsKeyword_0()); }

	'keywords' 

{ after(grammarAccess.getKeywordGroupAccess().getKeywordsKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeywordGroup__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeywordGroup__Group__1__Impl
	rule__KeywordGroup__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__KeywordGroup__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeywordGroupAccess().getTokenAssignment_1()); }
(rule__KeywordGroup__TokenAssignment_1)
{ after(grammarAccess.getKeywordGroupAccess().getTokenAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeywordGroup__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeywordGroup__Group__2__Impl
	rule__KeywordGroup__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__KeywordGroup__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeywordGroupAccess().getLeftSquareBracketKeyword_2()); }

	'[' 

{ after(grammarAccess.getKeywordGroupAccess().getLeftSquareBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeywordGroup__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeywordGroup__Group__3__Impl
	rule__KeywordGroup__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__KeywordGroup__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeywordGroupAccess().getKeywordsAssignment_3()); }
(rule__KeywordGroup__KeywordsAssignment_3)
{ after(grammarAccess.getKeywordGroupAccess().getKeywordsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeywordGroup__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeywordGroup__Group__4__Impl
	rule__KeywordGroup__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__KeywordGroup__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeywordGroupAccess().getGroup_4()); }
(rule__KeywordGroup__Group_4__0)*
{ after(grammarAccess.getKeywordGroupAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeywordGroup__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeywordGroup__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__KeywordGroup__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeywordGroupAccess().getRightSquareBracketKeyword_5()); }

	']' 

{ after(grammarAccess.getKeywordGroupAccess().getRightSquareBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__KeywordGroup__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeywordGroup__Group_4__0__Impl
	rule__KeywordGroup__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__KeywordGroup__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeywordGroupAccess().getCommaKeyword_4_0()); }

	',' 

{ after(grammarAccess.getKeywordGroupAccess().getCommaKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeywordGroup__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeywordGroup__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__KeywordGroup__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeywordGroupAccess().getKeywordsAssignment_4_1()); }
(rule__KeywordGroup__KeywordsAssignment_4_1)
{ after(grammarAccess.getKeywordGroupAccess().getKeywordsAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Keyword__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Keyword__Group__0__Impl
	rule__Keyword__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Keyword__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeywordAccess().getNameAssignment_0()); }
(rule__Keyword__NameAssignment_0)
{ after(grammarAccess.getKeywordAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Keyword__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Keyword__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Keyword__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeywordAccess().getGroup_1()); }
(rule__Keyword__Group_1__0)?
{ after(grammarAccess.getKeywordAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Keyword__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Keyword__Group_1__0__Impl
	rule__Keyword__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Keyword__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeywordAccess().getSinceKeyword_1_0()); }

	'since' 

{ after(grammarAccess.getKeywordAccess().getSinceKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Keyword__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Keyword__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Keyword__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeywordAccess().getVersionAssignment_1_1()); }
(rule__Keyword__VersionAssignment_1_1)
{ after(grammarAccess.getKeywordAccess().getVersionAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ScannerSingleLineRule__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScannerSingleLineRule__Group__0__Impl
	rule__ScannerSingleLineRule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ScannerSingleLineRule__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScannerSingleLineRuleAccess().getSingleLineKeyword_0()); }

	'single-line' 

{ after(grammarAccess.getScannerSingleLineRuleAccess().getSingleLineKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ScannerSingleLineRule__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScannerSingleLineRule__Group__1__Impl
	rule__ScannerSingleLineRule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ScannerSingleLineRule__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScannerSingleLineRuleAccess().getTokenAssignment_1()); }
(rule__ScannerSingleLineRule__TokenAssignment_1)
{ after(grammarAccess.getScannerSingleLineRuleAccess().getTokenAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ScannerSingleLineRule__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScannerSingleLineRule__Group__2__Impl
	rule__ScannerSingleLineRule__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ScannerSingleLineRule__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScannerSingleLineRuleAccess().getStartSeqAssignment_2()); }
(rule__ScannerSingleLineRule__StartSeqAssignment_2)
{ after(grammarAccess.getScannerSingleLineRuleAccess().getStartSeqAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ScannerSingleLineRule__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScannerSingleLineRule__Group__3__Impl
	rule__ScannerSingleLineRule__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ScannerSingleLineRule__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScannerSingleLineRuleAccess().getEqualsSignGreaterThanSignKeyword_3()); }

	'=>' 

{ after(grammarAccess.getScannerSingleLineRuleAccess().getEqualsSignGreaterThanSignKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ScannerSingleLineRule__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScannerSingleLineRule__Group__4__Impl
	rule__ScannerSingleLineRule__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ScannerSingleLineRule__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScannerSingleLineRuleAccess().getEndSeqAssignment_4()); }
(rule__ScannerSingleLineRule__EndSeqAssignment_4)
{ after(grammarAccess.getScannerSingleLineRuleAccess().getEndSeqAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ScannerSingleLineRule__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScannerSingleLineRule__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ScannerSingleLineRule__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScannerSingleLineRuleAccess().getGroup_5()); }
(rule__ScannerSingleLineRule__Group_5__0)?
{ after(grammarAccess.getScannerSingleLineRuleAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__ScannerSingleLineRule__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScannerSingleLineRule__Group_5__0__Impl
	rule__ScannerSingleLineRule__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ScannerSingleLineRule__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScannerSingleLineRuleAccess().getEscapedKeyword_5_0()); }

	'escaped' 

{ after(grammarAccess.getScannerSingleLineRuleAccess().getEscapedKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ScannerSingleLineRule__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScannerSingleLineRule__Group_5__1__Impl
	rule__ScannerSingleLineRule__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ScannerSingleLineRule__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScannerSingleLineRuleAccess().getByKeyword_5_1()); }

	'by' 

{ after(grammarAccess.getScannerSingleLineRuleAccess().getByKeyword_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ScannerSingleLineRule__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScannerSingleLineRule__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ScannerSingleLineRule__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScannerSingleLineRuleAccess().getEscapeSeqAssignment_5_2()); }
(rule__ScannerSingleLineRule__EscapeSeqAssignment_5_2)
{ after(grammarAccess.getScannerSingleLineRuleAccess().getEscapeSeqAssignment_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PartitionSingleLineRule__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PartitionSingleLineRule__Group__0__Impl
	rule__PartitionSingleLineRule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PartitionSingleLineRule__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPartitionSingleLineRuleAccess().getSingleLineKeyword_0()); }

	'single-line' 

{ after(grammarAccess.getPartitionSingleLineRuleAccess().getSingleLineKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PartitionSingleLineRule__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PartitionSingleLineRule__Group__1__Impl
	rule__PartitionSingleLineRule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PartitionSingleLineRule__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPartitionSingleLineRuleAccess().getParitionAssignment_1()); }
(rule__PartitionSingleLineRule__ParitionAssignment_1)
{ after(grammarAccess.getPartitionSingleLineRuleAccess().getParitionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PartitionSingleLineRule__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PartitionSingleLineRule__Group__2__Impl
	rule__PartitionSingleLineRule__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PartitionSingleLineRule__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPartitionSingleLineRuleAccess().getStartSeqAssignment_2()); }
(rule__PartitionSingleLineRule__StartSeqAssignment_2)
{ after(grammarAccess.getPartitionSingleLineRuleAccess().getStartSeqAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PartitionSingleLineRule__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PartitionSingleLineRule__Group__3__Impl
	rule__PartitionSingleLineRule__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PartitionSingleLineRule__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPartitionSingleLineRuleAccess().getEqualsSignGreaterThanSignKeyword_3()); }

	'=>' 

{ after(grammarAccess.getPartitionSingleLineRuleAccess().getEqualsSignGreaterThanSignKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PartitionSingleLineRule__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PartitionSingleLineRule__Group__4__Impl
	rule__PartitionSingleLineRule__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__PartitionSingleLineRule__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPartitionSingleLineRuleAccess().getEndSeqAssignment_4()); }
(rule__PartitionSingleLineRule__EndSeqAssignment_4)
{ after(grammarAccess.getPartitionSingleLineRuleAccess().getEndSeqAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PartitionSingleLineRule__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PartitionSingleLineRule__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PartitionSingleLineRule__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPartitionSingleLineRuleAccess().getGroup_5()); }
(rule__PartitionSingleLineRule__Group_5__0)?
{ after(grammarAccess.getPartitionSingleLineRuleAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__PartitionSingleLineRule__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PartitionSingleLineRule__Group_5__0__Impl
	rule__PartitionSingleLineRule__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PartitionSingleLineRule__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPartitionSingleLineRuleAccess().getEscapedKeyword_5_0()); }

	'escaped' 

{ after(grammarAccess.getPartitionSingleLineRuleAccess().getEscapedKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PartitionSingleLineRule__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PartitionSingleLineRule__Group_5__1__Impl
	rule__PartitionSingleLineRule__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PartitionSingleLineRule__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPartitionSingleLineRuleAccess().getByKeyword_5_1()); }

	'by' 

{ after(grammarAccess.getPartitionSingleLineRuleAccess().getByKeyword_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PartitionSingleLineRule__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PartitionSingleLineRule__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PartitionSingleLineRule__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPartitionSingleLineRuleAccess().getEscapeSeqAssignment_5_2()); }
(rule__PartitionSingleLineRule__EscapeSeqAssignment_5_2)
{ after(grammarAccess.getPartitionSingleLineRuleAccess().getEscapeSeqAssignment_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ScannerMultiLineRule__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScannerMultiLineRule__Group__0__Impl
	rule__ScannerMultiLineRule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ScannerMultiLineRule__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScannerMultiLineRuleAccess().getMultiLineKeyword_0()); }

	'multi-line' 

{ after(grammarAccess.getScannerMultiLineRuleAccess().getMultiLineKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ScannerMultiLineRule__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScannerMultiLineRule__Group__1__Impl
	rule__ScannerMultiLineRule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ScannerMultiLineRule__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScannerMultiLineRuleAccess().getTokenAssignment_1()); }
(rule__ScannerMultiLineRule__TokenAssignment_1)
{ after(grammarAccess.getScannerMultiLineRuleAccess().getTokenAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ScannerMultiLineRule__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScannerMultiLineRule__Group__2__Impl
	rule__ScannerMultiLineRule__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ScannerMultiLineRule__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScannerMultiLineRuleAccess().getStartSeqAssignment_2()); }
(rule__ScannerMultiLineRule__StartSeqAssignment_2)
{ after(grammarAccess.getScannerMultiLineRuleAccess().getStartSeqAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ScannerMultiLineRule__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScannerMultiLineRule__Group__3__Impl
	rule__ScannerMultiLineRule__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ScannerMultiLineRule__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScannerMultiLineRuleAccess().getEqualsSignGreaterThanSignKeyword_3()); }

	'=>' 

{ after(grammarAccess.getScannerMultiLineRuleAccess().getEqualsSignGreaterThanSignKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ScannerMultiLineRule__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScannerMultiLineRule__Group__4__Impl
	rule__ScannerMultiLineRule__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ScannerMultiLineRule__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScannerMultiLineRuleAccess().getEndSeqAssignment_4()); }
(rule__ScannerMultiLineRule__EndSeqAssignment_4)
{ after(grammarAccess.getScannerMultiLineRuleAccess().getEndSeqAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ScannerMultiLineRule__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScannerMultiLineRule__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ScannerMultiLineRule__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScannerMultiLineRuleAccess().getGroup_5()); }
(rule__ScannerMultiLineRule__Group_5__0)?
{ after(grammarAccess.getScannerMultiLineRuleAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__ScannerMultiLineRule__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScannerMultiLineRule__Group_5__0__Impl
	rule__ScannerMultiLineRule__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ScannerMultiLineRule__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScannerMultiLineRuleAccess().getEscapedKeyword_5_0()); }

	'escaped' 

{ after(grammarAccess.getScannerMultiLineRuleAccess().getEscapedKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ScannerMultiLineRule__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScannerMultiLineRule__Group_5__1__Impl
	rule__ScannerMultiLineRule__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ScannerMultiLineRule__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScannerMultiLineRuleAccess().getByKeyword_5_1()); }

	'by' 

{ after(grammarAccess.getScannerMultiLineRuleAccess().getByKeyword_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ScannerMultiLineRule__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScannerMultiLineRule__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ScannerMultiLineRule__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScannerMultiLineRuleAccess().getEscapeSeqAssignment_5_2()); }
(rule__ScannerMultiLineRule__EscapeSeqAssignment_5_2)
{ after(grammarAccess.getScannerMultiLineRuleAccess().getEscapeSeqAssignment_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PartitionMultiLineRule__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PartitionMultiLineRule__Group__0__Impl
	rule__PartitionMultiLineRule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PartitionMultiLineRule__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPartitionMultiLineRuleAccess().getMultiLineKeyword_0()); }

	'multi-line' 

{ after(grammarAccess.getPartitionMultiLineRuleAccess().getMultiLineKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PartitionMultiLineRule__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PartitionMultiLineRule__Group__1__Impl
	rule__PartitionMultiLineRule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PartitionMultiLineRule__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPartitionMultiLineRuleAccess().getTokenAssignment_1()); }
(rule__PartitionMultiLineRule__TokenAssignment_1)
{ after(grammarAccess.getPartitionMultiLineRuleAccess().getTokenAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PartitionMultiLineRule__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PartitionMultiLineRule__Group__2__Impl
	rule__PartitionMultiLineRule__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PartitionMultiLineRule__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPartitionMultiLineRuleAccess().getStartSeqAssignment_2()); }
(rule__PartitionMultiLineRule__StartSeqAssignment_2)
{ after(grammarAccess.getPartitionMultiLineRuleAccess().getStartSeqAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PartitionMultiLineRule__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PartitionMultiLineRule__Group__3__Impl
	rule__PartitionMultiLineRule__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PartitionMultiLineRule__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPartitionMultiLineRuleAccess().getEqualsSignGreaterThanSignKeyword_3()); }

	'=>' 

{ after(grammarAccess.getPartitionMultiLineRuleAccess().getEqualsSignGreaterThanSignKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PartitionMultiLineRule__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PartitionMultiLineRule__Group__4__Impl
	rule__PartitionMultiLineRule__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__PartitionMultiLineRule__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPartitionMultiLineRuleAccess().getEndSeqAssignment_4()); }
(rule__PartitionMultiLineRule__EndSeqAssignment_4)
{ after(grammarAccess.getPartitionMultiLineRuleAccess().getEndSeqAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PartitionMultiLineRule__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PartitionMultiLineRule__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PartitionMultiLineRule__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPartitionMultiLineRuleAccess().getGroup_5()); }
(rule__PartitionMultiLineRule__Group_5__0)?
{ after(grammarAccess.getPartitionMultiLineRuleAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__PartitionMultiLineRule__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PartitionMultiLineRule__Group_5__0__Impl
	rule__PartitionMultiLineRule__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PartitionMultiLineRule__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPartitionMultiLineRuleAccess().getEscapedKeyword_5_0()); }

	'escaped' 

{ after(grammarAccess.getPartitionMultiLineRuleAccess().getEscapedKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PartitionMultiLineRule__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PartitionMultiLineRule__Group_5__1__Impl
	rule__PartitionMultiLineRule__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PartitionMultiLineRule__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPartitionMultiLineRuleAccess().getByKeyword_5_1()); }

	'by' 

{ after(grammarAccess.getPartitionMultiLineRuleAccess().getByKeyword_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PartitionMultiLineRule__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PartitionMultiLineRule__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PartitionMultiLineRule__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPartitionMultiLineRuleAccess().getEscapeSeqAssignment_5_2()); }
(rule__PartitionMultiLineRule__EscapeSeqAssignment_5_2)
{ after(grammarAccess.getPartitionMultiLineRuleAccess().getEscapeSeqAssignment_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ScannerCharacterRule__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScannerCharacterRule__Group__0__Impl
	rule__ScannerCharacterRule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ScannerCharacterRule__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScannerCharacterRuleAccess().getCharacterRuleKeyword_0()); }

	'character-rule' 

{ after(grammarAccess.getScannerCharacterRuleAccess().getCharacterRuleKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ScannerCharacterRule__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScannerCharacterRule__Group__1__Impl
	rule__ScannerCharacterRule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ScannerCharacterRule__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScannerCharacterRuleAccess().getTokenAssignment_1()); }
(rule__ScannerCharacterRule__TokenAssignment_1)
{ after(grammarAccess.getScannerCharacterRuleAccess().getTokenAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ScannerCharacterRule__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScannerCharacterRule__Group__2__Impl
	rule__ScannerCharacterRule__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ScannerCharacterRule__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScannerCharacterRuleAccess().getLeftSquareBracketKeyword_2()); }

	'[' 

{ after(grammarAccess.getScannerCharacterRuleAccess().getLeftSquareBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ScannerCharacterRule__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScannerCharacterRule__Group__3__Impl
	rule__ScannerCharacterRule__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ScannerCharacterRule__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScannerCharacterRuleAccess().getCharactersAssignment_3()); }
(rule__ScannerCharacterRule__CharactersAssignment_3)
{ after(grammarAccess.getScannerCharacterRuleAccess().getCharactersAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ScannerCharacterRule__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScannerCharacterRule__Group__4__Impl
	rule__ScannerCharacterRule__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ScannerCharacterRule__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScannerCharacterRuleAccess().getCommaKeyword_4()); }

	',' 

{ after(grammarAccess.getScannerCharacterRuleAccess().getCommaKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ScannerCharacterRule__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScannerCharacterRule__Group__5__Impl
	rule__ScannerCharacterRule__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ScannerCharacterRule__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScannerCharacterRuleAccess().getCharactersAssignment_5()); }
(rule__ScannerCharacterRule__CharactersAssignment_5)
{ after(grammarAccess.getScannerCharacterRuleAccess().getCharactersAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ScannerCharacterRule__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScannerCharacterRule__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ScannerCharacterRule__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScannerCharacterRuleAccess().getRightSquareBracketKeyword_6()); }

	']' 

{ after(grammarAccess.getScannerCharacterRuleAccess().getRightSquareBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__ScannerJSRule__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScannerJSRule__Group__0__Impl
	rule__ScannerJSRule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ScannerJSRule__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScannerJSRuleAccess().getJavascriptRuleKeyword_0()); }

	'javascript-rule' 

{ after(grammarAccess.getScannerJSRuleAccess().getJavascriptRuleKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ScannerJSRule__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScannerJSRule__Group__1__Impl
	rule__ScannerJSRule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ScannerJSRule__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScannerJSRuleAccess().getTokenAssignment_1()); }
(rule__ScannerJSRule__TokenAssignment_1)
{ after(grammarAccess.getScannerJSRuleAccess().getTokenAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ScannerJSRule__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScannerJSRule__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ScannerJSRule__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScannerJSRuleAccess().getFileURIAssignment_2()); }
(rule__ScannerJSRule__FileURIAssignment_2)
{ after(grammarAccess.getScannerJSRuleAccess().getFileURIAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PartitionJSRule__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PartitionJSRule__Group__0__Impl
	rule__PartitionJSRule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PartitionJSRule__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPartitionJSRuleAccess().getJavascriptRuleKeyword_0()); }

	'javascript-rule' 

{ after(grammarAccess.getPartitionJSRuleAccess().getJavascriptRuleKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PartitionJSRule__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PartitionJSRule__Group__1__Impl
	rule__PartitionJSRule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PartitionJSRule__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPartitionJSRuleAccess().getTokenAssignment_1()); }
(rule__PartitionJSRule__TokenAssignment_1)
{ after(grammarAccess.getPartitionJSRuleAccess().getTokenAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PartitionJSRule__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PartitionJSRule__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PartitionJSRule__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPartitionJSRuleAccess().getFileURIAssignment_2()); }
(rule__PartitionJSRule__FileURIAssignment_2)
{ after(grammarAccess.getPartitionJSRuleAccess().getFileURIAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ScannerWhitespaceRule__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScannerWhitespaceRule__Group_0__0__Impl
	rule__ScannerWhitespaceRule__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ScannerWhitespaceRule__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScannerWhitespaceRuleAccess().getWhitespaceRuleKeyword_0_0()); }

	'whitespace-rule' 

{ after(grammarAccess.getScannerWhitespaceRuleAccess().getWhitespaceRuleKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ScannerWhitespaceRule__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScannerWhitespaceRule__Group_0__1__Impl
	rule__ScannerWhitespaceRule__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ScannerWhitespaceRule__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScannerWhitespaceRuleAccess().getTokenAssignment_0_1()); }
(rule__ScannerWhitespaceRule__TokenAssignment_0_1)?
{ after(grammarAccess.getScannerWhitespaceRuleAccess().getTokenAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ScannerWhitespaceRule__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScannerWhitespaceRule__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ScannerWhitespaceRule__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScannerWhitespaceRuleAccess().getGroup_0_2()); }
(rule__ScannerWhitespaceRule__Group_0_2__0)
{ after(grammarAccess.getScannerWhitespaceRuleAccess().getGroup_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ScannerWhitespaceRule__Group_0_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScannerWhitespaceRule__Group_0_2__0__Impl
	rule__ScannerWhitespaceRule__Group_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ScannerWhitespaceRule__Group_0_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScannerWhitespaceRuleAccess().getLeftSquareBracketKeyword_0_2_0()); }

	'[' 

{ after(grammarAccess.getScannerWhitespaceRuleAccess().getLeftSquareBracketKeyword_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ScannerWhitespaceRule__Group_0_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScannerWhitespaceRule__Group_0_2__1__Impl
	rule__ScannerWhitespaceRule__Group_0_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ScannerWhitespaceRule__Group_0_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScannerWhitespaceRuleAccess().getCharactersAssignment_0_2_1()); }
(rule__ScannerWhitespaceRule__CharactersAssignment_0_2_1)
{ after(grammarAccess.getScannerWhitespaceRuleAccess().getCharactersAssignment_0_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ScannerWhitespaceRule__Group_0_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScannerWhitespaceRule__Group_0_2__2__Impl
	rule__ScannerWhitespaceRule__Group_0_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ScannerWhitespaceRule__Group_0_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScannerWhitespaceRuleAccess().getGroup_0_2_2()); }
(rule__ScannerWhitespaceRule__Group_0_2_2__0)*
{ after(grammarAccess.getScannerWhitespaceRuleAccess().getGroup_0_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ScannerWhitespaceRule__Group_0_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScannerWhitespaceRule__Group_0_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ScannerWhitespaceRule__Group_0_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScannerWhitespaceRuleAccess().getRightSquareBracketKeyword_0_2_3()); }

	']' 

{ after(grammarAccess.getScannerWhitespaceRuleAccess().getRightSquareBracketKeyword_0_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ScannerWhitespaceRule__Group_0_2_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScannerWhitespaceRule__Group_0_2_2__0__Impl
	rule__ScannerWhitespaceRule__Group_0_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ScannerWhitespaceRule__Group_0_2_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScannerWhitespaceRuleAccess().getCommaKeyword_0_2_2_0()); }

	',' 

{ after(grammarAccess.getScannerWhitespaceRuleAccess().getCommaKeyword_0_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ScannerWhitespaceRule__Group_0_2_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScannerWhitespaceRule__Group_0_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ScannerWhitespaceRule__Group_0_2_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScannerWhitespaceRuleAccess().getCharactersAssignment_0_2_2_1()); }
(rule__ScannerWhitespaceRule__CharactersAssignment_0_2_2_1)
{ after(grammarAccess.getScannerWhitespaceRuleAccess().getCharactersAssignment_0_2_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ScannerWhitespaceRule__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScannerWhitespaceRule__Group_1__0__Impl
	rule__ScannerWhitespaceRule__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ScannerWhitespaceRule__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScannerWhitespaceRuleAccess().getNumberSignLeftCurlyBracketKeyword_1_0()); }

	'#{' 

{ after(grammarAccess.getScannerWhitespaceRuleAccess().getNumberSignLeftCurlyBracketKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ScannerWhitespaceRule__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScannerWhitespaceRule__Group_1__1__Impl
	rule__ScannerWhitespaceRule__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ScannerWhitespaceRule__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScannerWhitespaceRuleAccess().getJsMethodAssignment_1_1()); }
(rule__ScannerWhitespaceRule__JsMethodAssignment_1_1)
{ after(grammarAccess.getScannerWhitespaceRuleAccess().getJsMethodAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ScannerWhitespaceRule__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScannerWhitespaceRule__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ScannerWhitespaceRule__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScannerWhitespaceRuleAccess().getRightCurlyBracketNumberSignKeyword_1_2()); }

	'}#' 

{ after(grammarAccess.getScannerWhitespaceRuleAccess().getRightCurlyBracketNumberSignKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__RGBColor__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RGBColor__Group__0__Impl
	rule__RGBColor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RGBColor__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRGBColorAccess().getRgbKeyword_0()); }

	'rgb' 

{ after(grammarAccess.getRGBColorAccess().getRgbKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RGBColor__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RGBColor__Group__1__Impl
	rule__RGBColor__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RGBColor__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRGBColorAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getRGBColorAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RGBColor__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RGBColor__Group__2__Impl
	rule__RGBColor__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RGBColor__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRGBColorAccess().getRAssignment_2()); }
(rule__RGBColor__RAssignment_2)
{ after(grammarAccess.getRGBColorAccess().getRAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RGBColor__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RGBColor__Group__3__Impl
	rule__RGBColor__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RGBColor__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRGBColorAccess().getCommaKeyword_3()); }

	',' 

{ after(grammarAccess.getRGBColorAccess().getCommaKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RGBColor__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RGBColor__Group__4__Impl
	rule__RGBColor__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__RGBColor__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRGBColorAccess().getGAssignment_4()); }
(rule__RGBColor__GAssignment_4)
{ after(grammarAccess.getRGBColorAccess().getGAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RGBColor__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RGBColor__Group__5__Impl
	rule__RGBColor__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__RGBColor__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRGBColorAccess().getCommaKeyword_5()); }

	',' 

{ after(grammarAccess.getRGBColorAccess().getCommaKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RGBColor__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RGBColor__Group__6__Impl
	rule__RGBColor__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__RGBColor__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRGBColorAccess().getBAssignment_6()); }
(rule__RGBColor__BAssignment_6)
{ after(grammarAccess.getRGBColorAccess().getBAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RGBColor__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RGBColor__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RGBColor__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRGBColorAccess().getRightParenthesisKeyword_7()); }

	')' 

{ after(grammarAccess.getRGBColorAccess().getRightParenthesisKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__Font__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Font__Group__0__Impl
	rule__Font__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Font__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFontAccess().getNameAssignment_0()); }
(rule__Font__NameAssignment_0)
{ after(grammarAccess.getFontAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Font__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Font__Group__1__Impl
	rule__Font__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Font__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFontAccess().getSizeAssignment_1()); }
(rule__Font__SizeAssignment_1)
{ after(grammarAccess.getFontAccess().getSizeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Font__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Font__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Font__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFontAccess().getAttributesAssignment_2()); }
(rule__Font__AttributesAssignment_2)*
{ after(grammarAccess.getFontAccess().getAttributesAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}









rule__Model__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getModelAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__PartitionsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getPartitionsPartitionParserRuleCall_2_0()); }
	rulePartition{ after(grammarAccess.getModelAccess().getPartitionsPartitionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__ScannerAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getScannerScannerParserRuleCall_3_0()); }
	ruleScanner{ after(grammarAccess.getModelAccess().getScannerScannerParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__PartitionerAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getPartitionerPartitionerParserRuleCall_4_0()); }
	rulePartitioner{ after(grammarAccess.getModelAccess().getPartitionerPartitionerParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Partition__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPartitionAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getPartitionAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RulePartitioner__RulesAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRulePartitionerAccess().getRulesParitionRuleParserRuleCall_2_0()); }
	ruleParitionRule{ after(grammarAccess.getRulePartitionerAccess().getRulesParitionRuleParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JSParitioner__FileURIAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJSParitionerAccess().getFileURISTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getJSParitionerAccess().getFileURISTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Scanner__PartitionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScannerAccess().getPartitionPartitionCrossReference_1_0()); }
(
{ before(grammarAccess.getScannerAccess().getPartitionPartitionIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getScannerAccess().getPartitionPartitionIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getScannerAccess().getPartitionPartitionCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Scanner__TokensAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScannerAccess().getTokensScannerTokenParserRuleCall_3_0()); }
	ruleScannerToken{ after(grammarAccess.getScannerAccess().getTokensScannerTokenParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Scanner__KeywordGroupsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScannerAccess().getKeywordGroupsKeywordGroupParserRuleCall_4_0()); }
	ruleKeywordGroup{ after(grammarAccess.getScannerAccess().getKeywordGroupsKeywordGroupParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Scanner__RulesAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScannerAccess().getRulesScannerRuleParserRuleCall_5_0()); }
	ruleScannerRule{ after(grammarAccess.getScannerAccess().getRulesScannerRuleParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ScannerToken__DefaultAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScannerTokenAccess().getDefaultDefaultKeyword_0_0()); }
(
{ before(grammarAccess.getScannerTokenAccess().getDefaultDefaultKeyword_0_0()); }

	'default' 

{ after(grammarAccess.getScannerTokenAccess().getDefaultDefaultKeyword_0_0()); }
)

{ after(grammarAccess.getScannerTokenAccess().getDefaultDefaultKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ScannerToken__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScannerTokenAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getScannerTokenAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ScannerToken__FgColorAssignment_3_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScannerTokenAccess().getFgColorColorParserRuleCall_3_1_2_0()); }
	ruleColor{ after(grammarAccess.getScannerTokenAccess().getFgColorColorParserRuleCall_3_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ScannerToken__BgColorAssignment_3_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScannerTokenAccess().getBgColorColorParserRuleCall_3_2_2_0()); }
	ruleColor{ after(grammarAccess.getScannerTokenAccess().getBgColorColorParserRuleCall_3_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ScannerToken__FontAssignment_3_3_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScannerTokenAccess().getFontFontParserRuleCall_3_3_2_0()); }
	ruleFont{ after(grammarAccess.getScannerTokenAccess().getFontFontParserRuleCall_3_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__KeywordGroup__TokenAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeywordGroupAccess().getTokenScannerTokenCrossReference_1_0()); }
(
{ before(grammarAccess.getKeywordGroupAccess().getTokenScannerTokenIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getKeywordGroupAccess().getTokenScannerTokenIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getKeywordGroupAccess().getTokenScannerTokenCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__KeywordGroup__KeywordsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeywordGroupAccess().getKeywordsKeywordParserRuleCall_3_0()); }
	ruleKeyword{ after(grammarAccess.getKeywordGroupAccess().getKeywordsKeywordParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__KeywordGroup__KeywordsAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeywordGroupAccess().getKeywordsKeywordParserRuleCall_4_1_0()); }
	ruleKeyword{ after(grammarAccess.getKeywordGroupAccess().getKeywordsKeywordParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Keyword__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeywordAccess().getNameSTRINGTerminalRuleCall_0_0()); }
	RULE_STRING{ after(grammarAccess.getKeywordAccess().getNameSTRINGTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Keyword__VersionAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeywordAccess().getVersionSTRINGTerminalRuleCall_1_1_0()); }
	RULE_STRING{ after(grammarAccess.getKeywordAccess().getVersionSTRINGTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ScannerSingleLineRule__TokenAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScannerSingleLineRuleAccess().getTokenScannerTokenCrossReference_1_0()); }
(
{ before(grammarAccess.getScannerSingleLineRuleAccess().getTokenScannerTokenIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getScannerSingleLineRuleAccess().getTokenScannerTokenIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getScannerSingleLineRuleAccess().getTokenScannerTokenCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ScannerSingleLineRule__StartSeqAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScannerSingleLineRuleAccess().getStartSeqSTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getScannerSingleLineRuleAccess().getStartSeqSTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ScannerSingleLineRule__EndSeqAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScannerSingleLineRuleAccess().getEndSeqSTRINGTerminalRuleCall_4_0()); }
	RULE_STRING{ after(grammarAccess.getScannerSingleLineRuleAccess().getEndSeqSTRINGTerminalRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ScannerSingleLineRule__EscapeSeqAssignment_5_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScannerSingleLineRuleAccess().getEscapeSeqSTRINGTerminalRuleCall_5_2_0()); }
	RULE_STRING{ after(grammarAccess.getScannerSingleLineRuleAccess().getEscapeSeqSTRINGTerminalRuleCall_5_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PartitionSingleLineRule__ParitionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPartitionSingleLineRuleAccess().getParitionPartitionCrossReference_1_0()); }
(
{ before(grammarAccess.getPartitionSingleLineRuleAccess().getParitionPartitionIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getPartitionSingleLineRuleAccess().getParitionPartitionIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getPartitionSingleLineRuleAccess().getParitionPartitionCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PartitionSingleLineRule__StartSeqAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPartitionSingleLineRuleAccess().getStartSeqSTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getPartitionSingleLineRuleAccess().getStartSeqSTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PartitionSingleLineRule__EndSeqAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPartitionSingleLineRuleAccess().getEndSeqSTRINGTerminalRuleCall_4_0()); }
	RULE_STRING{ after(grammarAccess.getPartitionSingleLineRuleAccess().getEndSeqSTRINGTerminalRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PartitionSingleLineRule__EscapeSeqAssignment_5_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPartitionSingleLineRuleAccess().getEscapeSeqSTRINGTerminalRuleCall_5_2_0()); }
	RULE_STRING{ after(grammarAccess.getPartitionSingleLineRuleAccess().getEscapeSeqSTRINGTerminalRuleCall_5_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ScannerMultiLineRule__TokenAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScannerMultiLineRuleAccess().getTokenScannerTokenCrossReference_1_0()); }
(
{ before(grammarAccess.getScannerMultiLineRuleAccess().getTokenScannerTokenIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getScannerMultiLineRuleAccess().getTokenScannerTokenIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getScannerMultiLineRuleAccess().getTokenScannerTokenCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ScannerMultiLineRule__StartSeqAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScannerMultiLineRuleAccess().getStartSeqSTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getScannerMultiLineRuleAccess().getStartSeqSTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ScannerMultiLineRule__EndSeqAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScannerMultiLineRuleAccess().getEndSeqSTRINGTerminalRuleCall_4_0()); }
	RULE_STRING{ after(grammarAccess.getScannerMultiLineRuleAccess().getEndSeqSTRINGTerminalRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ScannerMultiLineRule__EscapeSeqAssignment_5_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScannerMultiLineRuleAccess().getEscapeSeqSTRINGTerminalRuleCall_5_2_0()); }
	RULE_STRING{ after(grammarAccess.getScannerMultiLineRuleAccess().getEscapeSeqSTRINGTerminalRuleCall_5_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PartitionMultiLineRule__TokenAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPartitionMultiLineRuleAccess().getTokenPartitionCrossReference_1_0()); }
(
{ before(grammarAccess.getPartitionMultiLineRuleAccess().getTokenPartitionIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getPartitionMultiLineRuleAccess().getTokenPartitionIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getPartitionMultiLineRuleAccess().getTokenPartitionCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PartitionMultiLineRule__StartSeqAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPartitionMultiLineRuleAccess().getStartSeqSTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getPartitionMultiLineRuleAccess().getStartSeqSTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PartitionMultiLineRule__EndSeqAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPartitionMultiLineRuleAccess().getEndSeqSTRINGTerminalRuleCall_4_0()); }
	RULE_STRING{ after(grammarAccess.getPartitionMultiLineRuleAccess().getEndSeqSTRINGTerminalRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PartitionMultiLineRule__EscapeSeqAssignment_5_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPartitionMultiLineRuleAccess().getEscapeSeqSTRINGTerminalRuleCall_5_2_0()); }
	RULE_STRING{ after(grammarAccess.getPartitionMultiLineRuleAccess().getEscapeSeqSTRINGTerminalRuleCall_5_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ScannerCharacterRule__TokenAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScannerCharacterRuleAccess().getTokenScannerTokenCrossReference_1_0()); }
(
{ before(grammarAccess.getScannerCharacterRuleAccess().getTokenScannerTokenIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getScannerCharacterRuleAccess().getTokenScannerTokenIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getScannerCharacterRuleAccess().getTokenScannerTokenCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ScannerCharacterRule__CharactersAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScannerCharacterRuleAccess().getCharactersSTRINGTerminalRuleCall_3_0()); }
	RULE_STRING{ after(grammarAccess.getScannerCharacterRuleAccess().getCharactersSTRINGTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ScannerCharacterRule__CharactersAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScannerCharacterRuleAccess().getCharactersSTRINGTerminalRuleCall_5_0()); }
	RULE_STRING{ after(grammarAccess.getScannerCharacterRuleAccess().getCharactersSTRINGTerminalRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ScannerJSRule__TokenAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScannerJSRuleAccess().getTokenScannerTokenCrossReference_1_0()); }
(
{ before(grammarAccess.getScannerJSRuleAccess().getTokenScannerTokenIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getScannerJSRuleAccess().getTokenScannerTokenIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getScannerJSRuleAccess().getTokenScannerTokenCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ScannerJSRule__FileURIAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScannerJSRuleAccess().getFileURISTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getScannerJSRuleAccess().getFileURISTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PartitionJSRule__TokenAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPartitionJSRuleAccess().getTokenPartitionCrossReference_1_0()); }
(
{ before(grammarAccess.getPartitionJSRuleAccess().getTokenPartitionIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getPartitionJSRuleAccess().getTokenPartitionIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getPartitionJSRuleAccess().getTokenPartitionCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PartitionJSRule__FileURIAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPartitionJSRuleAccess().getFileURISTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getPartitionJSRuleAccess().getFileURISTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ScannerWhitespaceRule__TokenAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScannerWhitespaceRuleAccess().getTokenScannerTokenCrossReference_0_1_0()); }
(
{ before(grammarAccess.getScannerWhitespaceRuleAccess().getTokenScannerTokenIDTerminalRuleCall_0_1_0_1()); }
	RULE_ID{ after(grammarAccess.getScannerWhitespaceRuleAccess().getTokenScannerTokenIDTerminalRuleCall_0_1_0_1()); }
)
{ after(grammarAccess.getScannerWhitespaceRuleAccess().getTokenScannerTokenCrossReference_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ScannerWhitespaceRule__CharactersAssignment_0_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScannerWhitespaceRuleAccess().getCharactersSTRINGTerminalRuleCall_0_2_1_0()); }
	RULE_STRING{ after(grammarAccess.getScannerWhitespaceRuleAccess().getCharactersSTRINGTerminalRuleCall_0_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ScannerWhitespaceRule__CharactersAssignment_0_2_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScannerWhitespaceRuleAccess().getCharactersSTRINGTerminalRuleCall_0_2_2_1_0()); }
	RULE_STRING{ after(grammarAccess.getScannerWhitespaceRuleAccess().getCharactersSTRINGTerminalRuleCall_0_2_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ScannerWhitespaceRule__JsMethodAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScannerWhitespaceRuleAccess().getJsMethodANY_OTHERTerminalRuleCall_1_1_0()); }
	RULE_ANY_OTHER{ after(grammarAccess.getScannerWhitespaceRuleAccess().getJsMethodANY_OTHERTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RGBColor__RAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRGBColorAccess().getRINTTerminalRuleCall_2_0()); }
	RULE_INT{ after(grammarAccess.getRGBColorAccess().getRINTTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RGBColor__GAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRGBColorAccess().getGINTTerminalRuleCall_4_0()); }
	RULE_INT{ after(grammarAccess.getRGBColorAccess().getGINTTerminalRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RGBColor__BAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRGBColorAccess().getBINTTerminalRuleCall_6_0()); }
	RULE_INT{ after(grammarAccess.getRGBColorAccess().getBINTTerminalRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Font__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFontAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getFontAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Font__SizeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFontAccess().getSizeINTTerminalRuleCall_1_0()); }
	RULE_INT{ after(grammarAccess.getFontAccess().getSizeINTTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Font__AttributesAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFontAccess().getAttributesFontTypeEnumRuleCall_2_0()); }
	ruleFontType{ after(grammarAccess.getFontAccess().getAttributesFontTypeEnumRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


