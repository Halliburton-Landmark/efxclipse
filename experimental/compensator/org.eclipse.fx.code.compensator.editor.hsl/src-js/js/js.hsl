JS {
	partition __dftl_partition_content_type
	partition __javascript_javadoc
	partition __javascript_multiline_comment
	partition __javascript_singleline_comment
	partition __javascript_string
	partition __javascript_character
	rule-damager __dftl_partition_content_type {
		default token javascript_default { fgcolor : rgb(0, 0, 0) }
		token javascript_string { fgcolor : rgb(42, 0, 255) }
		token javascript_operator { fgcolor : rgb(0, 0, 0) }
		token javascript_bracket { fgcolor : rgb(0, 0, 0) }
		token javascript_keyword_return { fgcolor : rgb(127, 0, 85) }
		token javascript_keyword { fgcolor : rgb(127, 0, 85) }
		keywords javascript_keyword_return [ "return" ]
		keywords javascript_keyword [ 
			"break",	"case",		"catch",	"continue",	"debugger",
	    	"default",	"delete",	"do",		"else",		"finally",
	    	"for",		"function",	"if",		"in",		"instanceof",
	    	"new",		"switch",	"this",		"throw",	"try",		
	    	"typeof",	"var",		"void",		"while",	"with"]
		single-line javascript_string "'" => "'" escaped by "\\"
		whitespace-rule javascript_default javawhitespace
		character-rule javascript_operator [ ';', '.', '=', '/', '\\', '+', '-', '*', '<', '>', ':', '?', '!', ',', '|', '&', '^', '%', '~' ]
		character-rule javascript_bracket [ '(', ')', '{', '}', '[', ']' ]
	}
	rule-damager __javascript_javadoc {
		default token java_doc_default { fgcolor : rgb( 63, 95, 191 ) }
		//TODO not fully ported
	}
	rule-damager __javascript_singleline_comment {
		default token java_single_line_comment { fgcolor : rgb(63, 127, 95) }
		//TODO not fully ported
	}
	rule-damager __javascript_multiline_comment {
		default token java_multi_line_comment { fgcolor : rgb(63, 127, 95) }
		//TODO not fully ported
	}
	rule-damager __javascript_string {
		
	}
	java-like-partitioner {
		singlelinedoc __javascript_singleline_comment
		multilinedoc __javascript_multiline_comment
		javadoc __javascript_javadoc
		char __javascript_character
		string __javascript_string
	}
} for "text/xml"